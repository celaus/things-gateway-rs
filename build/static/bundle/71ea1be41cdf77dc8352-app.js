/******/ (function(modules) { // webpackBootstrap
/******/ 	// install a JSONP callback for chunk loading
/******/ 	function webpackJsonpCallback(data) {
/******/ 		var chunkIds = data[0];
/******/ 		var moreModules = data[1];
/******/
/******/
/******/ 		// add "moreModules" to the modules object,
/******/ 		// then flag all "chunkIds" as loaded and fire callback
/******/ 		var moduleId, chunkId, i = 0, resolves = [];
/******/ 		for(;i < chunkIds.length; i++) {
/******/ 			chunkId = chunkIds[i];
/******/ 			if(installedChunks[chunkId]) {
/******/ 				resolves.push(installedChunks[chunkId][0]);
/******/ 			}
/******/ 			installedChunks[chunkId] = 0;
/******/ 		}
/******/ 		for(moduleId in moreModules) {
/******/ 			if(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {
/******/ 				modules[moduleId] = moreModules[moduleId];
/******/ 			}
/******/ 		}
/******/ 		if(parentJsonpFunction) parentJsonpFunction(data);
/******/
/******/ 		while(resolves.length) {
/******/ 			resolves.shift()();
/******/ 		}
/******/
/******/ 	};
/******/
/******/
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// object to store loaded and loading chunks
/******/ 	// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 	// Promise = chunk loading, 0 = chunk loaded
/******/ 	var installedChunks = {
/******/ 		"app.js": 0
/******/ 	};
/******/
/******/
/******/
/******/ 	// script path function
/******/ 	function jsonpScriptSrc(chunkId) {
/******/ 		return __webpack_require__.p + "bundle/" + "71ea1be41cdf77dc8352" + "-" + ({"vendors~ajv.js":"vendors~ajv.js","vendors~stm_web.min.js":"vendors~stm_web.min.js"}[chunkId]||chunkId) + ""
/******/ 	}
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/ 	// This file contains only the entry chunk.
/******/ 	// The chunk loading function for additional chunks
/******/ 	__webpack_require__.e = function requireEnsure(chunkId) {
/******/ 		var promises = [];
/******/
/******/
/******/ 		// JSONP chunk loading for javascript
/******/
/******/ 		var installedChunkData = installedChunks[chunkId];
/******/ 		if(installedChunkData !== 0) { // 0 means "already installed".
/******/
/******/ 			// a Promise means "currently loading".
/******/ 			if(installedChunkData) {
/******/ 				promises.push(installedChunkData[2]);
/******/ 			} else {
/******/ 				// setup Promise in chunk cache
/******/ 				var promise = new Promise(function(resolve, reject) {
/******/ 					installedChunkData = installedChunks[chunkId] = [resolve, reject];
/******/ 				});
/******/ 				promises.push(installedChunkData[2] = promise);
/******/
/******/ 				// start chunk loading
/******/ 				var head = document.getElementsByTagName('head')[0];
/******/ 				var script = document.createElement('script');
/******/ 				var onScriptComplete;
/******/
/******/ 				script.charset = 'utf-8';
/******/ 				script.timeout = 120;
/******/ 				if (__webpack_require__.nc) {
/******/ 					script.setAttribute("nonce", __webpack_require__.nc);
/******/ 				}
/******/ 				script.src = jsonpScriptSrc(chunkId);
/******/
/******/ 				onScriptComplete = function (event) {
/******/ 					// avoid mem leaks in IE.
/******/ 					script.onerror = script.onload = null;
/******/ 					clearTimeout(timeout);
/******/ 					var chunk = installedChunks[chunkId];
/******/ 					if(chunk !== 0) {
/******/ 						if(chunk) {
/******/ 							var errorType = event && (event.type === 'load' ? 'missing' : event.type);
/******/ 							var realSrc = event && event.target && event.target.src;
/******/ 							var error = new Error('Loading chunk ' + chunkId + ' failed.\n(' + errorType + ': ' + realSrc + ')');
/******/ 							error.type = errorType;
/******/ 							error.request = realSrc;
/******/ 							chunk[1](error);
/******/ 						}
/******/ 						installedChunks[chunkId] = undefined;
/******/ 					}
/******/ 				};
/******/ 				var timeout = setTimeout(function(){
/******/ 					onScriptComplete({ type: 'timeout', target: script });
/******/ 				}, 120000);
/******/ 				script.onerror = script.onload = onScriptComplete;
/******/ 				head.appendChild(script);
/******/ 			}
/******/ 		}
/******/ 		return Promise.all(promises);
/******/ 	};
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/ 	// on error function for async loading
/******/ 	__webpack_require__.oe = function(err) { console.error(err); throw err; };
/******/
/******/ 	var jsonpArray = window["webpackJsonp"] = window["webpackJsonp"] || [];
/******/ 	var oldJsonpFunction = jsonpArray.push.bind(jsonpArray);
/******/ 	jsonpArray.push = webpackJsonpCallback;
/******/ 	jsonpArray = jsonpArray.slice();
/******/ 	for(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);
/******/ 	var parentJsonpFunction = oldJsonpFunction;
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/@webcomponents/webcomponentsjs/webcomponents-bundle.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@webcomponents/webcomponentsjs/webcomponents-bundle.js ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global, setImmediate) {/**
@license @nocompile
Copyright (c) 2018 The Polymer Project Authors. All rights reserved.
This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
Code distributed by Google as part of the polymer project is also
subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
*/
(function(){/*

 Copyright (c) 2016 The Polymer Project Authors. All rights reserved.
 This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
 The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
 The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
 Code distributed by Google as part of the polymer project is also
 subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
*/
'use strict';var r,aa="function"==typeof Object.defineProperties?Object.defineProperty:function(a,b,c){a!=Array.prototype&&a!=Object.prototype&&(a[b]=c.value)},fa="undefined"!=typeof window&&window===this?this:"undefined"!=typeof global&&null!=global?global:this;function ha(){ha=function(){};fa.Symbol||(fa.Symbol=ia)}var ia=function(){var a=0;return function(b){return"jscomp_symbol_"+(b||"")+a++}}();
function ja(){ha();var a=fa.Symbol.iterator;a||(a=fa.Symbol.iterator=fa.Symbol("iterator"));"function"!=typeof Array.prototype[a]&&aa(Array.prototype,a,{configurable:!0,writable:!0,value:function(){return ka(this)}});ja=function(){}}function ka(a){var b=0;return la(function(){return b<a.length?{done:!1,value:a[b++]}:{done:!0}})}function la(a){ja();a={next:a};a[fa.Symbol.iterator]=function(){return this};return a}function ma(a){ja();var b=a[Symbol.iterator];return b?b.call(a):ka(a)}
function na(a){for(var b,c=[];!(b=a.next()).done;)c.push(b.value);return c}var oa;if("function"==typeof Object.setPrototypeOf)oa=Object.setPrototypeOf;else{var pa;a:{var qa={Na:!0},ra={};try{ra.__proto__=qa;pa=ra.Na;break a}catch(a){}pa=!1}oa=pa?function(a,b){a.__proto__=b;if(a.__proto__!==b)throw new TypeError(a+" is not extensible");return a}:null}var sa=oa;function ta(){this.f=!1;this.b=null;this.fa=void 0;this.a=1;this.G=0;this.c=null}
function ua(a){if(a.f)throw new TypeError("Generator is already running");a.f=!0}ta.prototype.m=function(a){this.fa=a};function va(a,b){a.c={Qa:b,Ua:!0};a.a=a.G}ta.prototype.return=function(a){this.c={return:a};this.a=this.G};function wa(a,b){a.a=3;return{value:b}}function xa(a){this.a=new ta;this.b=a}function ya(a,b){ua(a.a);var c=a.a.b;if(c)return Ba(a,"return"in c?c["return"]:function(a){return{value:a,done:!0}},b,a.a.return);a.a.return(b);return Ca(a)}
function Ba(a,b,c,d){try{var e=b.call(a.a.b,c);if(!(e instanceof Object))throw new TypeError("Iterator result "+e+" is not an object");if(!e.done)return a.a.f=!1,e;var f=e.value}catch(g){return a.a.b=null,va(a.a,g),Ca(a)}a.a.b=null;d.call(a.a,f);return Ca(a)}function Ca(a){for(;a.a.a;)try{var b=a.b(a.a);if(b)return a.a.f=!1,{value:b.value,done:!1}}catch(c){a.a.fa=void 0,va(a.a,c)}a.a.f=!1;if(a.a.c){b=a.a.c;a.a.c=null;if(b.Ua)throw b.Qa;return{value:b.return,done:!0}}return{value:void 0,done:!0}}
function Da(a){this.next=function(b){ua(a.a);a.a.b?b=Ba(a,a.a.b.next,b,a.a.m):(a.a.m(b),b=Ca(a));return b};this.throw=function(b){ua(a.a);a.a.b?b=Ba(a,a.a.b["throw"],b,a.a.m):(va(a.a,b),b=Ca(a));return b};this.return=function(b){return ya(a,b)};ja();this[Symbol.iterator]=function(){return this}}function Ea(a,b){b=new Da(new xa(b));sa&&sa(b,a.prototype);return b}
(function(){if(!function(){var a=document.createEvent("Event");a.initEvent("foo",!0,!0);a.preventDefault();return a.defaultPrevented}()){var a=Event.prototype.preventDefault;Event.prototype.preventDefault=function(){this.cancelable&&(a.call(this),Object.defineProperty(this,"defaultPrevented",{get:function(){return!0},configurable:!0}))}}var b=/Trident/.test(navigator.userAgent);if(!window.CustomEvent||b&&"function"!==typeof window.CustomEvent)window.CustomEvent=function(a,b){b=b||{};var c=document.createEvent("CustomEvent");
c.initCustomEvent(a,!!b.bubbles,!!b.cancelable,b.detail);return c},window.CustomEvent.prototype=window.Event.prototype;if(!window.Event||b&&"function"!==typeof window.Event){var c=window.Event;window.Event=function(a,b){b=b||{};var c=document.createEvent("Event");c.initEvent(a,!!b.bubbles,!!b.cancelable);return c};if(c)for(var d in c)window.Event[d]=c[d];window.Event.prototype=c.prototype}if(!window.MouseEvent||b&&"function"!==typeof window.MouseEvent){b=window.MouseEvent;window.MouseEvent=function(a,
b){b=b||{};var c=document.createEvent("MouseEvent");c.initMouseEvent(a,!!b.bubbles,!!b.cancelable,b.view||window,b.detail,b.screenX,b.screenY,b.clientX,b.clientY,b.ctrlKey,b.altKey,b.shiftKey,b.metaKey,b.button,b.relatedTarget);return c};if(b)for(d in b)window.MouseEvent[d]=b[d];window.MouseEvent.prototype=b.prototype}Array.from||(Array.from=function(a){return[].slice.call(a)});Object.assign||(Object.assign=function(a,b){for(var c=[].slice.call(arguments,1),d=0,e;d<c.length;d++)if(e=c[d])for(var f=
a,n=e,p=Object.getOwnPropertyNames(n),G=0;G<p.length;G++)e=p[G],f[e]=n[e];return a})})(window.WebComponents);(function(){function a(){}function b(a,b){if(!a.childNodes.length)return[];switch(a.nodeType){case Node.DOCUMENT_NODE:return R.call(a,b);case Node.DOCUMENT_FRAGMENT_NODE:return yb.call(a,b);default:return w.call(a,b)}}var c="undefined"===typeof HTMLTemplateElement,d=!(document.createDocumentFragment().cloneNode()instanceof DocumentFragment),e=!1;/Trident/.test(navigator.userAgent)&&function(){function a(a,b){if(a instanceof DocumentFragment)for(var d;d=a.firstChild;)c.call(this,d,b);else c.call(this,
a,b);return a}e=!0;var b=Node.prototype.cloneNode;Node.prototype.cloneNode=function(a){a=b.call(this,a);this instanceof DocumentFragment&&(a.__proto__=DocumentFragment.prototype);return a};DocumentFragment.prototype.querySelectorAll=HTMLElement.prototype.querySelectorAll;DocumentFragment.prototype.querySelector=HTMLElement.prototype.querySelector;Object.defineProperties(DocumentFragment.prototype,{nodeType:{get:function(){return Node.DOCUMENT_FRAGMENT_NODE},configurable:!0},localName:{get:function(){},
configurable:!0},nodeName:{get:function(){return"#document-fragment"},configurable:!0}});var c=Node.prototype.insertBefore;Node.prototype.insertBefore=a;var d=Node.prototype.appendChild;Node.prototype.appendChild=function(b){b instanceof DocumentFragment?a.call(this,b,null):d.call(this,b);return b};var f=Node.prototype.removeChild,g=Node.prototype.replaceChild;Node.prototype.replaceChild=function(b,c){b instanceof DocumentFragment?(a.call(this,b,c),f.call(this,c)):g.call(this,b,c);return c};Document.prototype.createDocumentFragment=
function(){var a=this.createElement("df");a.__proto__=DocumentFragment.prototype;return a};var h=Document.prototype.importNode;Document.prototype.importNode=function(a,b){b=h.call(this,a,b||!1);a instanceof DocumentFragment&&(b.__proto__=DocumentFragment.prototype);return b}}();var f=Node.prototype.cloneNode,g=Document.prototype.createElement,h=Document.prototype.importNode,k=Node.prototype.removeChild,l=Node.prototype.appendChild,n=Node.prototype.replaceChild,p=DOMParser.prototype.parseFromString,
G=Object.getOwnPropertyDescriptor(window.HTMLElement.prototype,"innerHTML")||{get:function(){return this.innerHTML},set:function(a){this.innerHTML=a}},u=Object.getOwnPropertyDescriptor(window.Node.prototype,"childNodes")||{get:function(){return this.childNodes}},w=Element.prototype.querySelectorAll,R=Document.prototype.querySelectorAll,yb=DocumentFragment.prototype.querySelectorAll,zb=function(){if(!c){var a=document.createElement("template"),b=document.createElement("template");b.content.appendChild(document.createElement("div"));
a.content.appendChild(b);a=a.cloneNode(!0);return 0===a.content.childNodes.length||0===a.content.firstChild.content.childNodes.length||d}}();if(c){var U=document.implementation.createHTMLDocument("template"),Ma=!0,q=document.createElement("style");q.textContent="template{display:none;}";var za=document.head;za.insertBefore(q,za.firstElementChild);a.prototype=Object.create(HTMLElement.prototype);var da=!document.createElement("div").hasOwnProperty("innerHTML");a.R=function(b){if(!b.content&&b.namespaceURI===
document.documentElement.namespaceURI){b.content=U.createDocumentFragment();for(var c;c=b.firstChild;)l.call(b.content,c);if(da)b.__proto__=a.prototype;else if(b.cloneNode=function(b){return a.b(this,b)},Ma)try{m(b),y(b)}catch(Hh){Ma=!1}a.a(b.content)}};var ba={option:["select"],thead:["table"],col:["colgroup","table"],tr:["tbody","table"],th:["tr","tbody","table"],td:["tr","tbody","table"]},m=function(b){Object.defineProperty(b,"innerHTML",{get:function(){return ea(this)},set:function(b){var c=ba[(/<([a-z][^/\0>\x20\t\r\n\f]+)/i.exec(b)||
["",""])[1].toLowerCase()];if(c)for(var d=0;d<c.length;d++)b="<"+c[d]+">"+b+"</"+c[d]+">";U.body.innerHTML=b;for(a.a(U);this.content.firstChild;)k.call(this.content,this.content.firstChild);b=U.body;if(c)for(d=0;d<c.length;d++)b=b.lastChild;for(;b.firstChild;)l.call(this.content,b.firstChild)},configurable:!0})},y=function(a){Object.defineProperty(a,"outerHTML",{get:function(){return"<template>"+this.innerHTML+"</template>"},set:function(a){if(this.parentNode){U.body.innerHTML=a;for(a=this.ownerDocument.createDocumentFragment();U.body.firstChild;)l.call(a,
U.body.firstChild);n.call(this.parentNode,a,this)}else throw Error("Failed to set the 'outerHTML' property on 'Element': This element has no parent node.");},configurable:!0})};m(a.prototype);y(a.prototype);a.a=function(c){c=b(c,"template");for(var d=0,e=c.length,f;d<e&&(f=c[d]);d++)a.R(f)};document.addEventListener("DOMContentLoaded",function(){a.a(document)});Document.prototype.createElement=function(){var b=g.apply(this,arguments);"template"===b.localName&&a.R(b);return b};DOMParser.prototype.parseFromString=
function(){var b=p.apply(this,arguments);a.a(b);return b};Object.defineProperty(HTMLElement.prototype,"innerHTML",{get:function(){return ea(this)},set:function(b){G.set.call(this,b);a.a(this)},configurable:!0,enumerable:!0});var ca=/[&\u00A0"]/g,Ab=/[&\u00A0<>]/g,Na=function(a){switch(a){case "&":return"&amp;";case "<":return"&lt;";case ">":return"&gt;";case '"':return"&quot;";case "\u00a0":return"&nbsp;"}};q=function(a){for(var b={},c=0;c<a.length;c++)b[a[c]]=!0;return b};var Aa=q("area base br col command embed hr img input keygen link meta param source track wbr".split(" ")),
Oa=q("style script xmp iframe noembed noframes plaintext noscript".split(" ")),ea=function(a,b){"template"===a.localName&&(a=a.content);for(var c="",d=b?b(a):u.get.call(a),e=0,f=d.length,g;e<f&&(g=d[e]);e++){a:{var h=g;var k=a;var l=b;switch(h.nodeType){case Node.ELEMENT_NODE:for(var n=h.localName,m="<"+n,p=h.attributes,w=0;k=p[w];w++)m+=" "+k.name+'="'+k.value.replace(ca,Na)+'"';m+=">";h=Aa[n]?m:m+ea(h,l)+"</"+n+">";break a;case Node.TEXT_NODE:h=h.data;h=k&&Oa[k.localName]?h:h.replace(Ab,Na);break a;
case Node.COMMENT_NODE:h="\x3c!--"+h.data+"--\x3e";break a;default:throw window.console.error(h),Error("not implemented");}}c+=h}return c}}if(c||zb){a.b=function(a,b){var c=f.call(a,!1);this.R&&this.R(c);b&&(l.call(c.content,f.call(a.content,!0)),Pa(c.content,a.content));return c};var Pa=function(c,d){if(d.querySelectorAll&&(d=b(d,"template"),0!==d.length)){c=b(c,"template");for(var e=0,f=c.length,g,h;e<f;e++)h=d[e],g=c[e],a&&a.R&&a.R(h),n.call(g.parentNode,tf.call(h,!0),g)}},tf=Node.prototype.cloneNode=
function(b){if(!e&&d&&this instanceof DocumentFragment)if(b)var c=uf.call(this.ownerDocument,this,!0);else return this.ownerDocument.createDocumentFragment();else this.nodeType===Node.ELEMENT_NODE&&"template"===this.localName&&this.namespaceURI==document.documentElement.namespaceURI?c=a.b(this,b):c=f.call(this,b);b&&Pa(c,this);return c},uf=Document.prototype.importNode=function(c,d){d=d||!1;if("template"===c.localName)return a.b(c,d);var e=h.call(this,c,d);if(d){Pa(e,c);c=b(e,'script:not([type]),script[type="application/javascript"],script[type="text/javascript"]');
for(var f,k=0;k<c.length;k++){f=c[k];d=g.call(document,"script");d.textContent=f.textContent;for(var l=f.attributes,m=0,p;m<l.length;m++)p=l[m],d.setAttribute(p.name,p.value);n.call(f.parentNode,d,f)}}return e}}c&&(window.HTMLTemplateElement=a)})();var Fa=setTimeout;function Ga(){}function Ha(a,b){return function(){a.apply(b,arguments)}}function t(a){if(!(this instanceof t))throw new TypeError("Promises must be constructed via new");if("function"!==typeof a)throw new TypeError("not a function");this.J=0;this.wa=!1;this.A=void 0;this.U=[];Ia(a,this)}
function Ja(a,b){for(;3===a.J;)a=a.A;0===a.J?a.U.push(b):(a.wa=!0,Ka(function(){var c=1===a.J?b.Wa:b.Xa;if(null===c)(1===a.J?La:Qa)(b.ra,a.A);else{try{var d=c(a.A)}catch(e){Qa(b.ra,e);return}La(b.ra,d)}}))}function La(a,b){try{if(b===a)throw new TypeError("A promise cannot be resolved with itself.");if(b&&("object"===typeof b||"function"===typeof b)){var c=b.then;if(b instanceof t){a.J=3;a.A=b;Ra(a);return}if("function"===typeof c){Ia(Ha(c,b),a);return}}a.J=1;a.A=b;Ra(a)}catch(d){Qa(a,d)}}
function Qa(a,b){a.J=2;a.A=b;Ra(a)}function Ra(a){2===a.J&&0===a.U.length&&Ka(function(){a.wa||"undefined"!==typeof console&&console&&console.warn("Possible Unhandled Promise Rejection:",a.A)});for(var b=0,c=a.U.length;b<c;b++)Ja(a,a.U[b]);a.U=null}function Sa(a,b,c){this.Wa="function"===typeof a?a:null;this.Xa="function"===typeof b?b:null;this.ra=c}function Ia(a,b){var c=!1;try{a(function(a){c||(c=!0,La(b,a))},function(a){c||(c=!0,Qa(b,a))})}catch(d){c||(c=!0,Qa(b,d))}}
t.prototype["catch"]=function(a){return this.then(null,a)};t.prototype.then=function(a,b){var c=new this.constructor(Ga);Ja(this,new Sa(a,b,c));return c};t.prototype["finally"]=function(a){var b=this.constructor;return this.then(function(c){return b.resolve(a()).then(function(){return c})},function(c){return b.resolve(a()).then(function(){return b.reject(c)})})};
function Ta(a){return new t(function(b,c){function d(a,g){try{if(g&&("object"===typeof g||"function"===typeof g)){var h=g.then;if("function"===typeof h){h.call(g,function(b){d(a,b)},c);return}}e[a]=g;0===--f&&b(e)}catch(n){c(n)}}if(!a||"undefined"===typeof a.length)throw new TypeError("Promise.all accepts an array");var e=Array.prototype.slice.call(a);if(0===e.length)return b([]);for(var f=e.length,g=0;g<e.length;g++)d(g,e[g])})}
function Ua(a){return a&&"object"===typeof a&&a.constructor===t?a:new t(function(b){b(a)})}function Va(a){return new t(function(b,c){c(a)})}function Wa(a){return new t(function(b,c){for(var d=0,e=a.length;d<e;d++)a[d].then(b,c)})}var Ka="function"===typeof setImmediate&&function(a){setImmediate(a)}||function(a){Fa(a,0)};/*

Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
Code distributed by Google as part of the polymer project is also
subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
*/
if(!window.Promise){window.Promise=t;t.prototype.then=t.prototype.then;t.all=Ta;t.race=Wa;t.resolve=Ua;t.reject=Va;var Xa=document.createTextNode(""),Ya=[];(new MutationObserver(function(){for(var a=Ya.length,b=0;b<a;b++)Ya[b]();Ya.splice(0,a)})).observe(Xa,{characterData:!0});Ka=function(a){Ya.push(a);Xa.textContent=0<Xa.textContent.length?"":"a"}};/*
 Copyright (C) 2015 by WebReflection

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.

*/
(function(a,b){if(!(b in a)){var c=typeof global===typeof c?window:global,d=0,e=""+Math.random(),f="__\u0001symbol@@"+e,g=a.getOwnPropertyNames,h=a.getOwnPropertyDescriptor,k=a.create,l=a.keys,n=a.freeze||a,p=a.defineProperty,G=a.defineProperties,u=h(a,"getOwnPropertyNames"),w=a.prototype,R=w.hasOwnProperty,yb=w.propertyIsEnumerable,zb=w.toString,U=function(a,b,c){R.call(a,f)||p(a,f,{enumerable:!1,configurable:!1,writable:!1,value:{}});a[f]["@@"+b]=c},Ma=function(a,b){var c=k(a);g(b).forEach(function(a){ba.call(b,
a)&&Aa(c,a,b[a])});return c},q=function(){},za=function(a){return a!=f&&!R.call(ca,a)},da=function(a){return a!=f&&R.call(ca,a)},ba=function(a){var b=""+a;return da(b)?R.call(this,b)&&this[f]["@@"+b]:yb.call(this,a)},m=function(b){p(w,b,{enumerable:!1,configurable:!0,get:q,set:function(a){ea(this,b,{enumerable:!1,configurable:!0,writable:!0,value:a});U(this,b,!0)}});return n(ca[b]=p(a(b),"constructor",Ab))},y=function(a){if(this&&this!==c)throw new TypeError("Symbol is not a constructor");return m("__\u0001symbol:".concat(a||
"",e,++d))},ca=k(null),Ab={value:y},Na=function(a){return ca[a]},Aa=function(a,b,c){var d=""+b;if(da(d)){b=ea;if(c.enumerable){var e=k(c);e.enumerable=!1}else e=c;b(a,d,e);U(a,d,!!c.enumerable)}else p(a,b,c);return a},Oa=function(a){return g(a).filter(da).map(Na)};u.value=Aa;p(a,"defineProperty",u);u.value=Oa;p(a,b,u);u.value=function(a){return g(a).filter(za)};p(a,"getOwnPropertyNames",u);u.value=function(a,b){var c=Oa(b);c.length?l(b).concat(c).forEach(function(c){ba.call(b,c)&&Aa(a,c,b[c])}):G(a,
b);return a};p(a,"defineProperties",u);u.value=ba;p(w,"propertyIsEnumerable",u);u.value=y;p(c,"Symbol",u);u.value=function(a){a="__\u0001symbol:".concat("__\u0001symbol:",a,e);return a in w?ca[a]:m(a)};p(y,"for",u);u.value=function(a){if(za(a))throw new TypeError(a+" is not a symbol");return R.call(ca,a)?a.slice(20,-e.length):void 0};p(y,"keyFor",u);u.value=function(a,b){var c=h(a,b);c&&da(b)&&(c.enumerable=ba.call(a,b));return c};p(a,"getOwnPropertyDescriptor",u);u.value=function(a,b){return 1===
arguments.length?k(a):Ma(a,b)};p(a,"create",u);u.value=function(){var a=zb.call(this);return"[object String]"===a&&da(this)?"[object Symbol]":a};p(w,"toString",u);try{var ea=k(p({},"__\u0001symbol:",{get:function(){return p(this,"__\u0001symbol:",{value:!1})["__\u0001symbol:"]}}))["__\u0001symbol:"]||p}catch(Pa){ea=function(a,b,c){var d=h(w,b);delete w[b];p(a,b,c);p(w,b,d)}}}})(Object,"getOwnPropertySymbols");
(function(a){var b=a.defineProperty,c=a.prototype,d=c.toString,e;"iterator match replace search split hasInstance isConcatSpreadable unscopables species toPrimitive toStringTag".split(" ").forEach(function(f){if(!(f in Symbol))switch(b(Symbol,f,{value:Symbol(f)}),f){case "toStringTag":e=a.getOwnPropertyDescriptor(c,"toString"),e.value=function(){var a=d.call(this),b=this[Symbol.toStringTag];return"undefined"===typeof b?a:"[object "+b+"]"},b(c,"toString",e)}})})(Object,Symbol);
(function(a,b,c){function d(){return this}b[a]||(b[a]=function(){var b=0,c=this,g={next:function(){var a=c.length<=b;return a?{done:a}:{done:a,value:c[b++]}}};g[a]=d;return g});c[a]||(c[a]=function(){var b=String.fromCodePoint,c=this,g=0,h=c.length,k={next:function(){var a=h<=g,d=a?"":b(c.codePointAt(g));g+=d.length;return a?{done:a}:{done:a,value:d}}};k[a]=d;return k})})(Symbol.iterator,Array.prototype,String.prototype);/*

Copyright (c) 2018 The Polymer Project Authors. All rights reserved.
This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
Code distributed by Google as part of the polymer project is also
subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
*/
Object.keys=function(a){return Object.getOwnPropertyNames(a).filter(function(b){return(b=Object.getOwnPropertyDescriptor(a,b))&&b.enumerable})};var Za=window.Symbol.iterator;String.prototype[Za]&&String.prototype.codePointAt||(String.prototype[Za]=function $a(){var b,c=this;return Ea($a,function(d){1==d.a&&(b=0);if(3!=d.a)return b<c.length?d=wa(d,c[b]):(d.a=0,d=void 0),d;b++;d.a=2})});
Set.prototype[Za]||(Set.prototype[Za]=function ab(){var b,c=this,d;return Ea(ab,function(e){1==e.a&&(b=[],c.forEach(function(c){b.push(c)}),d=0);if(3!=e.a)return d<b.length?e=wa(e,b[d]):(e.a=0,e=void 0),e;d++;e.a=2})});Map.prototype[Za]||(Map.prototype[Za]=function bb(){var b,c=this,d;return Ea(bb,function(e){1==e.a&&(b=[],c.forEach(function(c,d){b.push([d,c])}),d=0);if(3!=e.a)return d<b.length?e=wa(e,b[d]):(e.a=0,e=void 0),e;d++;e.a=2})});/*

 Copyright (c) 2014 The Polymer Project Authors. All rights reserved.
 This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
 The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
 The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
 Code distributed by Google as part of the polymer project is also
 subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
*/
window.WebComponents=window.WebComponents||{flags:{}};var cb=document.querySelector('script[src*="webcomponents-bundle"]'),db=/wc-(.+)/,v={};if(!v.noOpts){location.search.slice(1).split("&").forEach(function(a){a=a.split("=");var b;a[0]&&(b=a[0].match(db))&&(v[b[1]]=a[1]||!0)});if(cb)for(var eb=0,fb=void 0;fb=cb.attributes[eb];eb++)"src"!==fb.name&&(v[fb.name]=fb.value||!0);if(v.log&&v.log.split){var gb=v.log.split(",");v.log={};gb.forEach(function(a){v.log[a]=!0})}else v.log={}}
window.WebComponents.flags=v;var hb=v.shadydom;hb&&(window.ShadyDOM=window.ShadyDOM||{},window.ShadyDOM.force=hb);var ib=v.register||v.ce;ib&&window.customElements&&(window.customElements.forcePolyfill=ib);/*

Copyright (c) 2016 The Polymer Project Authors. All rights reserved.
This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
Code distributed by Google as part of the polymer project is also
subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
*/
function jb(){this.za=this.root=null;this.ea=!1;this.N=this.$=this.oa=this.assignedSlot=this.assignedNodes=this.S=null;this.childNodes=this.nextSibling=this.previousSibling=this.lastChild=this.firstChild=this.parentNode=this.V=void 0;this.Ea=this.ua=!1;this.Z={}}jb.prototype.toJSON=function(){return{}};function x(a){a.ma||(a.ma=new jb);return a.ma}function z(a){return a&&a.ma};var A=window.ShadyDOM||{};A.Sa=!(!Element.prototype.attachShadow||!Node.prototype.getRootNode);var kb=Object.getOwnPropertyDescriptor(Node.prototype,"firstChild");A.K=!!(kb&&kb.configurable&&kb.get);A.qa=A.force||!A.Sa;var lb=navigator.userAgent.match("Trident"),mb=navigator.userAgent.match("Edge");void 0===A.Ba&&(A.Ba=A.K&&(lb||mb));function nb(a){return(a=z(a))&&void 0!==a.firstChild}function B(a){return"ShadyRoot"===a.Ja}function ob(a){a=a.getRootNode();if(B(a))return a}
var pb=Element.prototype,qb=pb.matches||pb.matchesSelector||pb.mozMatchesSelector||pb.msMatchesSelector||pb.oMatchesSelector||pb.webkitMatchesSelector;function rb(a,b){if(a&&b)for(var c=Object.getOwnPropertyNames(b),d=0,e=void 0;d<c.length&&(e=c[d]);d++){var f=e,g=a,h=Object.getOwnPropertyDescriptor(b,f);h&&Object.defineProperty(g,f,h)}}function sb(a,b){for(var c=[],d=1;d<arguments.length;++d)c[d-1]=arguments[d];for(d=0;d<c.length;d++)rb(a,c[d]);return a}
function tb(a,b){for(var c in b)a[c]=b[c]}var ub=document.createTextNode(""),vb=0,wb=[];(new MutationObserver(function(){for(;wb.length;)try{wb.shift()()}catch(a){throw ub.textContent=vb++,a;}})).observe(ub,{characterData:!0});function xb(a){wb.push(a);ub.textContent=vb++}var Bb=!!document.contains;function Cb(a,b){for(;b;){if(b==a)return!0;b=b.parentNode}return!1}
function Db(a){for(var b=a.length-1;0<=b;b--){var c=a[b],d=c.getAttribute("id")||c.getAttribute("name");d&&"length"!==d&&isNaN(d)&&(a[d]=c)}a.item=function(b){return a[b]};a.namedItem=function(b){if("length"!==b&&isNaN(b)&&a[b])return a[b];for(var c=ma(a),d=c.next();!d.done;d=c.next())if(d=d.value,(d.getAttribute("id")||d.getAttribute("name"))==b)return d;return null};return a};var Eb=[],Fb;function Gb(a){Fb||(Fb=!0,xb(Hb));Eb.push(a)}function Hb(){Fb=!1;for(var a=!!Eb.length;Eb.length;)Eb.shift()();return a}Hb.list=Eb;function Ib(){this.a=!1;this.addedNodes=[];this.removedNodes=[];this.ca=new Set}function Jb(a){a.a||(a.a=!0,xb(function(){a.flush()}))}Ib.prototype.flush=function(){if(this.a){this.a=!1;var a=this.takeRecords();a.length&&this.ca.forEach(function(b){b(a)})}};Ib.prototype.takeRecords=function(){if(this.addedNodes.length||this.removedNodes.length){var a=[{addedNodes:this.addedNodes,removedNodes:this.removedNodes}];this.addedNodes=[];this.removedNodes=[];return a}return[]};
function Kb(a,b){var c=x(a);c.S||(c.S=new Ib);c.S.ca.add(b);var d=c.S;return{Ia:b,P:d,Ka:a,takeRecords:function(){return d.takeRecords()}}}function Lb(a){var b=a&&a.P;b&&(b.ca.delete(a.Ia),b.ca.size||(x(a.Ka).S=null))}
function Mb(a,b){var c=b.getRootNode();return a.map(function(a){var b=c===a.target.getRootNode();if(b&&a.addedNodes){if(b=Array.from(a.addedNodes).filter(function(a){return c===a.getRootNode()}),b.length)return a=Object.create(a),Object.defineProperty(a,"addedNodes",{value:b,configurable:!0}),a}else if(b)return a}).filter(function(a){return a})};var Nb=Element.prototype.insertBefore,Ob=Element.prototype.replaceChild,Pb=Element.prototype.removeChild,Qb=Element.prototype.setAttribute,Rb=Element.prototype.removeAttribute,Sb=Element.prototype.cloneNode,Tb=Document.prototype.importNode,Ub=Element.prototype.addEventListener,Vb=Element.prototype.removeEventListener,Wb=Window.prototype.addEventListener,Xb=Window.prototype.removeEventListener,Yb=Element.prototype.dispatchEvent,Zb=Node.prototype.contains||HTMLElement.prototype.contains,$b=Document.prototype.getElementById,
ac=Element.prototype.querySelector,bc=DocumentFragment.prototype.querySelector,cc=Document.prototype.querySelector,dc=Element.prototype.querySelectorAll,ec=DocumentFragment.prototype.querySelectorAll,fc=Document.prototype.querySelectorAll,C={};C.appendChild=Element.prototype.appendChild;C.insertBefore=Nb;C.replaceChild=Ob;C.removeChild=Pb;C.setAttribute=Qb;C.removeAttribute=Rb;C.cloneNode=Sb;C.importNode=Tb;C.addEventListener=Ub;C.removeEventListener=Vb;C.gb=Wb;C.hb=Xb;C.dispatchEvent=Yb;
C.contains=Zb;C.getElementById=$b;C.pb=ac;C.tb=bc;C.nb=cc;C.querySelector=function(a){switch(this.nodeType){case Node.ELEMENT_NODE:return ac.call(this,a);case Node.DOCUMENT_NODE:return cc.call(this,a);default:return bc.call(this,a)}};C.qb=dc;C.ub=ec;C.ob=fc;C.querySelectorAll=function(a){switch(this.nodeType){case Node.ELEMENT_NODE:return dc.call(this,a);case Node.DOCUMENT_NODE:return fc.call(this,a);default:return ec.call(this,a)}};var gc=/[&\u00A0"]/g,hc=/[&\u00A0<>]/g;function ic(a){switch(a){case "&":return"&amp;";case "<":return"&lt;";case ">":return"&gt;";case '"':return"&quot;";case "\u00a0":return"&nbsp;"}}function jc(a){for(var b={},c=0;c<a.length;c++)b[a[c]]=!0;return b}var kc=jc("area base br col command embed hr img input keygen link meta param source track wbr".split(" ")),lc=jc("style script xmp iframe noembed noframes plaintext noscript".split(" "));
function mc(a,b){"template"===a.localName&&(a=a.content);for(var c="",d=b?b(a):a.childNodes,e=0,f=d.length,g=void 0;e<f&&(g=d[e]);e++){a:{var h=g;var k=a,l=b;switch(h.nodeType){case Node.ELEMENT_NODE:k=h.localName;for(var n="<"+k,p=h.attributes,G=0,u;u=p[G];G++)n+=" "+u.name+'="'+u.value.replace(gc,ic)+'"';n+=">";h=kc[k]?n:n+mc(h,l)+"</"+k+">";break a;case Node.TEXT_NODE:h=h.data;h=k&&lc[k.localName]?h:h.replace(hc,ic);break a;case Node.COMMENT_NODE:h="\x3c!--"+h.data+"--\x3e";break a;default:throw window.console.error(h),
Error("not implemented");}}c+=h}return c};var D=document.createTreeWalker(document,NodeFilter.SHOW_ALL,null,!1),E=document.createTreeWalker(document,NodeFilter.SHOW_ELEMENT,null,!1);function nc(a){var b=[];D.currentNode=a;for(a=D.firstChild();a;)b.push(a),a=D.nextSibling();return b}
var F={parentNode:function(a){D.currentNode=a;return D.parentNode()},firstChild:function(a){D.currentNode=a;return D.firstChild()},lastChild:function(a){D.currentNode=a;return D.lastChild()},previousSibling:function(a){D.currentNode=a;return D.previousSibling()},nextSibling:function(a){D.currentNode=a;return D.nextSibling()}};F.childNodes=nc;F.parentElement=function(a){E.currentNode=a;return E.parentNode()};F.firstElementChild=function(a){E.currentNode=a;return E.firstChild()};
F.lastElementChild=function(a){E.currentNode=a;return E.lastChild()};F.previousElementSibling=function(a){E.currentNode=a;return E.previousSibling()};F.nextElementSibling=function(a){E.currentNode=a;return E.nextSibling()};F.children=function(a){var b=[];E.currentNode=a;for(a=E.firstChild();a;)b.push(a),a=E.nextSibling();return Db(b)};F.innerHTML=function(a){return mc(a,function(a){return nc(a)})};
F.textContent=function(a){switch(a.nodeType){case Node.ELEMENT_NODE:case Node.DOCUMENT_FRAGMENT_NODE:a=document.createTreeWalker(a,NodeFilter.SHOW_TEXT,null,!1);for(var b="",c;c=a.nextNode();)b+=c.nodeValue;return b;default:return a.nodeValue}};var oc=A.K,pc=[Node.prototype,Element.prototype,HTMLElement.prototype];function H(a){var b;a:{for(b=0;b<pc.length;b++){var c=pc[b];if(c.hasOwnProperty(a)){b=c;break a}}b=void 0}if(!b)throw Error("Could not find descriptor for "+a);return Object.getOwnPropertyDescriptor(b,a)}
var I=oc?{parentNode:H("parentNode"),firstChild:H("firstChild"),lastChild:H("lastChild"),previousSibling:H("previousSibling"),nextSibling:H("nextSibling"),childNodes:H("childNodes"),parentElement:H("parentElement"),previousElementSibling:H("previousElementSibling"),nextElementSibling:H("nextElementSibling"),innerHTML:H("innerHTML"),textContent:H("textContent"),firstElementChild:H("firstElementChild"),lastElementChild:H("lastElementChild"),children:H("children")}:{},qc=oc?{firstElementChild:Object.getOwnPropertyDescriptor(DocumentFragment.prototype,
"firstElementChild"),lastElementChild:Object.getOwnPropertyDescriptor(DocumentFragment.prototype,"lastElementChild"),children:Object.getOwnPropertyDescriptor(DocumentFragment.prototype,"children")}:{},rc=oc?{firstElementChild:Object.getOwnPropertyDescriptor(Document.prototype,"firstElementChild"),lastElementChild:Object.getOwnPropertyDescriptor(Document.prototype,"lastElementChild"),children:Object.getOwnPropertyDescriptor(Document.prototype,"children")}:{},sc={ya:I,sb:qc,mb:rc,parentNode:function(a){return I.parentNode.get.call(a)},
firstChild:function(a){return I.firstChild.get.call(a)},lastChild:function(a){return I.lastChild.get.call(a)},previousSibling:function(a){return I.previousSibling.get.call(a)},nextSibling:function(a){return I.nextSibling.get.call(a)},childNodes:function(a){return Array.prototype.slice.call(I.childNodes.get.call(a))},parentElement:function(a){return I.parentElement.get.call(a)},previousElementSibling:function(a){return I.previousElementSibling.get.call(a)},nextElementSibling:function(a){return I.nextElementSibling.get.call(a)},
innerHTML:function(a){return I.innerHTML.get.call(a)},textContent:function(a){return I.textContent.get.call(a)},children:function(a){switch(a.nodeType){case Node.DOCUMENT_FRAGMENT_NODE:return qc.children.get.call(a);case Node.DOCUMENT_NODE:return rc.children.get.call(a);default:return I.children.get.call(a)}},firstElementChild:function(a){switch(a.nodeType){case Node.DOCUMENT_FRAGMENT_NODE:return qc.firstElementChild.get.call(a);case Node.DOCUMENT_NODE:return rc.firstElementChild.get.call(a);default:return I.firstElementChild.get.call(a)}},
lastElementChild:function(a){switch(a.nodeType){case Node.DOCUMENT_FRAGMENT_NODE:return qc.lastElementChild.get.call(a);case Node.DOCUMENT_NODE:return rc.lastElementChild.get.call(a);default:return I.lastElementChild.get.call(a)}}};var J=A.Ba?sc:F;function tc(a){for(;a.firstChild;)a.removeChild(a.firstChild)}
var uc=A.K,vc=document.implementation.createHTMLDocument("inert"),wc=Object.getOwnPropertyDescriptor(Node.prototype,"isConnected"),xc=wc&&wc.get,yc=Object.getOwnPropertyDescriptor(Document.prototype,"activeElement"),zc={parentElement:{get:function(){var a=z(this);(a=a&&a.parentNode)&&a.nodeType!==Node.ELEMENT_NODE&&(a=null);return void 0!==a?a:J.parentElement(this)},configurable:!0},parentNode:{get:function(){var a=z(this);a=a&&a.parentNode;return void 0!==a?a:J.parentNode(this)},configurable:!0},
nextSibling:{get:function(){var a=z(this);a=a&&a.nextSibling;return void 0!==a?a:J.nextSibling(this)},configurable:!0},previousSibling:{get:function(){var a=z(this);a=a&&a.previousSibling;return void 0!==a?a:J.previousSibling(this)},configurable:!0},nextElementSibling:{get:function(){var a=z(this);if(a&&void 0!==a.nextSibling){for(a=this.nextSibling;a&&a.nodeType!==Node.ELEMENT_NODE;)a=a.nextSibling;return a}return J.nextElementSibling(this)},configurable:!0},previousElementSibling:{get:function(){var a=
z(this);if(a&&void 0!==a.previousSibling){for(a=this.previousSibling;a&&a.nodeType!==Node.ELEMENT_NODE;)a=a.previousSibling;return a}return J.previousElementSibling(this)},configurable:!0}},Ac={className:{get:function(){return this.getAttribute("class")||""},set:function(a){this.setAttribute("class",a)},configurable:!0}},Bc={childNodes:{get:function(){if(nb(this)){var a=z(this);if(!a.childNodes){a.childNodes=[];for(var b=this.firstChild;b;b=b.nextSibling)a.childNodes.push(b)}var c=a.childNodes}else c=
J.childNodes(this);c.item=function(a){return c[a]};return c},configurable:!0},childElementCount:{get:function(){return this.children.length},configurable:!0},firstChild:{get:function(){var a=z(this);a=a&&a.firstChild;return void 0!==a?a:J.firstChild(this)},configurable:!0},lastChild:{get:function(){var a=z(this);a=a&&a.lastChild;return void 0!==a?a:J.lastChild(this)},configurable:!0},textContent:{get:function(){if(nb(this)){for(var a=[],b=0,c=this.childNodes,d;d=c[b];b++)d.nodeType!==Node.COMMENT_NODE&&
a.push(d.textContent);return a.join("")}return J.textContent(this)},set:function(a){if("undefined"===typeof a||null===a)a="";switch(this.nodeType){case Node.ELEMENT_NODE:case Node.DOCUMENT_FRAGMENT_NODE:if(!nb(this)&&uc){var b=this.firstChild;(b!=this.lastChild||b&&b.nodeType!=Node.TEXT_NODE)&&tc(this);sc.ya.textContent.set.call(this,a)}else tc(this),(0<a.length||this.nodeType===Node.ELEMENT_NODE)&&this.appendChild(document.createTextNode(a));break;default:this.nodeValue=a}},configurable:!0},firstElementChild:{get:function(){var a=
z(this);if(a&&void 0!==a.firstChild){for(a=this.firstChild;a&&a.nodeType!==Node.ELEMENT_NODE;)a=a.nextSibling;return a}return J.firstElementChild(this)},configurable:!0},lastElementChild:{get:function(){var a=z(this);if(a&&void 0!==a.lastChild){for(a=this.lastChild;a&&a.nodeType!==Node.ELEMENT_NODE;)a=a.previousSibling;return a}return J.lastElementChild(this)},configurable:!0},children:{get:function(){return nb(this)?Db(Array.prototype.filter.call(this.childNodes,function(a){return a.nodeType===Node.ELEMENT_NODE})):
J.children(this)},configurable:!0},innerHTML:{get:function(){return nb(this)?mc("template"===this.localName?this.content:this):J.innerHTML(this)},set:function(a){var b="template"===this.localName?this.content:this;tc(b);var c=this.localName||"div";c=this.namespaceURI&&this.namespaceURI!==vc.namespaceURI?vc.createElementNS(this.namespaceURI,c):vc.createElement(c);uc?sc.ya.innerHTML.set.call(c,a):c.innerHTML=a;for(a="template"===this.localName?c.content:c;a.firstChild;)b.appendChild(a.firstChild)},
configurable:!0}},Cc={shadowRoot:{get:function(){var a=z(this);return a&&a.za||null},configurable:!0}},Dc={activeElement:{get:function(){var a=yc&&yc.get?yc.get.call(document):A.K?void 0:document.activeElement;if(a&&a.nodeType){var b=!!B(this);if(this===document||b&&this.host!==a&&C.contains.call(this.host,a)){for(b=ob(a);b&&b!==this;)a=b.host,b=ob(a);a=this===document?b?null:a:b===this?a:null}else a=null}else a=null;return a},set:function(){},configurable:!0}};
function K(a,b,c){for(var d in b){var e=Object.getOwnPropertyDescriptor(a,d);e&&e.configurable||!e&&c?Object.defineProperty(a,d,b[d]):c&&console.warn("Could not define",d,"on",a)}}function Ec(a){K(a,zc);K(a,Ac);K(a,Bc);K(a,Dc)}
function Fc(){var a=Gc.prototype;a.__proto__=DocumentFragment.prototype;K(a,zc,!0);K(a,Bc,!0);K(a,Dc,!0);Object.defineProperties(a,{nodeType:{value:Node.DOCUMENT_FRAGMENT_NODE,configurable:!0},nodeName:{value:"#document-fragment",configurable:!0},nodeValue:{value:null,configurable:!0}});["localName","namespaceURI","prefix"].forEach(function(b){Object.defineProperty(a,b,{value:void 0,configurable:!0})});["ownerDocument","baseURI","isConnected"].forEach(function(b){Object.defineProperty(a,b,{get:function(){return this.host[b]},
configurable:!0})})}var Hc=A.K?function(){}:function(a){var b=x(a);b.ua||(b.ua=!0,K(a,zc,!0),K(a,Ac,!0))},Ic=A.K?function(){}:function(a){x(a).Ea||(K(a,Bc,!0),K(a,Cc,!0))};var Jc=J.childNodes;function Kc(a,b,c){Ic(b);var d=x(b);void 0!==d.firstChild&&(d.childNodes=null);if(a.nodeType===Node.DOCUMENT_FRAGMENT_NODE){d=a.childNodes;for(var e=0;e<d.length;e++)Lc(d[e],b,c);a=x(a);b=void 0!==a.firstChild?null:void 0;a.firstChild=a.lastChild=b;a.childNodes=b}else Lc(a,b,c)}
function Lc(a,b,c){Hc(a);c=c||null;var d=x(a),e=x(b),f=c?x(c):null;d.previousSibling=c?f.previousSibling:b.lastChild;if(f=z(d.previousSibling))f.nextSibling=a;if(f=z(d.nextSibling=c))f.previousSibling=a;d.parentNode=b;c?c===e.firstChild&&(e.firstChild=a):(e.lastChild=a,e.firstChild||(e.firstChild=a));e.childNodes=null}
function Mc(a,b){var c=x(a);b=x(b);a===b.firstChild&&(b.firstChild=c.nextSibling);a===b.lastChild&&(b.lastChild=c.previousSibling);a=c.previousSibling;var d=c.nextSibling;a&&(x(a).nextSibling=d);d&&(x(d).previousSibling=a);c.parentNode=c.previousSibling=c.nextSibling=void 0;void 0!==b.childNodes&&(b.childNodes=null)}
function Nc(a){var b=x(a);if(void 0===b.firstChild){b.childNodes=null;var c=Jc(a);b.firstChild=c[0]||null;b.lastChild=c[c.length-1]||null;Ic(a);for(b=0;b<c.length;b++){var d=c[b],e=x(d);e.parentNode=a;e.nextSibling=c[b+1]||null;e.previousSibling=c[b-1]||null;Hc(d)}}};var Oc=J.parentNode;
function Pc(a,b,c){if(b===a)throw Error("Failed to execute 'appendChild' on 'Node': The new child element contains the parent.");if(c){var d=z(c);d=d&&d.parentNode;if(void 0!==d&&d!==a||void 0===d&&Oc(c)!==a)throw Error("Failed to execute 'insertBefore' on 'Node': The node before which the new node is to be inserted is not a child of this node.");}if(c===b)return b;var e=[],f=Qc,g=ob(a),h=g?g.host.localName:"";if(b.parentNode){var k=Rc(b);Sc(b.parentNode,b,!!g||!(b.getRootNode()instanceof ShadowRoot));
f=function(a,b){Tc()&&(Uc(a,k),Qc(a,b))}}d=!0;var l=!Vc(b,h);!g||b.__noInsertionPoint&&!l||Wc(b,function(a){"slot"===a.localName&&e.push(a);l&&f(a,h)});e.length&&Xc(g,e);("slot"===a.localName||e.length)&&g&&Yc(g);nb(a)&&(Kc(b,a,c),g=z(a),Zc(a)?(Yc(g.root),d=!1):g.root&&(d=!1));d?(d=B(a)?a.host:a,c?(c=$c(c),C.insertBefore.call(d,b,c)):C.appendChild.call(d,b)):b.ownerDocument!==a.ownerDocument&&a.ownerDocument.adoptNode(b);ad(a,b);return b}
function Sc(a,b,c){c=void 0===c?!1:c;if(b.parentNode!==a)throw Error("The node to be removed is not a child of this node: "+b);var d=ob(b),e=z(a);if(nb(a)&&(Mc(b,a),Zc(a))){Yc(e.root);var f=!0}if(Tc()&&!c&&d){var g=Rc(b);Wc(b,function(a){Uc(a,g)})}bd(b);if(d){var h=a&&"slot"===a.localName;h&&(f=!0);((c=cd(d,b))||h)&&Yc(d)}f||(f=B(a)?a.host:a,(!e.root&&"slot"!==b.localName||f===Oc(b))&&C.removeChild.call(f,b));ad(a,null,b);return b}
function bd(a){var b=z(a);if(b&&void 0!==b.V){b=a.childNodes;for(var c=0,d=b.length,e=void 0;c<d&&(e=b[c]);c++)bd(e)}if(a=z(a))a.V=void 0}function $c(a){var b=a;a&&"slot"===a.localName&&(b=(b=(b=z(a))&&b.N)&&b.length?b[0]:$c(a.nextSibling));return b}function Zc(a){return(a=(a=z(a))&&a.root)&&dd(a)}
function ed(a,b){if("slot"===b)a=a.parentNode,Zc(a)&&Yc(z(a).root);else if("slot"===a.localName&&"name"===b&&(b=ob(a))){if(b.o){fd(b);var c=a.Ha,d=gd(a);if(d!==c){c=b.w[c];var e=c.indexOf(a);0<=e&&c.splice(e,1);c=b.w[d]||(b.w[d]=[]);c.push(a);1<c.length&&(b.w[d]=hd(c))}}Yc(b)}}function ad(a,b,c){if(a=(a=z(a))&&a.S)b&&a.addedNodes.push(b),c&&a.removedNodes.push(c),Jb(a)}
function id(a){if(a&&a.nodeType){var b=x(a),c=b.V;void 0===c&&(B(a)?(c=a,b.V=c):(c=(c=a.parentNode)?id(c):a,C.contains.call(document.documentElement,a)&&(b.V=c)));return c}}function jd(a,b,c){var d=[];kd(a.childNodes,b,c,d);return d}function kd(a,b,c,d){for(var e=0,f=a.length,g=void 0;e<f&&(g=a[e]);e++){var h;if(h=g.nodeType===Node.ELEMENT_NODE){h=g;var k=b,l=c,n=d,p=k(h);p&&n.push(h);l&&l(p)?h=p:(kd(h.childNodes,k,l,n),h=void 0)}if(h)break}}var ld=null;
function Tc(){ld||(ld=window.ShadyCSS&&window.ShadyCSS.ScopingShim);return ld||null}function md(a,b,c){var d=Tc();d&&"class"===b?d.setElementClass(a,c):(C.setAttribute.call(a,b,c),ed(a,b))}function nd(a,b){if(a.ownerDocument!==document||"template"===a.localName)return C.importNode.call(document,a,b);var c=C.importNode.call(document,a,!1);if(b){a=a.childNodes;b=0;for(var d;b<a.length;b++)d=nd(a[b],!0),c.appendChild(d)}return c}function Qc(a,b){var c=Tc();c&&c.scopeNode(a,b)}
function Uc(a,b){var c=Tc();c&&c.unscopeNode(a,b)}function Vc(a,b){var c=Tc();if(!c)return!0;if(a.nodeType===Node.DOCUMENT_FRAGMENT_NODE){c=!0;for(var d=0;c&&d<a.childNodes.length;d++)c=c&&Vc(a.childNodes[d],b);return c}return a.nodeType!==Node.ELEMENT_NODE?!0:c.currentScopeForNode(a)===b}function Rc(a){if(a.nodeType!==Node.ELEMENT_NODE)return"";var b=Tc();return b?b.currentScopeForNode(a):""}
function Wc(a,b){if(a){a.nodeType===Node.ELEMENT_NODE&&b(a);for(var c=0,d;c<a.childNodes.length;c++)d=a.childNodes[c],d.nodeType===Node.ELEMENT_NODE&&Wc(d,b)}};var od="__eventWrappers"+Date.now(),pd=function(){var a=Object.getOwnPropertyDescriptor(Event.prototype,"composed");return a?function(b){return a.get.call(b)}:null}(),qd={blur:!0,focus:!0,focusin:!0,focusout:!0,click:!0,dblclick:!0,mousedown:!0,mouseenter:!0,mouseleave:!0,mousemove:!0,mouseout:!0,mouseover:!0,mouseup:!0,wheel:!0,beforeinput:!0,input:!0,keydown:!0,keyup:!0,compositionstart:!0,compositionupdate:!0,compositionend:!0,touchstart:!0,touchend:!0,touchmove:!0,touchcancel:!0,pointerover:!0,
pointerenter:!0,pointerdown:!0,pointermove:!0,pointerup:!0,pointercancel:!0,pointerout:!0,pointerleave:!0,gotpointercapture:!0,lostpointercapture:!0,dragstart:!0,drag:!0,dragenter:!0,dragleave:!0,dragover:!0,drop:!0,dragend:!0,DOMActivate:!0,DOMFocusIn:!0,DOMFocusOut:!0,keypress:!0},rd={DOMAttrModified:!0,DOMAttributeNameChanged:!0,DOMCharacterDataModified:!0,DOMElementNameChanged:!0,DOMNodeInserted:!0,DOMNodeInsertedIntoDocument:!0,DOMNodeRemoved:!0,DOMNodeRemovedFromDocument:!0,DOMSubtreeModified:!0};
function sd(a,b){var c=[],d=a;for(a=a===window?window:a.getRootNode();d;)c.push(d),d=d.assignedSlot?d.assignedSlot:d.nodeType===Node.DOCUMENT_FRAGMENT_NODE&&d.host&&(b||d!==a)?d.host:d.parentNode;c[c.length-1]===document&&c.push(window);return c}function td(a,b){if(!B)return a;a=sd(a,!0);for(var c=0,d,e=void 0,f,g=void 0;c<b.length;c++)if(d=b[c],f=d===window?window:d.getRootNode(),f!==e&&(g=a.indexOf(f),e=f),!B(f)||-1<g)return d}
var ud={get composed(){void 0===this.Y&&(pd?this.Y="focusin"===this.type||"focusout"===this.type||pd(this):!1!==this.isTrusted&&(this.Y=qd[this.type]));return this.Y||!1},composedPath:function(){this.ta||(this.ta=sd(this.__target,this.composed));return this.ta},get target(){return td(this.currentTarget||this.__previousCurrentTarget,this.composedPath())},get relatedTarget(){if(!this.la)return null;this.va||(this.va=sd(this.la,!0));return td(this.currentTarget||this.__previousCurrentTarget,this.va)},
stopPropagation:function(){Event.prototype.stopPropagation.call(this);this.ka=!0},stopImmediatePropagation:function(){Event.prototype.stopImmediatePropagation.call(this);this.ka=this.Da=!0}};function vd(a){function b(b,d){b=new a(b,d);b.Y=d&&!!d.composed;return b}tb(b,a);b.prototype=a.prototype;return b}var wd={focus:!0,blur:!0};function xd(a){return a.__target!==a.target||a.la!==a.relatedTarget}
function yd(a,b,c){if(c=b.__handlers&&b.__handlers[a.type]&&b.__handlers[a.type][c])for(var d=0,e;(e=c[d])&&(!xd(a)||a.target!==a.relatedTarget)&&(e.call(b,a),!a.Da);d++);}
function zd(a){var b=a.composedPath();Object.defineProperty(a,"currentTarget",{get:function(){return d},configurable:!0});for(var c=b.length-1;0<=c;c--){var d=b[c];yd(a,d,"capture");if(a.ka)return}Object.defineProperty(a,"eventPhase",{get:function(){return Event.AT_TARGET}});var e;for(c=0;c<b.length;c++){d=b[c];var f=z(d);f=f&&f.root;if(0===c||f&&f===e)if(yd(a,d,"bubble"),d!==window&&(e=d.getRootNode()),a.ka)break}}
function Ad(a,b,c,d,e,f){for(var g=0;g<a.length;g++){var h=a[g],k=h.type,l=h.capture,n=h.once,p=h.passive;if(b===h.node&&c===k&&d===l&&e===n&&f===p)return g}return-1}
function Bd(a,b,c){if(b){var d=typeof b;if("function"===d||"object"===d)if("object"!==d||b.handleEvent&&"function"===typeof b.handleEvent){var e=this instanceof Window?C.gb:C.addEventListener;if(rd[a])return e.call(this,a,b,c);if(c&&"object"===typeof c){var f=!!c.capture;var g=!!c.once;var h=!!c.passive}else f=!!c,h=g=!1;var k=c&&c.na||this,l=b[od];if(l){if(-1<Ad(l,k,a,f,g,h))return}else b[od]=[];l=function(e){g&&this.removeEventListener(a,b,c);e.__target||Cd(e);if(k!==this){var f=Object.getOwnPropertyDescriptor(e,
"currentTarget");Object.defineProperty(e,"currentTarget",{get:function(){return k},configurable:!0})}e.__previousCurrentTarget=e.currentTarget;if(!B(k)||-1!=e.composedPath().indexOf(k))if(e.composed||-1<e.composedPath().indexOf(k))if(xd(e)&&e.target===e.relatedTarget)e.eventPhase===Event.BUBBLING_PHASE&&e.stopImmediatePropagation();else if(e.eventPhase===Event.CAPTURING_PHASE||e.bubbles||e.target===k||k instanceof Window){var h="function"===d?b.call(k,e):b.handleEvent&&b.handleEvent(e);k!==this&&
(f?(Object.defineProperty(e,"currentTarget",f),f=null):delete e.currentTarget);return h}};b[od].push({node:k,type:a,capture:f,once:g,passive:h,ib:l});wd[a]?(this.__handlers=this.__handlers||{},this.__handlers[a]=this.__handlers[a]||{capture:[],bubble:[]},this.__handlers[a][f?"capture":"bubble"].push(l)):e.call(this,a,l,c)}}}
function Dd(a,b,c){if(b){var d=this instanceof Window?C.hb:C.removeEventListener;if(rd[a])return d.call(this,a,b,c);if(c&&"object"===typeof c){var e=!!c.capture;var f=!!c.once;var g=!!c.passive}else e=!!c,g=f=!1;var h=c&&c.na||this,k=void 0;var l=null;try{l=b[od]}catch(n){}l&&(f=Ad(l,h,a,e,f,g),-1<f&&(k=l.splice(f,1)[0].ib,l.length||(b[od]=void 0)));d.call(this,a,k||b,c);k&&wd[a]&&this.__handlers&&this.__handlers[a]&&(a=this.__handlers[a][e?"capture":"bubble"],k=a.indexOf(k),-1<k&&a.splice(k,1))}}
function Ed(){for(var a in wd)window.addEventListener(a,function(a){a.__target||(Cd(a),zd(a))},!0)}function Cd(a){a.__target=a.target;a.la=a.relatedTarget;if(A.K){var b=Object.getPrototypeOf(a);if(!b.hasOwnProperty("__patchProto")){var c=Object.create(b);c.jb=b;rb(c,ud);b.__patchProto=c}a.__proto__=b.__patchProto}else rb(a,ud)}var Fd=vd(window.Event),Gd=vd(window.CustomEvent),Hd=vd(window.MouseEvent);
function Id(){window.Event=Fd;window.CustomEvent=Gd;window.MouseEvent=Hd;Ed();if(!pd&&Object.getOwnPropertyDescriptor(Event.prototype,"isTrusted")){var a=function(){var a=new MouseEvent("click",{bubbles:!0,cancelable:!0,composed:!0});this.dispatchEvent(a)};Element.prototype.click?Element.prototype.click=a:HTMLElement.prototype.click&&(HTMLElement.prototype.click=a)}};function Jd(a,b){return{index:a,W:[],ba:b}}
function Kd(a,b,c,d){var e=0,f=0,g=0,h=0,k=Math.min(b-e,d-f);if(0==e&&0==f)a:{for(g=0;g<k;g++)if(a[g]!==c[g])break a;g=k}if(b==a.length&&d==c.length){h=a.length;for(var l=c.length,n=0;n<k-g&&Ld(a[--h],c[--l]);)n++;h=n}e+=g;f+=g;b-=h;d-=h;if(0==b-e&&0==d-f)return[];if(e==b){for(b=Jd(e,0);f<d;)b.W.push(c[f++]);return[b]}if(f==d)return[Jd(e,b-e)];k=e;g=f;d=d-g+1;h=b-k+1;b=Array(d);for(l=0;l<d;l++)b[l]=Array(h),b[l][0]=l;for(l=0;l<h;l++)b[0][l]=l;for(l=1;l<d;l++)for(n=1;n<h;n++)if(a[k+n-1]===c[g+l-1])b[l][n]=
b[l-1][n-1];else{var p=b[l-1][n]+1,G=b[l][n-1]+1;b[l][n]=p<G?p:G}k=b.length-1;g=b[0].length-1;d=b[k][g];for(a=[];0<k||0<g;)0==k?(a.push(2),g--):0==g?(a.push(3),k--):(h=b[k-1][g-1],l=b[k-1][g],n=b[k][g-1],p=l<n?l<h?l:h:n<h?n:h,p==h?(h==d?a.push(0):(a.push(1),d=h),k--,g--):p==l?(a.push(3),k--,d=l):(a.push(2),g--,d=n));a.reverse();b=void 0;k=[];for(g=0;g<a.length;g++)switch(a[g]){case 0:b&&(k.push(b),b=void 0);e++;f++;break;case 1:b||(b=Jd(e,0));b.ba++;e++;b.W.push(c[f]);f++;break;case 2:b||(b=Jd(e,
0));b.ba++;e++;break;case 3:b||(b=Jd(e,0)),b.W.push(c[f]),f++}b&&k.push(b);return k}function Ld(a,b){return a===b};var Md=J.parentNode,Nd=J.childNodes,Od={},Pd=A.deferConnectionCallbacks&&"loading"===document.readyState,Qd;function Rd(a){var b=[];do b.unshift(a);while(a=a.parentNode);return b}
function Gc(a,b,c){if(a!==Od)throw new TypeError("Illegal constructor");this.Ja="ShadyRoot";this.host=b;this.c=c&&c.mode;Nc(b);a=x(b);a.root=this;a.za="closed"!==this.c?this:null;a=x(this);a.firstChild=a.lastChild=a.parentNode=a.nextSibling=a.previousSibling=null;a.childNodes=[];this.b=this.aa=!1;this.a=this.w=this.o=null;Yc(this)}function Yc(a){a.aa||(a.aa=!0,Gb(function(){return Sd(a)}))}
function Sd(a){for(var b;a;){a.aa&&(b=a);a:{var c=a;a=c.host.getRootNode();if(B(a))for(var d=c.host.childNodes,e=0;e<d.length;e++)if(c=d[e],"slot"==c.localName)break a;a=void 0}}b&&b._renderRoot()}
Gc.prototype._renderRoot=function(){var a=Pd;Pd=!0;this.aa=!1;if(this.o){fd(this);for(var b=0,c;b<this.o.length;b++){c=this.o[b];var d=z(c),e=d.assignedNodes;d.assignedNodes=[];d.N=[];if(d.oa=e)for(d=0;d<e.length;d++){var f=z(e[d]);f.$=f.assignedSlot;f.assignedSlot===c&&(f.assignedSlot=null)}}for(b=this.host.firstChild;b;b=b.nextSibling)Td(this,b);for(b=0;b<this.o.length;b++){c=this.o[b];e=z(c);if(!e.assignedNodes.length)for(d=c.firstChild;d;d=d.nextSibling)Td(this,d,c);(d=(d=z(c.parentNode))&&d.root)&&
dd(d)&&d._renderRoot();Ud(this,e.N,e.assignedNodes);if(d=e.oa){for(f=0;f<d.length;f++)z(d[f]).$=null;e.oa=null;d.length>e.assignedNodes.length&&(e.ea=!0)}e.ea&&(e.ea=!1,Vd(this,c))}c=this.o;b=[];for(e=0;e<c.length;e++)d=c[e].parentNode,(f=z(d))&&f.root||!(0>b.indexOf(d))||b.push(d);for(c=0;c<b.length;c++){f=b[c];e=f===this?this.host:f;d=[];f=f.childNodes;for(var g=0;g<f.length;g++){var h=f[g];if("slot"==h.localName){h=z(h).N;for(var k=0;k<h.length;k++)d.push(h[k])}else d.push(h)}f=Nd(e);g=Kd(d,d.length,
f,f.length);k=h=0;for(var l=void 0;h<g.length&&(l=g[h]);h++){for(var n=0,p=void 0;n<l.W.length&&(p=l.W[n]);n++)Md(p)===e&&C.removeChild.call(e,p),f.splice(l.index+k,1);k-=l.ba}k=0;for(l=void 0;k<g.length&&(l=g[k]);k++)for(h=f[l.index],n=l.index;n<l.index+l.ba;n++)p=d[n],C.insertBefore.call(e,p,h),f.splice(n,0,p)}}if(!this.b)for(b=this.host.childNodes,c=0,e=b.length;c<e;c++)d=b[c],f=z(d),Md(d)!==this.host||"slot"!==d.localName&&f.assignedSlot||C.removeChild.call(this.host,d);this.b=!0;Pd=a;Qd&&Qd()};
function Td(a,b,c){var d=x(b),e=d.$;d.$=null;c||(c=(a=a.w[b.slot||"__catchall"])&&a[0]);c?(x(c).assignedNodes.push(b),d.assignedSlot=c):d.assignedSlot=void 0;e!==d.assignedSlot&&d.assignedSlot&&(x(d.assignedSlot).ea=!0)}function Ud(a,b,c){for(var d=0,e=void 0;d<c.length&&(e=c[d]);d++)if("slot"==e.localName){var f=z(e).assignedNodes;f&&f.length&&Ud(a,b,f)}else b.push(c[d])}function Vd(a,b){C.dispatchEvent.call(b,new Event("slotchange"));b=z(b);b.assignedSlot&&Vd(a,b.assignedSlot)}
function Xc(a,b){a.a=a.a||[];a.o=a.o||[];a.w=a.w||{};a.a.push.apply(a.a,b instanceof Array?b:na(ma(b)))}function fd(a){if(a.a&&a.a.length){for(var b=a.a,c,d=0;d<b.length;d++){var e=b[d];Nc(e);Nc(e.parentNode);var f=gd(e);a.w[f]?(c=c||{},c[f]=!0,a.w[f].push(e)):a.w[f]=[e];a.o.push(e)}if(c)for(var g in c)a.w[g]=hd(a.w[g]);a.a=[]}}function gd(a){var b=a.name||a.getAttribute("name")||"__catchall";return a.Ha=b}
function hd(a){return a.sort(function(a,c){a=Rd(a);for(var b=Rd(c),e=0;e<a.length;e++){c=a[e];var f=b[e];if(c!==f)return a=Array.from(c.parentNode.childNodes),a.indexOf(c)-a.indexOf(f)}})}function cd(a,b){if(a.o){fd(a);var c=a.w,d;for(d in c)for(var e=c[d],f=0;f<e.length;f++){var g=e[f];if(Cb(b,g)){e.splice(f,1);var h=a.o.indexOf(g);0<=h&&a.o.splice(h,1);f--;g=z(g);if(h=g.N)for(var k=0;k<h.length;k++){var l=h[k],n=Md(l);n&&C.removeChild.call(n,l)}g.N=[];g.assignedNodes=[];h=!0}}return h}}
function dd(a){fd(a);return!(!a.o||!a.o.length)}
if(window.customElements&&A.qa){var Wd=new Map;Qd=function(){var a=Array.from(Wd);Wd.clear();a=ma(a);for(var b=a.next();!b.done;b=a.next()){b=ma(b.value);var c=b.next().value;b.next().value?c.Fa():c.Ga()}};Pd&&document.addEventListener("readystatechange",function(){Pd=!1;Qd()},{once:!0});var Xd=function(a,b,c){var d=0,e="__isConnected"+d++;if(b||c)a.prototype.connectedCallback=a.prototype.Fa=function(){Pd?Wd.set(this,!0):this[e]||(this[e]=!0,b&&b.call(this))},a.prototype.disconnectedCallback=a.prototype.Ga=
function(){Pd?this.isConnected||Wd.set(this,!1):this[e]&&(this[e]=!1,c&&c.call(this))};return a},define=window.customElements.define;Object.defineProperty(window.CustomElementRegistry.prototype,"define",{value:function(a,b){var c=b.prototype.connectedCallback,d=b.prototype.disconnectedCallback;define.call(window.customElements,a,Xd(b,c,d));b.prototype.connectedCallback=c;b.prototype.disconnectedCallback=d}})};function Yd(a){var b=a.getRootNode();B(b)&&Sd(b);return(a=z(a))&&a.assignedSlot||null}
var Zd={addEventListener:Bd.bind(window),removeEventListener:Dd.bind(window)},$d={addEventListener:Bd,removeEventListener:Dd,appendChild:function(a){return Pc(this,a)},insertBefore:function(a,b){return Pc(this,a,b)},removeChild:function(a){return Sc(this,a)},replaceChild:function(a,b){Pc(this,a,b);Sc(this,b);return a},cloneNode:function(a){if("template"==this.localName)var b=C.cloneNode.call(this,a);else if(b=C.cloneNode.call(this,!1),a&&b.nodeType!==Node.ATTRIBUTE_NODE){a=this.childNodes;for(var c=
0,d;c<a.length;c++)d=a[c].cloneNode(!0),b.appendChild(d)}return b},getRootNode:function(){return id(this)},contains:function(a){return Cb(this,a)},dispatchEvent:function(a){Hb();return C.dispatchEvent.call(this,a)}};
Object.defineProperties($d,{isConnected:{get:function(){if(xc&&xc.call(this))return!0;if(this.nodeType==Node.DOCUMENT_FRAGMENT_NODE)return!1;var a=this.ownerDocument;if(Bb){if(C.contains.call(a,this))return!0}else if(a.documentElement&&C.contains.call(a.documentElement,this))return!0;for(a=this;a&&!(a instanceof Document);)a=a.parentNode||(B(a)?a.host:void 0);return!!(a&&a instanceof Document)},configurable:!0}});
var ae={get assignedSlot(){return Yd(this)}},be={querySelector:function(a){return jd(this,function(b){return qb.call(b,a)},function(a){return!!a})[0]||null},querySelectorAll:function(a,b){if(b){b=Array.prototype.slice.call(C.querySelectorAll.call(this,a));var c=this.getRootNode();return b.filter(function(a){return a.getRootNode()==c})}return jd(this,function(b){return qb.call(b,a)})}},ce={assignedNodes:function(a){if("slot"===this.localName){var b=this.getRootNode();B(b)&&Sd(b);return(b=z(this))?
(a&&a.flatten?b.N:b.assignedNodes)||[]:[]}}},de=sb({setAttribute:function(a,b){md(this,a,b)},removeAttribute:function(a){C.removeAttribute.call(this,a);ed(this,a)},attachShadow:function(a){if(!this)throw"Must provide a host.";if(!a)throw"Not enough arguments.";return new Gc(Od,this,a)},get slot(){return this.getAttribute("slot")},set slot(a){md(this,"slot",a)},get assignedSlot(){return Yd(this)}},be,ce);Object.defineProperties(de,Cc);
var ee=sb({importNode:function(a,b){return nd(a,b)},getElementById:function(a){return jd(this,function(b){return b.id==a},function(a){return!!a})[0]||null}},be);Object.defineProperties(ee,{_activeElement:Dc.activeElement});
for(var fe=HTMLElement.prototype.blur,ge={blur:function(){var a=z(this);(a=(a=a&&a.root)&&a.activeElement)?a.blur():fe.call(this)}},he={},ie=ma(Object.getOwnPropertyNames(Document.prototype)),je=ie.next();!je.done;he={H:he.H},je=ie.next())he.H=je.value,"on"===he.H.substring(0,2)&&Object.defineProperty(ge,he.H,{set:function(a){return function(b){var c=x(this),d=a.H.substring(2);c.Z[a.H]&&this.removeEventListener(d,c.Z[a.H]);this.addEventListener(d,b,{});c.Z[a.H]=b}}(he),get:function(a){return function(){var b=
z(this);return b&&b.Z[a.H]}}(he),configurable:!0});var ke={addEventListener:function(a,b,c){"object"!==typeof c&&(c={capture:!!c});c.na=this;this.host.addEventListener(a,b,c)},removeEventListener:function(a,b,c){"object"!==typeof c&&(c={capture:!!c});c.na=this;this.host.removeEventListener(a,b,c)},getElementById:function(a){return jd(this,function(b){return b.id==a},function(a){return!!a})[0]||null}};
function L(a,b){for(var c=Object.getOwnPropertyNames(b),d=0;d<c.length;d++){var e=c[d],f=Object.getOwnPropertyDescriptor(b,e);f.value?a[e]=f.value:Object.defineProperty(a,e,f)}};if(A.qa){var ShadyDOM={inUse:A.qa,patch:function(a){Ic(a);Hc(a);return a},isShadyRoot:B,enqueue:Gb,flush:Hb,settings:A,filterMutations:Mb,observeChildren:Kb,unobserveChildren:Lb,nativeMethods:C,nativeTree:J,deferConnectionCallbacks:A.deferConnectionCallbacks,handlesDynamicScoping:!0};window.ShadyDOM=ShadyDOM;Id();var le=window.customElements&&window.customElements.nativeHTMLElement||HTMLElement;L(Gc.prototype,ke);L(window.Node.prototype,$d);L(window.Window.prototype,Zd);L(window.Text.prototype,ae);
L(window.DocumentFragment.prototype,be);L(window.Element.prototype,de);L(window.Document.prototype,ee);window.HTMLSlotElement&&L(window.HTMLSlotElement.prototype,ce);L(le.prototype,ge);A.K&&(Ec(window.Node.prototype),Ec(window.Text.prototype),Ec(window.DocumentFragment.prototype),Ec(window.Element.prototype),Ec(le.prototype),Ec(window.Document.prototype),window.HTMLSlotElement&&Ec(window.HTMLSlotElement.prototype));Fc();window.ShadowRoot=Gc};var me=new Set("annotation-xml color-profile font-face font-face-src font-face-uri font-face-format font-face-name missing-glyph".split(" "));function ne(a){var b=me.has(a);a=/^[a-z][.0-9_a-z]*-[\-.0-9_a-z]*$/.test(a);return!b&&a}function M(a){var b=a.isConnected;if(void 0!==b)return b;for(;a&&!(a.__CE_isImportDocument||a instanceof Document);)a=a.parentNode||(window.ShadowRoot&&a instanceof ShadowRoot?a.host:void 0);return!(!a||!(a.__CE_isImportDocument||a instanceof Document))}
function oe(a,b){for(;b&&b!==a&&!b.nextSibling;)b=b.parentNode;return b&&b!==a?b.nextSibling:null}
function pe(a,b,c){c=void 0===c?new Set:c;for(var d=a;d;){if(d.nodeType===Node.ELEMENT_NODE){var e=d;b(e);var f=e.localName;if("link"===f&&"import"===e.getAttribute("rel")){d=e.import;if(d instanceof Node&&!c.has(d))for(c.add(d),d=d.firstChild;d;d=d.nextSibling)pe(d,b,c);d=oe(a,e);continue}else if("template"===f){d=oe(a,e);continue}if(e=e.__CE_shadowRoot)for(e=e.firstChild;e;e=e.nextSibling)pe(e,b,c)}d=d.firstChild?d.firstChild:oe(a,d)}}function N(a,b,c){a[b]=c};function qe(){this.a=new Map;this.m=new Map;this.f=[];this.c=!1}function re(a,b,c){a.a.set(b,c);a.m.set(c.constructor,c)}function se(a,b){a.c=!0;a.f.push(b)}function te(a,b){a.c&&pe(b,function(b){return a.b(b)})}qe.prototype.b=function(a){if(this.c&&!a.__CE_patched){a.__CE_patched=!0;for(var b=0;b<this.f.length;b++)this.f[b](a)}};function O(a,b){var c=[];pe(b,function(a){return c.push(a)});for(b=0;b<c.length;b++){var d=c[b];1===d.__CE_state?a.connectedCallback(d):ue(a,d)}}
function P(a,b){var c=[];pe(b,function(a){return c.push(a)});for(b=0;b<c.length;b++){var d=c[b];1===d.__CE_state&&a.disconnectedCallback(d)}}
function Q(a,b,c){c=void 0===c?{}:c;var d=c.fb||new Set,e=c.ia||function(b){return ue(a,b)},f=[];pe(b,function(b){if("link"===b.localName&&"import"===b.getAttribute("rel")){var c=b.import;c instanceof Node&&(c.__CE_isImportDocument=!0,c.__CE_hasRegistry=!0);c&&"complete"===c.readyState?c.__CE_documentLoadHandled=!0:b.addEventListener("load",function(){var c=b.import;if(!c.__CE_documentLoadHandled){c.__CE_documentLoadHandled=!0;var f=new Set(d);f.delete(c);Q(a,c,{fb:f,ia:e})}})}else f.push(b)},d);
if(a.c)for(b=0;b<f.length;b++)a.b(f[b]);for(b=0;b<f.length;b++)e(f[b])}
function ue(a,b){if(void 0===b.__CE_state){var c=b.ownerDocument;if(c.defaultView||c.__CE_isImportDocument&&c.__CE_hasRegistry)if(c=a.a.get(b.localName)){c.constructionStack.push(b);var d=c.constructor;try{try{if(new d!==b)throw Error("The custom element constructor did not produce the element being upgraded.");}finally{c.constructionStack.pop()}}catch(g){throw b.__CE_state=2,g;}b.__CE_state=1;b.__CE_definition=c;if(c.attributeChangedCallback)for(c=c.observedAttributes,d=0;d<c.length;d++){var e=c[d],
f=b.getAttribute(e);null!==f&&a.attributeChangedCallback(b,e,null,f,null)}M(b)&&a.connectedCallback(b)}}}qe.prototype.connectedCallback=function(a){var b=a.__CE_definition;b.connectedCallback&&b.connectedCallback.call(a)};qe.prototype.disconnectedCallback=function(a){var b=a.__CE_definition;b.disconnectedCallback&&b.disconnectedCallback.call(a)};
qe.prototype.attributeChangedCallback=function(a,b,c,d,e){var f=a.__CE_definition;f.attributeChangedCallback&&-1<f.observedAttributes.indexOf(b)&&f.attributeChangedCallback.call(a,b,c,d,e)};function ve(a){var b=document;this.b=a;this.a=b;this.P=void 0;Q(this.b,this.a);"loading"===this.a.readyState&&(this.P=new MutationObserver(this.c.bind(this)),this.P.observe(this.a,{childList:!0,subtree:!0}))}function we(a){a.P&&a.P.disconnect()}ve.prototype.c=function(a){var b=this.a.readyState;"interactive"!==b&&"complete"!==b||we(this);for(b=0;b<a.length;b++)for(var c=a[b].addedNodes,d=0;d<c.length;d++)Q(this.b,c[d])};function xe(){var a=this;this.a=this.A=void 0;this.b=new Promise(function(b){a.a=b;a.A&&b(a.A)})}xe.prototype.resolve=function(a){if(this.A)throw Error("Already resolved.");this.A=a;this.a&&this.a(a)};function S(a){this.c=!1;this.a=a;this.G=new Map;this.f=function(a){return a()};this.b=!1;this.m=[];this.fa=new ve(a)}r=S.prototype;
r.define=function(a,b){var c=this;if(!(b instanceof Function))throw new TypeError("Custom element constructors must be functions.");if(!ne(a))throw new SyntaxError("The element name '"+a+"' is not valid.");if(this.a.a.get(a))throw Error("A custom element with name '"+a+"' has already been defined.");if(this.c)throw Error("A custom element is already being defined.");this.c=!0;try{var d=function(a){var b=e[a];if(void 0!==b&&!(b instanceof Function))throw Error("The '"+a+"' callback must be a function.");
return b},e=b.prototype;if(!(e instanceof Object))throw new TypeError("The custom element constructor's prototype is not an object.");var f=d("connectedCallback");var g=d("disconnectedCallback");var h=d("adoptedCallback");var k=d("attributeChangedCallback");var l=b.observedAttributes||[]}catch(n){return}finally{this.c=!1}b={localName:a,constructor:b,connectedCallback:f,disconnectedCallback:g,adoptedCallback:h,attributeChangedCallback:k,observedAttributes:l,constructionStack:[]};re(this.a,a,b);this.m.push(b);
this.b||(this.b=!0,this.f(function(){return ye(c)}))};r.ia=function(a){Q(this.a,a)};function ye(a){if(!1!==a.b){a.b=!1;for(var b=a.m,c=[],d=new Map,e=0;e<b.length;e++)d.set(b[e].localName,[]);Q(a.a,document,{ia:function(b){if(void 0===b.__CE_state){var e=b.localName,f=d.get(e);f?f.push(b):a.a.a.get(e)&&c.push(b)}}});for(e=0;e<c.length;e++)ue(a.a,c[e]);for(;0<b.length;){var f=b.shift();e=f.localName;f=d.get(f.localName);for(var g=0;g<f.length;g++)ue(a.a,f[g]);(e=a.G.get(e))&&e.resolve(void 0)}}}
r.get=function(a){if(a=this.a.a.get(a))return a.constructor};r.Ca=function(a){if(!ne(a))return Promise.reject(new SyntaxError("'"+a+"' is not a valid custom element name."));var b=this.G.get(a);if(b)return b.b;b=new xe;this.G.set(a,b);this.a.a.get(a)&&!this.m.some(function(b){return b.localName===a})&&b.resolve(void 0);return b.b};r.Ya=function(a){we(this.fa);var b=this.f;this.f=function(c){return a(function(){return b(c)})}};window.CustomElementRegistry=S;S.prototype.define=S.prototype.define;
S.prototype.upgrade=S.prototype.ia;S.prototype.get=S.prototype.get;S.prototype.whenDefined=S.prototype.Ca;S.prototype.polyfillWrapFlushCallback=S.prototype.Ya;var ze=window.Document.prototype.createElement,Ae=window.Document.prototype.createElementNS,Be=window.Document.prototype.importNode,Ce=window.Document.prototype.prepend,De=window.Document.prototype.append,Ee=window.DocumentFragment.prototype.prepend,Fe=window.DocumentFragment.prototype.append,Ge=window.Node.prototype.cloneNode,He=window.Node.prototype.appendChild,Ie=window.Node.prototype.insertBefore,Je=window.Node.prototype.removeChild,Ke=window.Node.prototype.replaceChild,Le=Object.getOwnPropertyDescriptor(window.Node.prototype,
"textContent"),Me=window.Element.prototype.attachShadow,Ne=Object.getOwnPropertyDescriptor(window.Element.prototype,"innerHTML"),Oe=window.Element.prototype.getAttribute,Pe=window.Element.prototype.setAttribute,Qe=window.Element.prototype.removeAttribute,Re=window.Element.prototype.getAttributeNS,Se=window.Element.prototype.setAttributeNS,Te=window.Element.prototype.removeAttributeNS,Ue=window.Element.prototype.insertAdjacentElement,Ve=window.Element.prototype.insertAdjacentHTML,We=window.Element.prototype.prepend,
Xe=window.Element.prototype.append,Ye=window.Element.prototype.before,Ze=window.Element.prototype.after,$e=window.Element.prototype.replaceWith,af=window.Element.prototype.remove,bf=window.HTMLElement,cf=Object.getOwnPropertyDescriptor(window.HTMLElement.prototype,"innerHTML"),df=window.HTMLElement.prototype.insertAdjacentElement,ef=window.HTMLElement.prototype.insertAdjacentHTML;var ff=new function(){};function gf(){var a=hf;window.HTMLElement=function(){function b(){var b=this.constructor,d=a.m.get(b);if(!d)throw Error("The custom element being constructed was not registered with `customElements`.");var e=d.constructionStack;if(0===e.length)return e=ze.call(document,d.localName),Object.setPrototypeOf(e,b.prototype),e.__CE_state=1,e.__CE_definition=d,a.b(e),e;d=e.length-1;var f=e[d];if(f===ff)throw Error("The HTMLElement constructor was either called reentrantly for this constructor or called multiple times.");
e[d]=ff;Object.setPrototypeOf(f,b.prototype);a.b(f);return f}b.prototype=bf.prototype;Object.defineProperty(b.prototype,"constructor",{writable:!0,configurable:!0,enumerable:!1,value:b});return b}()};function jf(a,b,c){function d(b){return function(c){for(var d=[],e=0;e<arguments.length;++e)d[e]=arguments[e];e=[];for(var f=[],l=0;l<d.length;l++){var n=d[l];n instanceof Element&&M(n)&&f.push(n);if(n instanceof DocumentFragment)for(n=n.firstChild;n;n=n.nextSibling)e.push(n);else e.push(n)}b.apply(this,d);for(d=0;d<f.length;d++)P(a,f[d]);if(M(this))for(d=0;d<e.length;d++)f=e[d],f instanceof Element&&O(a,f)}}void 0!==c.ha&&(b.prepend=d(c.ha));void 0!==c.append&&(b.append=d(c.append))};function kf(){var a=hf;N(Document.prototype,"createElement",function(b){if(this.__CE_hasRegistry){var c=a.a.get(b);if(c)return new c.constructor}b=ze.call(this,b);a.b(b);return b});N(Document.prototype,"importNode",function(b,c){b=Be.call(this,b,c);this.__CE_hasRegistry?Q(a,b):te(a,b);return b});N(Document.prototype,"createElementNS",function(b,c){if(this.__CE_hasRegistry&&(null===b||"http://www.w3.org/1999/xhtml"===b)){var d=a.a.get(c);if(d)return new d.constructor}b=Ae.call(this,b,c);a.b(b);return b});
jf(a,Document.prototype,{ha:Ce,append:De})};function lf(){function a(a,d){Object.defineProperty(a,"textContent",{enumerable:d.enumerable,configurable:!0,get:d.get,set:function(a){if(this.nodeType===Node.TEXT_NODE)d.set.call(this,a);else{var c=void 0;if(this.firstChild){var e=this.childNodes,h=e.length;if(0<h&&M(this)){c=Array(h);for(var k=0;k<h;k++)c[k]=e[k]}}d.set.call(this,a);if(c)for(a=0;a<c.length;a++)P(b,c[a])}}})}var b=hf;N(Node.prototype,"insertBefore",function(a,d){if(a instanceof DocumentFragment){var c=Array.prototype.slice.apply(a.childNodes);
a=Ie.call(this,a,d);if(M(this))for(d=0;d<c.length;d++)O(b,c[d]);return a}c=M(a);d=Ie.call(this,a,d);c&&P(b,a);M(this)&&O(b,a);return d});N(Node.prototype,"appendChild",function(a){if(a instanceof DocumentFragment){var c=Array.prototype.slice.apply(a.childNodes);a=He.call(this,a);if(M(this))for(var e=0;e<c.length;e++)O(b,c[e]);return a}c=M(a);e=He.call(this,a);c&&P(b,a);M(this)&&O(b,a);return e});N(Node.prototype,"cloneNode",function(a){a=Ge.call(this,a);this.ownerDocument.__CE_hasRegistry?Q(b,a):
te(b,a);return a});N(Node.prototype,"removeChild",function(a){var c=M(a),e=Je.call(this,a);c&&P(b,a);return e});N(Node.prototype,"replaceChild",function(a,d){if(a instanceof DocumentFragment){var c=Array.prototype.slice.apply(a.childNodes);a=Ke.call(this,a,d);if(M(this))for(P(b,d),d=0;d<c.length;d++)O(b,c[d]);return a}c=M(a);var f=Ke.call(this,a,d),g=M(this);g&&P(b,d);c&&P(b,a);g&&O(b,a);return f});Le&&Le.get?a(Node.prototype,Le):se(b,function(b){a(b,{enumerable:!0,configurable:!0,get:function(){for(var a=
[],b=0;b<this.childNodes.length;b++)a.push(this.childNodes[b].textContent);return a.join("")},set:function(a){for(;this.firstChild;)Je.call(this,this.firstChild);He.call(this,document.createTextNode(a))}})})};function mf(a){function b(b){return function(c){for(var d=[],e=0;e<arguments.length;++e)d[e]=arguments[e];e=[];for(var h=[],k=0;k<d.length;k++){var l=d[k];l instanceof Element&&M(l)&&h.push(l);if(l instanceof DocumentFragment)for(l=l.firstChild;l;l=l.nextSibling)e.push(l);else e.push(l)}b.apply(this,d);for(d=0;d<h.length;d++)P(a,h[d]);if(M(this))for(d=0;d<e.length;d++)h=e[d],h instanceof Element&&O(a,h)}}var c=Element.prototype;void 0!==Ye&&(c.before=b(Ye));void 0!==Ye&&(c.after=b(Ze));void 0!==$e&&
N(c,"replaceWith",function(b){for(var c=[],d=0;d<arguments.length;++d)c[d]=arguments[d];d=[];for(var g=[],h=0;h<c.length;h++){var k=c[h];k instanceof Element&&M(k)&&g.push(k);if(k instanceof DocumentFragment)for(k=k.firstChild;k;k=k.nextSibling)d.push(k);else d.push(k)}h=M(this);$e.apply(this,c);for(c=0;c<g.length;c++)P(a,g[c]);if(h)for(P(a,this),c=0;c<d.length;c++)g=d[c],g instanceof Element&&O(a,g)});void 0!==af&&N(c,"remove",function(){var b=M(this);af.call(this);b&&P(a,this)})};function nf(){function a(a,b){Object.defineProperty(a,"innerHTML",{enumerable:b.enumerable,configurable:!0,get:b.get,set:function(a){var c=this,e=void 0;M(this)&&(e=[],pe(this,function(a){a!==c&&e.push(a)}));b.set.call(this,a);if(e)for(var f=0;f<e.length;f++){var g=e[f];1===g.__CE_state&&d.disconnectedCallback(g)}this.ownerDocument.__CE_hasRegistry?Q(d,this):te(d,this);return a}})}function b(a,b){N(a,"insertAdjacentElement",function(a,c){var e=M(c);a=b.call(this,a,c);e&&P(d,c);M(a)&&O(d,c);return a})}
function c(a,b){function c(a,b){for(var c=[];a!==b;a=a.nextSibling)c.push(a);for(b=0;b<c.length;b++)Q(d,c[b])}N(a,"insertAdjacentHTML",function(a,d){a=a.toLowerCase();if("beforebegin"===a){var e=this.previousSibling;b.call(this,a,d);c(e||this.parentNode.firstChild,this)}else if("afterbegin"===a)e=this.firstChild,b.call(this,a,d),c(this.firstChild,e);else if("beforeend"===a)e=this.lastChild,b.call(this,a,d),c(e||this.firstChild,null);else if("afterend"===a)e=this.nextSibling,b.call(this,a,d),c(this.nextSibling,
e);else throw new SyntaxError("The value provided ("+String(a)+") is not one of 'beforebegin', 'afterbegin', 'beforeend', or 'afterend'.");})}var d=hf;Me&&N(Element.prototype,"attachShadow",function(a){return this.__CE_shadowRoot=a=Me.call(this,a)});Ne&&Ne.get?a(Element.prototype,Ne):cf&&cf.get?a(HTMLElement.prototype,cf):se(d,function(b){a(b,{enumerable:!0,configurable:!0,get:function(){return Ge.call(this,!0).innerHTML},set:function(a){var b="template"===this.localName,c=b?this.content:this,d=Ae.call(document,
this.namespaceURI,this.localName);for(d.innerHTML=a;0<c.childNodes.length;)Je.call(c,c.childNodes[0]);for(a=b?d.content:d;0<a.childNodes.length;)He.call(c,a.childNodes[0])}})});N(Element.prototype,"setAttribute",function(a,b){if(1!==this.__CE_state)return Pe.call(this,a,b);var c=Oe.call(this,a);Pe.call(this,a,b);b=Oe.call(this,a);d.attributeChangedCallback(this,a,c,b,null)});N(Element.prototype,"setAttributeNS",function(a,b,c){if(1!==this.__CE_state)return Se.call(this,a,b,c);var e=Re.call(this,a,
b);Se.call(this,a,b,c);c=Re.call(this,a,b);d.attributeChangedCallback(this,b,e,c,a)});N(Element.prototype,"removeAttribute",function(a){if(1!==this.__CE_state)return Qe.call(this,a);var b=Oe.call(this,a);Qe.call(this,a);null!==b&&d.attributeChangedCallback(this,a,b,null,null)});N(Element.prototype,"removeAttributeNS",function(a,b){if(1!==this.__CE_state)return Te.call(this,a,b);var c=Re.call(this,a,b);Te.call(this,a,b);var e=Re.call(this,a,b);c!==e&&d.attributeChangedCallback(this,b,c,e,a)});df?b(HTMLElement.prototype,
df):Ue?b(Element.prototype,Ue):console.warn("Custom Elements: `Element#insertAdjacentElement` was not patched.");ef?c(HTMLElement.prototype,ef):Ve?c(Element.prototype,Ve):console.warn("Custom Elements: `Element#insertAdjacentHTML` was not patched.");jf(d,Element.prototype,{ha:We,append:Xe});mf(d)};var of=window.customElements;if(!of||of.forcePolyfill||"function"!=typeof of.define||"function"!=typeof of.get){var hf=new qe;gf();kf();jf(hf,DocumentFragment.prototype,{ha:Ee,append:Fe});lf();nf();document.__CE_hasRegistry=!0;var customElements=new S(hf);Object.defineProperty(window,"customElements",{configurable:!0,enumerable:!0,value:customElements})};function pf(){this.end=this.start=0;this.rules=this.parent=this.previous=null;this.cssText=this.parsedCssText="";this.atRule=!1;this.type=0;this.parsedSelector=this.selector=this.keyframesName=""}
function qf(a){a=a.replace(rf,"").replace(sf,"");var b=vf,c=a,d=new pf;d.start=0;d.end=c.length;for(var e=d,f=0,g=c.length;f<g;f++)if("{"===c[f]){e.rules||(e.rules=[]);var h=e,k=h.rules[h.rules.length-1]||null;e=new pf;e.start=f+1;e.parent=h;e.previous=k;h.rules.push(e)}else"}"===c[f]&&(e.end=f+1,e=e.parent||d);return b(d,a)}
function vf(a,b){var c=b.substring(a.start,a.end-1);a.parsedCssText=a.cssText=c.trim();a.parent&&(c=b.substring(a.previous?a.previous.end:a.parent.start,a.start-1),c=wf(c),c=c.replace(xf," "),c=c.substring(c.lastIndexOf(";")+1),c=a.parsedSelector=a.selector=c.trim(),a.atRule=0===c.indexOf("@"),a.atRule?0===c.indexOf("@media")?a.type=yf:c.match(zf)&&(a.type=Af,a.keyframesName=a.selector.split(xf).pop()):a.type=0===c.indexOf("--")?Bf:Cf);if(c=a.rules)for(var d=0,e=c.length,f=void 0;d<e&&(f=c[d]);d++)vf(f,
b);return a}function wf(a){return a.replace(/\\([0-9a-f]{1,6})\s/gi,function(a,c){a=c;for(c=6-a.length;c--;)a="0"+a;return"\\"+a})}
function Df(a,b,c){c=void 0===c?"":c;var d="";if(a.cssText||a.rules){var e=a.rules,f;if(f=e)f=e[0],f=!(f&&f.selector&&0===f.selector.indexOf("--"));if(f){f=0;for(var g=e.length,h=void 0;f<g&&(h=e[f]);f++)d=Df(h,b,d)}else b?b=a.cssText:(b=a.cssText,b=b.replace(Ef,"").replace(Ff,""),b=b.replace(Gf,"").replace(Hf,"")),(d=b.trim())&&(d="  "+d+"\n")}d&&(a.selector&&(c+=a.selector+" {\n"),c+=d,a.selector&&(c+="}\n\n"));return c}
var Cf=1,Af=7,yf=4,Bf=1E3,rf=/\/\*[^*]*\*+([^/*][^*]*\*+)*\//gim,sf=/@import[^;]*;/gim,Ef=/(?:^[^;\-\s}]+)?--[^;{}]*?:[^{};]*?(?:[;\n]|$)/gim,Ff=/(?:^[^;\-\s}]+)?--[^;{}]*?:[^{};]*?{[^}]*?}(?:[;\n]|$)?/gim,Gf=/@apply\s*\(?[^);]*\)?\s*(?:[;\n]|$)?/gim,Hf=/[^;:]*?:[^;]*?var\([^;]*\)(?:[;\n]|$)?/gim,zf=/^@[^\s]*keyframes/,xf=/\s+/g;var T=!(window.ShadyDOM&&window.ShadyDOM.inUse),If;function Jf(a){If=a&&a.shimcssproperties?!1:T||!(navigator.userAgent.match(/AppleWebKit\/601|Edge\/15/)||!window.CSS||!CSS.supports||!CSS.supports("box-shadow","0 0 0 var(--foo)"))}window.ShadyCSS&&void 0!==window.ShadyCSS.nativeCss?If=window.ShadyCSS.nativeCss:window.ShadyCSS?(Jf(window.ShadyCSS),window.ShadyCSS=void 0):Jf(window.WebComponents&&window.WebComponents.flags);var V=If;var Kf=/(?:^|[;\s{]\s*)(--[\w-]*?)\s*:\s*(?:((?:'(?:\\'|.)*?'|"(?:\\"|.)*?"|\([^)]*?\)|[^};{])+)|\{([^}]*)\}(?:(?=[;\s}])|$))/gi,Lf=/(?:^|\W+)@apply\s*\(?([^);\n]*)\)?/gi,Mf=/(--[\w-]+)\s*([:,;)]|$)/gi,Nf=/(animation\s*:)|(animation-name\s*:)/,Of=/@media\s(.*)/,Pf=/\{[^}]*\}/g;var Qf=new Set;function Rf(a,b){if(!a)return"";"string"===typeof a&&(a=qf(a));b&&Sf(a,b);return Df(a,V)}function Tf(a){!a.__cssRules&&a.textContent&&(a.__cssRules=qf(a.textContent));return a.__cssRules||null}function Uf(a){return!!a.parent&&a.parent.type===Af}function Sf(a,b,c,d){if(a){var e=!1,f=a.type;if(d&&f===yf){var g=a.selector.match(Of);g&&(window.matchMedia(g[1]).matches||(e=!0))}f===Cf?b(a):c&&f===Af?c(a):f===Bf&&(e=!0);if((a=a.rules)&&!e)for(e=0,f=a.length,g=void 0;e<f&&(g=a[e]);e++)Sf(g,b,c,d)}}
function Vf(a,b,c,d){var e=document.createElement("style");b&&e.setAttribute("scope",b);e.textContent=a;Wf(e,c,d);return e}var Xf=null;function Yf(a){a=document.createComment(" Shady DOM styles for "+a+" ");var b=document.head;b.insertBefore(a,(Xf?Xf.nextSibling:null)||b.firstChild);return Xf=a}function Wf(a,b,c){b=b||document.head;b.insertBefore(a,c&&c.nextSibling||b.firstChild);Xf?a.compareDocumentPosition(Xf)===Node.DOCUMENT_POSITION_PRECEDING&&(Xf=a):Xf=a}
function Zf(a,b){for(var c=0,d=a.length;b<d;b++)if("("===a[b])c++;else if(")"===a[b]&&0===--c)return b;return-1}function $f(a,b){var c=a.indexOf("var(");if(-1===c)return b(a,"","","");var d=Zf(a,c+3),e=a.substring(c+4,d);c=a.substring(0,c);a=$f(a.substring(d+1),b);d=e.indexOf(",");return-1===d?b(c,e.trim(),"",a):b(c,e.substring(0,d).trim(),e.substring(d+1).trim(),a)}function ag(a,b){T?a.setAttribute("class",b):window.ShadyDOM.nativeMethods.setAttribute.call(a,"class",b)}
function bg(a){var b=a.localName,c="";b?-1<b.indexOf("-")||(c=b,b=a.getAttribute&&a.getAttribute("is")||""):(b=a.is,c=a.extends);return{is:b,X:c}}function cg(a){for(var b=[],c="",d=0;0<=d&&d<a.length;d++)if("("===a[d]){var e=Zf(a,d);c+=a.slice(d,e+1);d=e}else","===a[d]?(b.push(c),c=""):c+=a[d];c&&b.push(c);return b}
function dg(a){if(void 0===a.ja){var b=a.getAttribute("css-build");if(b)a.ja=b;else{a:{b="template"===a.localName?a.content.firstChild:a.firstChild;if(b instanceof Comment&&(b=b.textContent.trim().split(":"),"css-build"===b[0])){b=b[1];break a}b=""}if(""!==b){var c="template"===a.localName?a.content.firstChild:a.firstChild;c.parentNode.removeChild(c)}a.ja=b}}return a.ja||""};function eg(){}function fg(a,b){gg(W,a,function(a){hg(a,b||"")})}function gg(a,b,c){b.nodeType===Node.ELEMENT_NODE&&c(b);if(b="template"===b.localName?(b.content||b.kb||b).childNodes:b.children||b.childNodes)for(var d=0;d<b.length;d++)gg(a,b[d],c)}
function hg(a,b,c){if(b)if(a.classList)c?(a.classList.remove("style-scope"),a.classList.remove(b)):(a.classList.add("style-scope"),a.classList.add(b));else if(a.getAttribute){var d=a.getAttribute(ig);c?d&&(b=d.replace("style-scope","").replace(b,""),ag(a,b)):ag(a,(d?d+" ":"")+"style-scope "+b)}}function jg(a,b,c){gg(W,a,function(a){hg(a,b,!0);hg(a,c)})}function kg(a,b){gg(W,a,function(a){hg(a,b||"",!0)})}
function lg(a,b,c,d){var e=W;T||"shady"===(void 0===d?"":d)?b=Rf(b,c):(a=bg(a),b=mg(e,b,a.is,a.X,c)+"\n\n");return b.trim()}function mg(a,b,c,d,e){var f=ng(c,d);c=c?og+c:"";return Rf(b,function(b){b.c||(b.selector=b.F=pg(a,b,a.b,c,f),b.c=!0);e&&e(b,c,f)})}function ng(a,b){return b?"[is="+a+"]":a}function pg(a,b,c,d,e){var f=cg(b.selector);if(!Uf(b)){b=0;for(var g=f.length,h=void 0;b<g&&(h=f[b]);b++)f[b]=c.call(a,h,d,e)}return f.filter(function(a){return!!a}).join(qg)}
function rg(a){return a.replace(sg,function(a,c,d){-1<d.indexOf("+")?d=d.replace(/\+/g,"___"):-1<d.indexOf("___")&&(d=d.replace(/___/g,"+"));return":"+c+"("+d+")"})}function tg(a){for(var b=[],c;c=a.match(ug);){var d=c.index,e=Zf(a,d);if(-1===e)throw Error(c.input+" selector missing ')'");c=a.slice(d,e+1);a=a.replace(c,"\ue000");b.push(c)}return{sa:a,matches:b}}function vg(a,b){var c=a.split("\ue000");return b.reduce(function(a,b,f){return a+b+c[f+1]},c[0])}
eg.prototype.b=function(a,b,c){var d=!1;a=a.trim();var e=sg.test(a);e&&(a=a.replace(sg,function(a,b,c){return":"+b+"("+c.replace(/\s/g,"")+")"}),a=rg(a));var f=ug.test(a);if(f){var g=tg(a);a=g.sa;g=g.matches}a=a.replace(wg,xg+" $1");a=a.replace(yg,function(a,e,f){d||(a=zg(f,e,b,c),d=d||a.stop,e=a.Oa,f=a.value);return e+f});f&&(a=vg(a,g));e&&(a=rg(a));return a};
function zg(a,b,c,d){var e=a.indexOf(Ag);0<=a.indexOf(xg)?a=Bg(a,d):0!==e&&(a=c?Cg(a,c):a);c=!1;0<=e&&(b="",c=!0);if(c){var f=!0;c&&(a=a.replace(Dg,function(a,b){return" > "+b}))}a=a.replace(Eg,function(a,b,c){return'[dir="'+c+'"] '+b+", "+b+'[dir="'+c+'"]'});return{value:a,Oa:b,stop:f}}function Cg(a,b){a=a.split(Fg);a[0]+=b;return a.join(Fg)}
function Bg(a,b){var c=a.match(Gg);return(c=c&&c[2].trim()||"")?c[0].match(Hg)?a.replace(Gg,function(a,c,f){return b+f}):c.split(Hg)[0]===b?c:Ig:a.replace(xg,b)}function Jg(a){a.selector===Kg&&(a.selector="html")}eg.prototype.c=function(a){return a.match(xg)?"":a.match(Ag)?this.b(a,Lg):Cg(a.trim(),Lg)};fa.Object.defineProperties(eg.prototype,{a:{configurable:!0,enumerable:!0,get:function(){return"style-scope"}}});
var sg=/:(nth[-\w]+)\(([^)]+)\)/,Lg=":not(.style-scope)",qg=",",yg=/(^|[\s>+~]+)((?:\[.+?\]|[^\s>+~=[])+)/g,Hg=/[[.:#*]/,xg=":host",Kg=":root",Ag="::slotted",wg=new RegExp("^("+Ag+")"),Gg=/(:host)(?:\(((?:\([^)(]*\)|[^)(]*)+?)\))/,Dg=/(?:::slotted)(?:\(((?:\([^)(]*\)|[^)(]*)+?)\))/,Eg=/(.*):dir\((?:(ltr|rtl))\)/,og=".",Fg=":",ig="class",Ig="should_not_match",ug=/:(?:matches|any|-(?:webkit|moz)-any)/,W=new eg;function Mg(a,b,c,d,e){this.M=a||null;this.b=b||null;this.c=c||[];this.T=null;this.da=e||"";this.X=d||"";this.a=this.I=this.O=null}function X(a){return a?a.__styleInfo:null}function Ng(a,b){return a.__styleInfo=b}Mg.prototype.f=function(){return this.M};Mg.prototype._getStyleRules=Mg.prototype.f;function Og(a){var b=this.matches||this.matchesSelector||this.mozMatchesSelector||this.msMatchesSelector||this.oMatchesSelector||this.webkitMatchesSelector;return b&&b.call(this,a)}var Pg=navigator.userAgent.match("Trident");function Qg(){}function Rg(a){var b={},c=[],d=0;Sf(a,function(a){Sg(a);a.index=d++;a=a.B.cssText;for(var c;c=Mf.exec(a);){var e=c[1];":"!==c[2]&&(b[e]=!0)}},function(a){c.push(a)});a.b=c;a=[];for(var e in b)a.push(e);return a}
function Sg(a){if(!a.B){var b={},c={};Tg(a,c)&&(b.L=c,a.rules=null);b.cssText=a.parsedCssText.replace(Pf,"").replace(Kf,"");a.B=b}}function Tg(a,b){var c=a.B;if(c){if(c.L)return Object.assign(b,c.L),!0}else{c=a.parsedCssText;for(var d;a=Kf.exec(c);){d=(a[2]||a[3]).trim();if("inherit"!==d||"unset"!==d)b[a[1].trim()]=d;d=!0}return d}}
function Ug(a,b,c){b&&(b=0<=b.indexOf(";")?Vg(a,b,c):$f(b,function(b,e,f,g){if(!e)return b+g;(e=Ug(a,c[e],c))&&"initial"!==e?"apply-shim-inherit"===e&&(e="inherit"):e=Ug(a,c[f]||f,c)||f;return b+(e||"")+g}));return b&&b.trim()||""}
function Vg(a,b,c){b=b.split(";");for(var d=0,e,f;d<b.length;d++)if(e=b[d]){Lf.lastIndex=0;if(f=Lf.exec(e))e=Ug(a,c[f[1]],c);else if(f=e.indexOf(":"),-1!==f){var g=e.substring(f);g=g.trim();g=Ug(a,g,c)||g;e=e.substring(0,f)+g}b[d]=e&&e.lastIndexOf(";")===e.length-1?e.slice(0,-1):e||""}return b.join(";")}
function Wg(a,b){var c={},d=[];Sf(a,function(a){a.B||Sg(a);var e=a.F||a.parsedSelector;b&&a.B.L&&e&&Og.call(b,e)&&(Tg(a,c),a=a.index,e=parseInt(a/32,10),d[e]=(d[e]||0)|1<<a%32)},null,!0);return{L:c,key:d}}
function Xg(a,b,c,d){b.B||Sg(b);if(b.B.L){var e=bg(a);a=e.is;e=e.X;e=a?ng(a,e):"html";var f=b.parsedSelector,g=":host > *"===f||"html"===f,h=0===f.indexOf(":host")&&!g;"shady"===c&&(g=f===e+" > *."+e||-1!==f.indexOf("html"),h=!g&&0===f.indexOf(e));if(g||h)c=e,h&&(b.F||(b.F=pg(W,b,W.b,a?og+a:"",e)),c=b.F||e),d({sa:c,Va:h,vb:g})}}function Yg(a,b,c){var d={},e={};Sf(b,function(b){Xg(a,b,c,function(c){Og.call(a.lb||a,c.sa)&&(c.Va?Tg(b,d):Tg(b,e))})},null,!0);return{Za:e,Ta:d}}
function Zg(a,b,c,d){var e=bg(b),f=ng(e.is,e.X),g=new RegExp("(?:^|[^.#[:])"+(b.extends?"\\"+f.slice(0,-1)+"\\]":f)+"($|[.:[\\s>+~])"),h=X(b);e=h.M;h=h.da;var k=$g(e,d);return lg(b,e,function(b){var e="";b.B||Sg(b);b.B.cssText&&(e=Vg(a,b.B.cssText,c));b.cssText=e;if(!T&&!Uf(b)&&b.cssText){var h=e=b.cssText;null==b.xa&&(b.xa=Nf.test(e));if(b.xa)if(null==b.ga){b.ga=[];for(var l in k)h=k[l],h=h(e),e!==h&&(e=h,b.ga.push(l))}else{for(l=0;l<b.ga.length;++l)h=k[b.ga[l]],e=h(e);h=e}b.cssText=h;b.F=b.F||b.selector;
e="."+d;l=cg(b.F);h=0;for(var u=l.length,w=void 0;h<u&&(w=l[h]);h++)l[h]=w.match(g)?w.replace(f,e):e+" "+w;b.selector=l.join(",")}},h)}function $g(a,b){a=a.b;var c={};if(!T&&a)for(var d=0,e=a[d];d<a.length;e=a[++d]){var f=e,g=b;f.f=new RegExp("\\b"+f.keyframesName+"(?!\\B|-)","g");f.a=f.keyframesName+"-"+g;f.F=f.F||f.selector;f.selector=f.F.replace(f.keyframesName,f.a);c[e.keyframesName]=ah(e)}return c}function ah(a){return function(b){return b.replace(a.f,a.a)}}
function bh(a,b){var c=ch,d=Tf(a);a.textContent=Rf(d,function(a){var d=a.cssText=a.parsedCssText;a.B&&a.B.cssText&&(d=d.replace(Ef,"").replace(Ff,""),a.cssText=Vg(c,d,b))})}fa.Object.defineProperties(Qg.prototype,{a:{configurable:!0,enumerable:!0,get:function(){return"x-scope"}}});var ch=new Qg;var dh={},eh=window.customElements;if(eh&&!T){var fh=eh.define;eh.define=function(a,b,c){dh[a]||(dh[a]=Yf(a));fh.call(eh,a,b,c)}};function gh(){this.cache={}}gh.prototype.store=function(a,b,c,d){var e=this.cache[a]||[];e.push({L:b,styleElement:c,I:d});100<e.length&&e.shift();this.cache[a]=e};gh.prototype.fetch=function(a,b,c){if(a=this.cache[a])for(var d=a.length-1;0<=d;d--){var e=a[d],f;a:{for(f=0;f<c.length;f++){var g=c[f];if(e.L[g]!==b[g]){f=!1;break a}}f=!0}if(f)return e}};function hh(){}function ih(a){var b=[];a.classList?b=Array.from(a.classList):a instanceof window.SVGElement&&a.hasAttribute("class")&&(b=a.getAttribute("class").split(/\s+/));a=b;b=a.indexOf(W.a);return-1<b?a[b+1]:""}function jh(a){var b=a.getRootNode();return b===a||b===a.ownerDocument?"":(a=b.host)?bg(a).is:""}
function kh(a){for(var b=0;b<a.length;b++){var c=a[b];if(c.target!==document.documentElement&&c.target!==document.head)for(var d=0;d<c.addedNodes.length;d++){var e=c.addedNodes[d];if(e.nodeType===Node.ELEMENT_NODE){var f=e.getRootNode(),g=ih(e);if(g&&f===e.ownerDocument&&("style"!==e.localName&&"template"!==e.localName||""===dg(e)))kg(e,g);else if(f instanceof ShadowRoot)for(f=jh(e),f!==g&&jg(e,g,f),e=window.ShadyDOM.nativeMethods.querySelectorAll.call(e,":not(."+W.a+")"),g=0;g<e.length;g++){f=e[g];
var h=jh(f);h&&hg(f,h)}}}}}
if(!(T||window.ShadyDOM&&window.ShadyDOM.handlesDynamicScoping)){var lh=new MutationObserver(kh),mh=function(a){lh.observe(a,{childList:!0,subtree:!0})};if(window.customElements&&!window.customElements.polyfillWrapFlushCallback)mh(document);else{var nh=function(){mh(document.body)};window.HTMLImports?window.HTMLImports.whenReady(nh):requestAnimationFrame(function(){if("loading"===document.readyState){var a=function(){nh();document.removeEventListener("readystatechange",a)};document.addEventListener("readystatechange",
a)}else nh()})}hh=function(){kh(lh.takeRecords())}}var oh=hh;var ph={};var qh=Promise.resolve();function rh(a){if(a=ph[a])a._applyShimCurrentVersion=a._applyShimCurrentVersion||0,a._applyShimValidatingVersion=a._applyShimValidatingVersion||0,a._applyShimNextVersion=(a._applyShimNextVersion||0)+1}function sh(a){return a._applyShimCurrentVersion===a._applyShimNextVersion}function th(a){a._applyShimValidatingVersion=a._applyShimNextVersion;a.b||(a.b=!0,qh.then(function(){a._applyShimCurrentVersion=a._applyShimNextVersion;a.b=!1}))};var uh=new gh;function Y(){this.G={};this.c=document.documentElement;var a=new pf;a.rules=[];this.f=Ng(this.c,new Mg(a));this.m=!1;this.b=this.a=null}r=Y.prototype;r.flush=function(){oh()};r.Ra=function(a){return Tf(a)};r.cb=function(a){return Rf(a)};r.prepareTemplate=function(a,b,c){this.prepareTemplateDom(a,b);this.prepareTemplateStyles(a,b,c)};
r.prepareTemplateStyles=function(a,b,c){if(!a.m){T||dh[b]||(dh[b]=Yf(b));a.m=!0;a.name=b;a.extends=c;ph[b]=a;var d=dg(a);var e=[];for(var f=a.content.querySelectorAll("style"),g=0;g<f.length;g++){var h=f[g];if(h.hasAttribute("shady-unscoped")){if(!T){var k=h.textContent;Qf.has(k)||(Qf.add(k),k=h.cloneNode(!0),document.head.appendChild(k));h.parentNode.removeChild(h)}}else e.push(h.textContent),h.parentNode.removeChild(h)}e=e.join("").trim();c={is:b,extends:c};vh(this);if(f=""===dg(a))f=Lf.test(e)||
Kf.test(e),Lf.lastIndex=0,Kf.lastIndex=0;e=qf(e);f&&V&&this.a&&this.a.transformRules(e,b);a._styleAst=e;e=[];V||(e=Rg(a._styleAst));if(!e.length||V)f=T?a.content:null,b=dh[b]||null,d=lg(c,a._styleAst,null,d),d=d.length?Vf(d,c.is,f,b):void 0,a.a=d;a.f=e}};r.prepareTemplateDom=function(a,b){var c=dg(a);T||"shady"===c||a.c||(a.c=!0,fg(a.content,b))};
function wh(a){!a.b&&window.ShadyCSS&&window.ShadyCSS.CustomStyleInterface&&(a.b=window.ShadyCSS.CustomStyleInterface,a.b.transformCallback=function(b){a.Aa(b)},a.b.validateCallback=function(){requestAnimationFrame(function(){(a.b.enqueued||a.m)&&a.flushCustomStyles()})})}function vh(a){!a.a&&window.ShadyCSS&&window.ShadyCSS.ApplyShim&&(a.a=window.ShadyCSS.ApplyShim,a.a.invalidCallback=rh);wh(a)}
r.flushCustomStyles=function(){vh(this);if(this.b){var a=this.b.processStyles();if(this.b.enqueued){if(V)for(var b=0;b<a.length;b++){var c=this.b.getStyleForCustomStyle(a[b]);if(c&&V&&this.a){var d=Tf(c);vh(this);this.a.transformRules(d);c.textContent=Rf(d)}}else for(xh(this,this.c,this.f),b=0;b<a.length;b++)(c=this.b.getStyleForCustomStyle(a[b]))&&bh(c,this.f.O);this.b.enqueued=!1;this.m&&!V&&this.styleDocument()}}};
r.styleElement=function(a,b){var c=X(a);if(!c){var d=bg(a);c=d.is;d=d.X;var e=dh[c]||null;c=ph[c];if(c){var f=c._styleAst;var g=c.f;var h=dg(c)}f=new Mg(f,e,g,d,h);c&&Ng(a,f);c=f}a!==this.c&&(this.m=!0);b&&(c.T=c.T||{},Object.assign(c.T,b));if(V){b=c;f=bg(a).is;if(b.T){g=b.T;for(var k in g)null===k?a.style.removeProperty(k):a.style.setProperty(k,g[k])}if(!(!(k=ph[f])&&a!==this.c||k&&""!==dg(k))&&k&&k.a&&!sh(k)){if(sh(k)||k._applyShimValidatingVersion!==k._applyShimNextVersion)vh(this),this.a&&this.a.transformRules(k._styleAst,
f),k.a.textContent=lg(a,b.M),th(k);T&&(f=a.shadowRoot)&&(f=f.querySelector("style"))&&(f.textContent=lg(a,b.M));b.M=k._styleAst}}else if(k=c,this.flush(),xh(this,a,k),k.c&&k.c.length){b=bg(a).is;c=(f=uh.fetch(b,k.O,k.c))?f.styleElement:null;g=k.I;(h=f&&f.I)||(h=this.G[b]=(this.G[b]||0)+1,h=b+"-"+h);k.I=h;h=k.I;d=ch;d=c?c.textContent||"":Zg(d,a,k.O,h);e=X(a);var l=e.a;l&&!T&&l!==c&&(l._useCount--,0>=l._useCount&&l.parentNode&&l.parentNode.removeChild(l));T?e.a?(e.a.textContent=d,c=e.a):d&&(c=Vf(d,
h,a.shadowRoot,e.b)):c?c.parentNode||(Pg&&-1<d.indexOf("@media")&&(c.textContent=d),Wf(c,null,e.b)):d&&(c=Vf(d,h,null,e.b));c&&(c._useCount=c._useCount||0,e.a!=c&&c._useCount++,e.a=c);h=c;T||(c=k.I,e=d=a.getAttribute("class")||"",g&&(e=d.replace(new RegExp("\\s*x-scope\\s*"+g+"\\s*","g")," ")),e+=(e?" ":"")+"x-scope "+c,d!==e&&ag(a,e));f||uh.store(b,k.O,h,k.I)}};function yh(a,b){return(b=b.getRootNode().host)?X(b)?b:yh(a,b):a.c}
function xh(a,b,c){a=yh(a,b);var d=X(a);a=Object.create(d.O||null);var e=Yg(b,c.M,c.da);b=Wg(d.M,b).L;Object.assign(a,e.Ta,b,e.Za);b=c.T;for(var f in b)if((e=b[f])||0===e)a[f]=e;f=ch;b=Object.getOwnPropertyNames(a);for(e=0;e<b.length;e++)d=b[e],a[d]=Ug(f,a[d],a);c.O=a}r.styleDocument=function(a){this.styleSubtree(this.c,a)};
r.styleSubtree=function(a,b){var c=a.shadowRoot;(c||a===this.c)&&this.styleElement(a,b);if(b=c&&(c.children||c.childNodes))for(a=0;a<b.length;a++)this.styleSubtree(b[a]);else if(a=a.children||a.childNodes)for(b=0;b<a.length;b++)this.styleSubtree(a[b])};
r.Aa=function(a){var b=this,c=Tf(a),d=dg(a);d!==this.f.da&&(this.f.da=d);Sf(c,function(a){if(T)Jg(a);else{var c=W;a.selector=a.parsedSelector;Jg(a);a.selector=a.F=pg(c,a,c.c,void 0,void 0)}V&&""===d&&(vh(b),b.a&&b.a.transformRule(a))});V?a.textContent=Rf(c):this.f.M.rules.push(c)};r.getComputedStyleValue=function(a,b){var c;V||(c=(X(a)||X(yh(this,a))).O[b]);return(c=c||window.getComputedStyle(a).getPropertyValue(b))?c.trim():""};
r.bb=function(a,b){var c=a.getRootNode();b=b?b.split(/\s/):[];c=c.host&&c.host.localName;if(!c){var d=a.getAttribute("class");if(d){d=d.split(/\s/);for(var e=0;e<d.length;e++)if(d[e]===W.a){c=d[e+1];break}}}c&&b.push(W.a,c);V||(c=X(a))&&c.I&&b.push(ch.a,c.I);ag(a,b.join(" "))};r.La=function(a){return X(a)};r.ab=function(a,b){hg(a,b)};r.eb=function(a,b){hg(a,b,!0)};r.$a=function(a){return jh(a)};r.Pa=function(a){return ih(a)};Y.prototype.flush=Y.prototype.flush;Y.prototype.prepareTemplate=Y.prototype.prepareTemplate;
Y.prototype.styleElement=Y.prototype.styleElement;Y.prototype.styleDocument=Y.prototype.styleDocument;Y.prototype.styleSubtree=Y.prototype.styleSubtree;Y.prototype.getComputedStyleValue=Y.prototype.getComputedStyleValue;Y.prototype.setElementClass=Y.prototype.bb;Y.prototype._styleInfoForNode=Y.prototype.La;Y.prototype.transformCustomStyleForDocument=Y.prototype.Aa;Y.prototype.getStyleAst=Y.prototype.Ra;Y.prototype.styleAstToString=Y.prototype.cb;Y.prototype.flushCustomStyles=Y.prototype.flushCustomStyles;
Y.prototype.scopeNode=Y.prototype.ab;Y.prototype.unscopeNode=Y.prototype.eb;Y.prototype.scopeForNode=Y.prototype.$a;Y.prototype.currentScopeForNode=Y.prototype.Pa;Object.defineProperties(Y.prototype,{nativeShadow:{get:function(){return T}},nativeCss:{get:function(){return V}}});var Z=new Y,zh,Ah;window.ShadyCSS&&(zh=window.ShadyCSS.ApplyShim,Ah=window.ShadyCSS.CustomStyleInterface);
window.ShadyCSS={ScopingShim:Z,prepareTemplate:function(a,b,c){Z.flushCustomStyles();Z.prepareTemplate(a,b,c)},prepareTemplateDom:function(a,b){Z.prepareTemplateDom(a,b)},prepareTemplateStyles:function(a,b,c){Z.flushCustomStyles();Z.prepareTemplateStyles(a,b,c)},styleSubtree:function(a,b){Z.flushCustomStyles();Z.styleSubtree(a,b)},styleElement:function(a){Z.flushCustomStyles();Z.styleElement(a)},styleDocument:function(a){Z.flushCustomStyles();Z.styleDocument(a)},flushCustomStyles:function(){Z.flushCustomStyles()},
getComputedStyleValue:function(a,b){return Z.getComputedStyleValue(a,b)},nativeCss:V,nativeShadow:T};zh&&(window.ShadyCSS.ApplyShim=zh);Ah&&(window.ShadyCSS.CustomStyleInterface=Ah);(function(a){function b(a){""==a&&(f.call(this),this.i=!0);return a.toLowerCase()}function c(a){var b=a.charCodeAt(0);return 32<b&&127>b&&-1==[34,35,60,62,63,96].indexOf(b)?a:encodeURIComponent(a)}function d(a){var b=a.charCodeAt(0);return 32<b&&127>b&&-1==[34,35,60,62,96].indexOf(b)?a:encodeURIComponent(a)}function e(a,e,g){function h(a){ba.push(a)}var k=e||"scheme start",w=0,q="",u=!1,R=!1,ba=[];a:for(;(void 0!=a[w-1]||0==w)&&!this.i;){var m=a[w];switch(k){case "scheme start":if(m&&p.test(m))q+=
m.toLowerCase(),k="scheme";else if(e){h("Invalid scheme.");break a}else{q="";k="no scheme";continue}break;case "scheme":if(m&&G.test(m))q+=m.toLowerCase();else if(":"==m){this.h=q;q="";if(e)break a;void 0!==l[this.h]&&(this.D=!0);k="file"==this.h?"relative":this.D&&g&&g.h==this.h?"relative or authority":this.D?"authority first slash":"scheme data"}else if(e){void 0!=m&&h("Code point not allowed in scheme: "+m);break a}else{q="";w=0;k="no scheme";continue}break;case "scheme data":"?"==m?(this.u="?",
k="query"):"#"==m?(this.C="#",k="fragment"):void 0!=m&&"\t"!=m&&"\n"!=m&&"\r"!=m&&(this.pa+=c(m));break;case "no scheme":if(g&&void 0!==l[g.h]){k="relative";continue}else h("Missing scheme."),f.call(this),this.i=!0;break;case "relative or authority":if("/"==m&&"/"==a[w+1])k="authority ignore slashes";else{h("Expected /, got: "+m);k="relative";continue}break;case "relative":this.D=!0;"file"!=this.h&&(this.h=g.h);if(void 0==m){this.j=g.j;this.s=g.s;this.l=g.l.slice();this.u=g.u;this.v=g.v;this.g=g.g;
break a}else if("/"==m||"\\"==m)"\\"==m&&h("\\ is an invalid code point."),k="relative slash";else if("?"==m)this.j=g.j,this.s=g.s,this.l=g.l.slice(),this.u="?",this.v=g.v,this.g=g.g,k="query";else if("#"==m)this.j=g.j,this.s=g.s,this.l=g.l.slice(),this.u=g.u,this.C="#",this.v=g.v,this.g=g.g,k="fragment";else{k=a[w+1];var y=a[w+2];if("file"!=this.h||!p.test(m)||":"!=k&&"|"!=k||void 0!=y&&"/"!=y&&"\\"!=y&&"?"!=y&&"#"!=y)this.j=g.j,this.s=g.s,this.v=g.v,this.g=g.g,this.l=g.l.slice(),this.l.pop();k=
"relative path";continue}break;case "relative slash":if("/"==m||"\\"==m)"\\"==m&&h("\\ is an invalid code point."),k="file"==this.h?"file host":"authority ignore slashes";else{"file"!=this.h&&(this.j=g.j,this.s=g.s,this.v=g.v,this.g=g.g);k="relative path";continue}break;case "authority first slash":if("/"==m)k="authority second slash";else{h("Expected '/', got: "+m);k="authority ignore slashes";continue}break;case "authority second slash":k="authority ignore slashes";if("/"!=m){h("Expected '/', got: "+
m);continue}break;case "authority ignore slashes":if("/"!=m&&"\\"!=m){k="authority";continue}else h("Expected authority, got: "+m);break;case "authority":if("@"==m){u&&(h("@ already seen."),q+="%40");u=!0;for(m=0;m<q.length;m++)y=q[m],"\t"==y||"\n"==y||"\r"==y?h("Invalid whitespace in authority."):":"==y&&null===this.g?this.g="":(y=c(y),null!==this.g?this.g+=y:this.v+=y);q=""}else if(void 0==m||"/"==m||"\\"==m||"?"==m||"#"==m){w-=q.length;q="";k="host";continue}else q+=m;break;case "file host":if(void 0==
m||"/"==m||"\\"==m||"?"==m||"#"==m){2!=q.length||!p.test(q[0])||":"!=q[1]&&"|"!=q[1]?(0!=q.length&&(this.j=b.call(this,q),q=""),k="relative path start"):k="relative path";continue}else"\t"==m||"\n"==m||"\r"==m?h("Invalid whitespace in file host."):q+=m;break;case "host":case "hostname":if(":"!=m||R)if(void 0==m||"/"==m||"\\"==m||"?"==m||"#"==m){this.j=b.call(this,q);q="";k="relative path start";if(e)break a;continue}else"\t"!=m&&"\n"!=m&&"\r"!=m?("["==m?R=!0:"]"==m&&(R=!1),q+=m):h("Invalid code point in host/hostname: "+
m);else if(this.j=b.call(this,q),q="",k="port","hostname"==e)break a;break;case "port":if(/[0-9]/.test(m))q+=m;else if(void 0==m||"/"==m||"\\"==m||"?"==m||"#"==m||e){""!=q&&(q=parseInt(q,10),q!=l[this.h]&&(this.s=q+""),q="");if(e)break a;k="relative path start";continue}else"\t"==m||"\n"==m||"\r"==m?h("Invalid code point in port: "+m):(f.call(this),this.i=!0);break;case "relative path start":"\\"==m&&h("'\\' not allowed in path.");k="relative path";if("/"!=m&&"\\"!=m)continue;break;case "relative path":if(void 0!=
m&&"/"!=m&&"\\"!=m&&(e||"?"!=m&&"#"!=m))"\t"!=m&&"\n"!=m&&"\r"!=m&&(q+=c(m));else{"\\"==m&&h("\\ not allowed in relative path.");if(y=n[q.toLowerCase()])q=y;".."==q?(this.l.pop(),"/"!=m&&"\\"!=m&&this.l.push("")):"."==q&&"/"!=m&&"\\"!=m?this.l.push(""):"."!=q&&("file"==this.h&&0==this.l.length&&2==q.length&&p.test(q[0])&&"|"==q[1]&&(q=q[0]+":"),this.l.push(q));q="";"?"==m?(this.u="?",k="query"):"#"==m&&(this.C="#",k="fragment")}break;case "query":e||"#"!=m?void 0!=m&&"\t"!=m&&"\n"!=m&&"\r"!=m&&(this.u+=
d(m)):(this.C="#",k="fragment");break;case "fragment":void 0!=m&&"\t"!=m&&"\n"!=m&&"\r"!=m&&(this.C+=m)}w++}}function f(){this.v=this.pa=this.h="";this.g=null;this.s=this.j="";this.l=[];this.C=this.u="";this.D=this.i=!1}function g(a,b){void 0===b||b instanceof g||(b=new g(String(b)));this.Ma=a;f.call(this);a=a.replace(/^[ \t\r\n\f]+|[ \t\r\n\f]+$/g,"");e.call(this,a,null,b)}var h=!1;if(!a.rb)try{var k=new URL("b","http://a");k.pathname="c%20d";h="http://a/c%20d"===k.href}catch(w){}if(!h){var l=Object.create(null);
l.ftp=21;l.file=0;l.gopher=70;l.http=80;l.https=443;l.ws=80;l.wss=443;var n=Object.create(null);n["%2e"]=".";n[".%2e"]="..";n["%2e."]="..";n["%2e%2e"]="..";var p=/[a-zA-Z]/,G=/[a-zA-Z0-9\+\-\.]/;g.prototype={toString:function(){return this.href},get href(){if(this.i)return this.Ma;var a="";if(""!=this.v||null!=this.g)a=this.v+(null!=this.g?":"+this.g:"")+"@";return this.protocol+(this.D?"//"+a+this.host:"")+this.pathname+this.u+this.C},set href(a){f.call(this);e.call(this,a)},get protocol(){return this.h+
":"},set protocol(a){this.i||e.call(this,a+":","scheme start")},get host(){return this.i?"":this.s?this.j+":"+this.s:this.j},set host(a){!this.i&&this.D&&e.call(this,a,"host")},get hostname(){return this.j},set hostname(a){!this.i&&this.D&&e.call(this,a,"hostname")},get port(){return this.s},set port(a){!this.i&&this.D&&e.call(this,a,"port")},get pathname(){return this.i?"":this.D?"/"+this.l.join("/"):this.pa},set pathname(a){!this.i&&this.D&&(this.l=[],e.call(this,a,"relative path start"))},get search(){return this.i||
!this.u||"?"==this.u?"":this.u},set search(a){!this.i&&this.D&&(this.u="?","?"==a[0]&&(a=a.slice(1)),e.call(this,a,"query"))},get hash(){return this.i||!this.C||"#"==this.C?"":this.C},set hash(a){this.i||(this.C="#","#"==a[0]&&(a=a.slice(1)),e.call(this,a,"fragment"))},get origin(){var a;if(this.i||!this.h)return"";switch(this.h){case "data":case "file":case "javascript":case "mailto":return"null"}return(a=this.host)?this.h+"://"+a:""}};var u=a.URL;u&&(g.createObjectURL=function(a){return u.createObjectURL.apply(u,
arguments)},g.revokeObjectURL=function(a){u.revokeObjectURL(a)});a.URL=g}})(window);Object.getOwnPropertyDescriptor(Node.prototype,"baseURI")||Object.defineProperty(Node.prototype,"baseURI",{get:function(){var a=(this.ownerDocument||this).querySelector("base[href]");return a&&a.href||window.location.href},configurable:!0,enumerable:!0});var Bh=document.createElement("style");Bh.textContent="body {transition: opacity ease-in 0.2s; } \nbody[unresolved] {opacity: 0; display: block; overflow: hidden; position: relative; } \n";var Ch=document.querySelector("head");Ch.insertBefore(Bh,Ch.firstChild);var Dh=window.customElements,Eh=!1,Fh=null;Dh.polyfillWrapFlushCallback&&Dh.polyfillWrapFlushCallback(function(a){Fh=a;Eh&&a()});function Gh(){window.HTMLTemplateElement.bootstrap&&window.HTMLTemplateElement.bootstrap(window.document);Fh&&Fh();Eh=!0;window.WebComponents.ready=!0;document.dispatchEvent(new CustomEvent("WebComponentsReady",{bubbles:!0}))}
"complete"!==document.readyState?(window.addEventListener("load",Gh),window.addEventListener("DOMContentLoaded",function(){window.removeEventListener("load",Gh);Gh()})):Gh();}).call(this);

//# sourceMappingURL=webcomponents-bundle.js.map

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js"), __webpack_require__(/*! ./../../timers-browserify/main.js */ "./node_modules/timers-browserify/main.js").setImmediate))

/***/ }),

/***/ "./node_modules/core-js/modules/_a-function.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/modules/_a-function.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function (it) {
  if (typeof it != 'function') throw TypeError(it + ' is not a function!');
  return it;
};


/***/ }),

/***/ "./node_modules/core-js/modules/_add-to-unscopables.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/modules/_add-to-unscopables.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 22.1.3.31 Array.prototype[@@unscopables]
var UNSCOPABLES = __webpack_require__(/*! ./_wks */ "./node_modules/core-js/modules/_wks.js")('unscopables');
var ArrayProto = Array.prototype;
if (ArrayProto[UNSCOPABLES] == undefined) __webpack_require__(/*! ./_hide */ "./node_modules/core-js/modules/_hide.js")(ArrayProto, UNSCOPABLES, {});
module.exports = function (key) {
  ArrayProto[UNSCOPABLES][key] = true;
};


/***/ }),

/***/ "./node_modules/core-js/modules/_an-instance.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/modules/_an-instance.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function (it, Constructor, name, forbiddenField) {
  if (!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)) {
    throw TypeError(name + ': incorrect invocation!');
  } return it;
};


/***/ }),

/***/ "./node_modules/core-js/modules/_an-object.js":
/*!****************************************************!*\
  !*** ./node_modules/core-js/modules/_an-object.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/modules/_is-object.js");
module.exports = function (it) {
  if (!isObject(it)) throw TypeError(it + ' is not an object!');
  return it;
};


/***/ }),

/***/ "./node_modules/core-js/modules/_array-copy-within.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/modules/_array-copy-within.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// 22.1.3.3 Array.prototype.copyWithin(target, start, end = this.length)

var toObject = __webpack_require__(/*! ./_to-object */ "./node_modules/core-js/modules/_to-object.js");
var toAbsoluteIndex = __webpack_require__(/*! ./_to-absolute-index */ "./node_modules/core-js/modules/_to-absolute-index.js");
var toLength = __webpack_require__(/*! ./_to-length */ "./node_modules/core-js/modules/_to-length.js");

module.exports = [].copyWithin || function copyWithin(target /* = 0 */, start /* = 0, end = @length */) {
  var O = toObject(this);
  var len = toLength(O.length);
  var to = toAbsoluteIndex(target, len);
  var from = toAbsoluteIndex(start, len);
  var end = arguments.length > 2 ? arguments[2] : undefined;
  var count = Math.min((end === undefined ? len : toAbsoluteIndex(end, len)) - from, len - to);
  var inc = 1;
  if (from < to && to < from + count) {
    inc = -1;
    from += count - 1;
    to += count - 1;
  }
  while (count-- > 0) {
    if (from in O) O[to] = O[from];
    else delete O[to];
    to += inc;
    from += inc;
  } return O;
};


/***/ }),

/***/ "./node_modules/core-js/modules/_array-fill.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/modules/_array-fill.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)

var toObject = __webpack_require__(/*! ./_to-object */ "./node_modules/core-js/modules/_to-object.js");
var toAbsoluteIndex = __webpack_require__(/*! ./_to-absolute-index */ "./node_modules/core-js/modules/_to-absolute-index.js");
var toLength = __webpack_require__(/*! ./_to-length */ "./node_modules/core-js/modules/_to-length.js");
module.exports = function fill(value /* , start = 0, end = @length */) {
  var O = toObject(this);
  var length = toLength(O.length);
  var aLen = arguments.length;
  var index = toAbsoluteIndex(aLen > 1 ? arguments[1] : undefined, length);
  var end = aLen > 2 ? arguments[2] : undefined;
  var endPos = end === undefined ? length : toAbsoluteIndex(end, length);
  while (endPos > index) O[index++] = value;
  return O;
};


/***/ }),

/***/ "./node_modules/core-js/modules/_array-includes.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/modules/_array-includes.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// false -> Array#indexOf
// true  -> Array#includes
var toIObject = __webpack_require__(/*! ./_to-iobject */ "./node_modules/core-js/modules/_to-iobject.js");
var toLength = __webpack_require__(/*! ./_to-length */ "./node_modules/core-js/modules/_to-length.js");
var toAbsoluteIndex = __webpack_require__(/*! ./_to-absolute-index */ "./node_modules/core-js/modules/_to-absolute-index.js");
module.exports = function (IS_INCLUDES) {
  return function ($this, el, fromIndex) {
    var O = toIObject($this);
    var length = toLength(O.length);
    var index = toAbsoluteIndex(fromIndex, length);
    var value;
    // Array#includes uses SameValueZero equality algorithm
    // eslint-disable-next-line no-self-compare
    if (IS_INCLUDES && el != el) while (length > index) {
      value = O[index++];
      // eslint-disable-next-line no-self-compare
      if (value != value) return true;
    // Array#indexOf ignores holes, Array#includes - not
    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {
      if (O[index] === el) return IS_INCLUDES || index || 0;
    } return !IS_INCLUDES && -1;
  };
};


/***/ }),

/***/ "./node_modules/core-js/modules/_array-methods.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/modules/_array-methods.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 0 -> Array#forEach
// 1 -> Array#map
// 2 -> Array#filter
// 3 -> Array#some
// 4 -> Array#every
// 5 -> Array#find
// 6 -> Array#findIndex
var ctx = __webpack_require__(/*! ./_ctx */ "./node_modules/core-js/modules/_ctx.js");
var IObject = __webpack_require__(/*! ./_iobject */ "./node_modules/core-js/modules/_iobject.js");
var toObject = __webpack_require__(/*! ./_to-object */ "./node_modules/core-js/modules/_to-object.js");
var toLength = __webpack_require__(/*! ./_to-length */ "./node_modules/core-js/modules/_to-length.js");
var asc = __webpack_require__(/*! ./_array-species-create */ "./node_modules/core-js/modules/_array-species-create.js");
module.exports = function (TYPE, $create) {
  var IS_MAP = TYPE == 1;
  var IS_FILTER = TYPE == 2;
  var IS_SOME = TYPE == 3;
  var IS_EVERY = TYPE == 4;
  var IS_FIND_INDEX = TYPE == 6;
  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;
  var create = $create || asc;
  return function ($this, callbackfn, that) {
    var O = toObject($this);
    var self = IObject(O);
    var f = ctx(callbackfn, that, 3);
    var length = toLength(self.length);
    var index = 0;
    var result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;
    var val, res;
    for (;length > index; index++) if (NO_HOLES || index in self) {
      val = self[index];
      res = f(val, index, O);
      if (TYPE) {
        if (IS_MAP) result[index] = res;   // map
        else if (res) switch (TYPE) {
          case 3: return true;             // some
          case 5: return val;              // find
          case 6: return index;            // findIndex
          case 2: result.push(val);        // filter
        } else if (IS_EVERY) return false; // every
      }
    }
    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;
  };
};


/***/ }),

/***/ "./node_modules/core-js/modules/_array-species-constructor.js":
/*!********************************************************************!*\
  !*** ./node_modules/core-js/modules/_array-species-constructor.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/modules/_is-object.js");
var isArray = __webpack_require__(/*! ./_is-array */ "./node_modules/core-js/modules/_is-array.js");
var SPECIES = __webpack_require__(/*! ./_wks */ "./node_modules/core-js/modules/_wks.js")('species');

module.exports = function (original) {
  var C;
  if (isArray(original)) {
    C = original.constructor;
    // cross-realm fallback
    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;
    if (isObject(C)) {
      C = C[SPECIES];
      if (C === null) C = undefined;
    }
  } return C === undefined ? Array : C;
};


/***/ }),

/***/ "./node_modules/core-js/modules/_array-species-create.js":
/*!***************************************************************!*\
  !*** ./node_modules/core-js/modules/_array-species-create.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 9.4.2.3 ArraySpeciesCreate(originalArray, length)
var speciesConstructor = __webpack_require__(/*! ./_array-species-constructor */ "./node_modules/core-js/modules/_array-species-constructor.js");

module.exports = function (original, length) {
  return new (speciesConstructor(original))(length);
};


/***/ }),

/***/ "./node_modules/core-js/modules/_bind.js":
/*!***********************************************!*\
  !*** ./node_modules/core-js/modules/_bind.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var aFunction = __webpack_require__(/*! ./_a-function */ "./node_modules/core-js/modules/_a-function.js");
var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/modules/_is-object.js");
var invoke = __webpack_require__(/*! ./_invoke */ "./node_modules/core-js/modules/_invoke.js");
var arraySlice = [].slice;
var factories = {};

var construct = function (F, len, args) {
  if (!(len in factories)) {
    for (var n = [], i = 0; i < len; i++) n[i] = 'a[' + i + ']';
    // eslint-disable-next-line no-new-func
    factories[len] = Function('F,a', 'return new F(' + n.join(',') + ')');
  } return factories[len](F, args);
};

module.exports = Function.bind || function bind(that /* , ...args */) {
  var fn = aFunction(this);
  var partArgs = arraySlice.call(arguments, 1);
  var bound = function (/* args... */) {
    var args = partArgs.concat(arraySlice.call(arguments));
    return this instanceof bound ? construct(fn, args.length, args) : invoke(fn, args, that);
  };
  if (isObject(fn.prototype)) bound.prototype = fn.prototype;
  return bound;
};


/***/ }),

/***/ "./node_modules/core-js/modules/_classof.js":
/*!**************************************************!*\
  !*** ./node_modules/core-js/modules/_classof.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// getting tag from 19.1.3.6 Object.prototype.toString()
var cof = __webpack_require__(/*! ./_cof */ "./node_modules/core-js/modules/_cof.js");
var TAG = __webpack_require__(/*! ./_wks */ "./node_modules/core-js/modules/_wks.js")('toStringTag');
// ES3 wrong here
var ARG = cof(function () { return arguments; }()) == 'Arguments';

// fallback for IE11 Script Access Denied error
var tryGet = function (it, key) {
  try {
    return it[key];
  } catch (e) { /* empty */ }
};

module.exports = function (it) {
  var O, T, B;
  return it === undefined ? 'Undefined' : it === null ? 'Null'
    // @@toStringTag case
    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T
    // builtinTag case
    : ARG ? cof(O)
    // ES3 arguments fallback
    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;
};


/***/ }),

/***/ "./node_modules/core-js/modules/_cof.js":
/*!**********************************************!*\
  !*** ./node_modules/core-js/modules/_cof.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

var toString = {}.toString;

module.exports = function (it) {
  return toString.call(it).slice(8, -1);
};


/***/ }),

/***/ "./node_modules/core-js/modules/_collection-strong.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/modules/_collection-strong.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var dP = __webpack_require__(/*! ./_object-dp */ "./node_modules/core-js/modules/_object-dp.js").f;
var create = __webpack_require__(/*! ./_object-create */ "./node_modules/core-js/modules/_object-create.js");
var redefineAll = __webpack_require__(/*! ./_redefine-all */ "./node_modules/core-js/modules/_redefine-all.js");
var ctx = __webpack_require__(/*! ./_ctx */ "./node_modules/core-js/modules/_ctx.js");
var anInstance = __webpack_require__(/*! ./_an-instance */ "./node_modules/core-js/modules/_an-instance.js");
var forOf = __webpack_require__(/*! ./_for-of */ "./node_modules/core-js/modules/_for-of.js");
var $iterDefine = __webpack_require__(/*! ./_iter-define */ "./node_modules/core-js/modules/_iter-define.js");
var step = __webpack_require__(/*! ./_iter-step */ "./node_modules/core-js/modules/_iter-step.js");
var setSpecies = __webpack_require__(/*! ./_set-species */ "./node_modules/core-js/modules/_set-species.js");
var DESCRIPTORS = __webpack_require__(/*! ./_descriptors */ "./node_modules/core-js/modules/_descriptors.js");
var fastKey = __webpack_require__(/*! ./_meta */ "./node_modules/core-js/modules/_meta.js").fastKey;
var validate = __webpack_require__(/*! ./_validate-collection */ "./node_modules/core-js/modules/_validate-collection.js");
var SIZE = DESCRIPTORS ? '_s' : 'size';

var getEntry = function (that, key) {
  // fast case
  var index = fastKey(key);
  var entry;
  if (index !== 'F') return that._i[index];
  // frozen object case
  for (entry = that._f; entry; entry = entry.n) {
    if (entry.k == key) return entry;
  }
};

module.exports = {
  getConstructor: function (wrapper, NAME, IS_MAP, ADDER) {
    var C = wrapper(function (that, iterable) {
      anInstance(that, C, NAME, '_i');
      that._t = NAME;         // collection type
      that._i = create(null); // index
      that._f = undefined;    // first entry
      that._l = undefined;    // last entry
      that[SIZE] = 0;         // size
      if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);
    });
    redefineAll(C.prototype, {
      // 23.1.3.1 Map.prototype.clear()
      // 23.2.3.2 Set.prototype.clear()
      clear: function clear() {
        for (var that = validate(this, NAME), data = that._i, entry = that._f; entry; entry = entry.n) {
          entry.r = true;
          if (entry.p) entry.p = entry.p.n = undefined;
          delete data[entry.i];
        }
        that._f = that._l = undefined;
        that[SIZE] = 0;
      },
      // 23.1.3.3 Map.prototype.delete(key)
      // 23.2.3.4 Set.prototype.delete(value)
      'delete': function (key) {
        var that = validate(this, NAME);
        var entry = getEntry(that, key);
        if (entry) {
          var next = entry.n;
          var prev = entry.p;
          delete that._i[entry.i];
          entry.r = true;
          if (prev) prev.n = next;
          if (next) next.p = prev;
          if (that._f == entry) that._f = next;
          if (that._l == entry) that._l = prev;
          that[SIZE]--;
        } return !!entry;
      },
      // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)
      // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)
      forEach: function forEach(callbackfn /* , that = undefined */) {
        validate(this, NAME);
        var f = ctx(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);
        var entry;
        while (entry = entry ? entry.n : this._f) {
          f(entry.v, entry.k, this);
          // revert to the last existing entry
          while (entry && entry.r) entry = entry.p;
        }
      },
      // 23.1.3.7 Map.prototype.has(key)
      // 23.2.3.7 Set.prototype.has(value)
      has: function has(key) {
        return !!getEntry(validate(this, NAME), key);
      }
    });
    if (DESCRIPTORS) dP(C.prototype, 'size', {
      get: function () {
        return validate(this, NAME)[SIZE];
      }
    });
    return C;
  },
  def: function (that, key, value) {
    var entry = getEntry(that, key);
    var prev, index;
    // change existing entry
    if (entry) {
      entry.v = value;
    // create new entry
    } else {
      that._l = entry = {
        i: index = fastKey(key, true), // <- index
        k: key,                        // <- key
        v: value,                      // <- value
        p: prev = that._l,             // <- previous entry
        n: undefined,                  // <- next entry
        r: false                       // <- removed
      };
      if (!that._f) that._f = entry;
      if (prev) prev.n = entry;
      that[SIZE]++;
      // add to index
      if (index !== 'F') that._i[index] = entry;
    } return that;
  },
  getEntry: getEntry,
  setStrong: function (C, NAME, IS_MAP) {
    // add .keys, .values, .entries, [@@iterator]
    // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11
    $iterDefine(C, NAME, function (iterated, kind) {
      this._t = validate(iterated, NAME); // target
      this._k = kind;                     // kind
      this._l = undefined;                // previous
    }, function () {
      var that = this;
      var kind = that._k;
      var entry = that._l;
      // revert to the last existing entry
      while (entry && entry.r) entry = entry.p;
      // get next entry
      if (!that._t || !(that._l = entry = entry ? entry.n : that._t._f)) {
        // or finish the iteration
        that._t = undefined;
        return step(1);
      }
      // return step by kind
      if (kind == 'keys') return step(0, entry.k);
      if (kind == 'values') return step(0, entry.v);
      return step(0, [entry.k, entry.v]);
    }, IS_MAP ? 'entries' : 'values', !IS_MAP, true);

    // add [@@species], 23.1.2.2, 23.2.2.2
    setSpecies(NAME);
  }
};


/***/ }),

/***/ "./node_modules/core-js/modules/_collection.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/modules/_collection.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/modules/_global.js");
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
var redefine = __webpack_require__(/*! ./_redefine */ "./node_modules/core-js/modules/_redefine.js");
var redefineAll = __webpack_require__(/*! ./_redefine-all */ "./node_modules/core-js/modules/_redefine-all.js");
var meta = __webpack_require__(/*! ./_meta */ "./node_modules/core-js/modules/_meta.js");
var forOf = __webpack_require__(/*! ./_for-of */ "./node_modules/core-js/modules/_for-of.js");
var anInstance = __webpack_require__(/*! ./_an-instance */ "./node_modules/core-js/modules/_an-instance.js");
var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/modules/_is-object.js");
var fails = __webpack_require__(/*! ./_fails */ "./node_modules/core-js/modules/_fails.js");
var $iterDetect = __webpack_require__(/*! ./_iter-detect */ "./node_modules/core-js/modules/_iter-detect.js");
var setToStringTag = __webpack_require__(/*! ./_set-to-string-tag */ "./node_modules/core-js/modules/_set-to-string-tag.js");
var inheritIfRequired = __webpack_require__(/*! ./_inherit-if-required */ "./node_modules/core-js/modules/_inherit-if-required.js");

module.exports = function (NAME, wrapper, methods, common, IS_MAP, IS_WEAK) {
  var Base = global[NAME];
  var C = Base;
  var ADDER = IS_MAP ? 'set' : 'add';
  var proto = C && C.prototype;
  var O = {};
  var fixMethod = function (KEY) {
    var fn = proto[KEY];
    redefine(proto, KEY,
      KEY == 'delete' ? function (a) {
        return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);
      } : KEY == 'has' ? function has(a) {
        return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);
      } : KEY == 'get' ? function get(a) {
        return IS_WEAK && !isObject(a) ? undefined : fn.call(this, a === 0 ? 0 : a);
      } : KEY == 'add' ? function add(a) { fn.call(this, a === 0 ? 0 : a); return this; }
        : function set(a, b) { fn.call(this, a === 0 ? 0 : a, b); return this; }
    );
  };
  if (typeof C != 'function' || !(IS_WEAK || proto.forEach && !fails(function () {
    new C().entries().next();
  }))) {
    // create collection constructor
    C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);
    redefineAll(C.prototype, methods);
    meta.NEED = true;
  } else {
    var instance = new C();
    // early implementations not supports chaining
    var HASNT_CHAINING = instance[ADDER](IS_WEAK ? {} : -0, 1) != instance;
    // V8 ~  Chromium 40- weak-collections throws on primitives, but should return false
    var THROWS_ON_PRIMITIVES = fails(function () { instance.has(1); });
    // most early implementations doesn't supports iterables, most modern - not close it correctly
    var ACCEPT_ITERABLES = $iterDetect(function (iter) { new C(iter); }); // eslint-disable-line no-new
    // for early implementations -0 and +0 not the same
    var BUGGY_ZERO = !IS_WEAK && fails(function () {
      // V8 ~ Chromium 42- fails only with 5+ elements
      var $instance = new C();
      var index = 5;
      while (index--) $instance[ADDER](index, index);
      return !$instance.has(-0);
    });
    if (!ACCEPT_ITERABLES) {
      C = wrapper(function (target, iterable) {
        anInstance(target, C, NAME);
        var that = inheritIfRequired(new Base(), target, C);
        if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);
        return that;
      });
      C.prototype = proto;
      proto.constructor = C;
    }
    if (THROWS_ON_PRIMITIVES || BUGGY_ZERO) {
      fixMethod('delete');
      fixMethod('has');
      IS_MAP && fixMethod('get');
    }
    if (BUGGY_ZERO || HASNT_CHAINING) fixMethod(ADDER);
    // weak collections should not contains .clear method
    if (IS_WEAK && proto.clear) delete proto.clear;
  }

  setToStringTag(C, NAME);

  O[NAME] = C;
  $export($export.G + $export.W + $export.F * (C != Base), O);

  if (!IS_WEAK) common.setStrong(C, NAME, IS_MAP);

  return C;
};


/***/ }),

/***/ "./node_modules/core-js/modules/_core.js":
/*!***********************************************!*\
  !*** ./node_modules/core-js/modules/_core.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

var core = module.exports = { version: '2.5.7' };
if (typeof __e == 'number') __e = core; // eslint-disable-line no-undef


/***/ }),

/***/ "./node_modules/core-js/modules/_create-property.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/modules/_create-property.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $defineProperty = __webpack_require__(/*! ./_object-dp */ "./node_modules/core-js/modules/_object-dp.js");
var createDesc = __webpack_require__(/*! ./_property-desc */ "./node_modules/core-js/modules/_property-desc.js");

module.exports = function (object, index, value) {
  if (index in object) $defineProperty.f(object, index, createDesc(0, value));
  else object[index] = value;
};


/***/ }),

/***/ "./node_modules/core-js/modules/_ctx.js":
/*!**********************************************!*\
  !*** ./node_modules/core-js/modules/_ctx.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// optional / simple context binding
var aFunction = __webpack_require__(/*! ./_a-function */ "./node_modules/core-js/modules/_a-function.js");
module.exports = function (fn, that, length) {
  aFunction(fn);
  if (that === undefined) return fn;
  switch (length) {
    case 1: return function (a) {
      return fn.call(that, a);
    };
    case 2: return function (a, b) {
      return fn.call(that, a, b);
    };
    case 3: return function (a, b, c) {
      return fn.call(that, a, b, c);
    };
  }
  return function (/* ...args */) {
    return fn.apply(that, arguments);
  };
};


/***/ }),

/***/ "./node_modules/core-js/modules/_defined.js":
/*!**************************************************!*\
  !*** ./node_modules/core-js/modules/_defined.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// 7.2.1 RequireObjectCoercible(argument)
module.exports = function (it) {
  if (it == undefined) throw TypeError("Can't call method on  " + it);
  return it;
};


/***/ }),

/***/ "./node_modules/core-js/modules/_descriptors.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/modules/_descriptors.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// Thank's IE8 for his funny defineProperty
module.exports = !__webpack_require__(/*! ./_fails */ "./node_modules/core-js/modules/_fails.js")(function () {
  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;
});


/***/ }),

/***/ "./node_modules/core-js/modules/_dom-create.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/modules/_dom-create.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/modules/_is-object.js");
var document = __webpack_require__(/*! ./_global */ "./node_modules/core-js/modules/_global.js").document;
// typeof document.createElement is 'object' in old IE
var is = isObject(document) && isObject(document.createElement);
module.exports = function (it) {
  return is ? document.createElement(it) : {};
};


/***/ }),

/***/ "./node_modules/core-js/modules/_enum-bug-keys.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/modules/_enum-bug-keys.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// IE 8- don't enum bug keys
module.exports = (
  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'
).split(',');


/***/ }),

/***/ "./node_modules/core-js/modules/_enum-keys.js":
/*!****************************************************!*\
  !*** ./node_modules/core-js/modules/_enum-keys.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// all enumerable object keys, includes symbols
var getKeys = __webpack_require__(/*! ./_object-keys */ "./node_modules/core-js/modules/_object-keys.js");
var gOPS = __webpack_require__(/*! ./_object-gops */ "./node_modules/core-js/modules/_object-gops.js");
var pIE = __webpack_require__(/*! ./_object-pie */ "./node_modules/core-js/modules/_object-pie.js");
module.exports = function (it) {
  var result = getKeys(it);
  var getSymbols = gOPS.f;
  if (getSymbols) {
    var symbols = getSymbols(it);
    var isEnum = pIE.f;
    var i = 0;
    var key;
    while (symbols.length > i) if (isEnum.call(it, key = symbols[i++])) result.push(key);
  } return result;
};


/***/ }),

/***/ "./node_modules/core-js/modules/_export.js":
/*!*************************************************!*\
  !*** ./node_modules/core-js/modules/_export.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/modules/_global.js");
var core = __webpack_require__(/*! ./_core */ "./node_modules/core-js/modules/_core.js");
var hide = __webpack_require__(/*! ./_hide */ "./node_modules/core-js/modules/_hide.js");
var redefine = __webpack_require__(/*! ./_redefine */ "./node_modules/core-js/modules/_redefine.js");
var ctx = __webpack_require__(/*! ./_ctx */ "./node_modules/core-js/modules/_ctx.js");
var PROTOTYPE = 'prototype';

var $export = function (type, name, source) {
  var IS_FORCED = type & $export.F;
  var IS_GLOBAL = type & $export.G;
  var IS_STATIC = type & $export.S;
  var IS_PROTO = type & $export.P;
  var IS_BIND = type & $export.B;
  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE];
  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});
  var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});
  var key, own, out, exp;
  if (IS_GLOBAL) source = name;
  for (key in source) {
    // contains in native
    own = !IS_FORCED && target && target[key] !== undefined;
    // export native or passed
    out = (own ? target : source)[key];
    // bind timers to global for call from export context
    exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
    // extend global
    if (target) redefine(target, key, out, type & $export.U);
    // export
    if (exports[key] != out) hide(exports, key, exp);
    if (IS_PROTO && expProto[key] != out) expProto[key] = out;
  }
};
global.core = core;
// type bitmap
$export.F = 1;   // forced
$export.G = 2;   // global
$export.S = 4;   // static
$export.P = 8;   // proto
$export.B = 16;  // bind
$export.W = 32;  // wrap
$export.U = 64;  // safe
$export.R = 128; // real proto method for `library`
module.exports = $export;


/***/ }),

/***/ "./node_modules/core-js/modules/_fails.js":
/*!************************************************!*\
  !*** ./node_modules/core-js/modules/_fails.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function (exec) {
  try {
    return !!exec();
  } catch (e) {
    return true;
  }
};


/***/ }),

/***/ "./node_modules/core-js/modules/_fix-re-wks.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/modules/_fix-re-wks.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var hide = __webpack_require__(/*! ./_hide */ "./node_modules/core-js/modules/_hide.js");
var redefine = __webpack_require__(/*! ./_redefine */ "./node_modules/core-js/modules/_redefine.js");
var fails = __webpack_require__(/*! ./_fails */ "./node_modules/core-js/modules/_fails.js");
var defined = __webpack_require__(/*! ./_defined */ "./node_modules/core-js/modules/_defined.js");
var wks = __webpack_require__(/*! ./_wks */ "./node_modules/core-js/modules/_wks.js");

module.exports = function (KEY, length, exec) {
  var SYMBOL = wks(KEY);
  var fns = exec(defined, SYMBOL, ''[KEY]);
  var strfn = fns[0];
  var rxfn = fns[1];
  if (fails(function () {
    var O = {};
    O[SYMBOL] = function () { return 7; };
    return ''[KEY](O) != 7;
  })) {
    redefine(String.prototype, KEY, strfn);
    hide(RegExp.prototype, SYMBOL, length == 2
      // 21.2.5.8 RegExp.prototype[@@replace](string, replaceValue)
      // 21.2.5.11 RegExp.prototype[@@split](string, limit)
      ? function (string, arg) { return rxfn.call(string, this, arg); }
      // 21.2.5.6 RegExp.prototype[@@match](string)
      // 21.2.5.9 RegExp.prototype[@@search](string)
      : function (string) { return rxfn.call(string, this); }
    );
  }
};


/***/ }),

/***/ "./node_modules/core-js/modules/_flags.js":
/*!************************************************!*\
  !*** ./node_modules/core-js/modules/_flags.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// 21.2.5.3 get RegExp.prototype.flags
var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/modules/_an-object.js");
module.exports = function () {
  var that = anObject(this);
  var result = '';
  if (that.global) result += 'g';
  if (that.ignoreCase) result += 'i';
  if (that.multiline) result += 'm';
  if (that.unicode) result += 'u';
  if (that.sticky) result += 'y';
  return result;
};


/***/ }),

/***/ "./node_modules/core-js/modules/_for-of.js":
/*!*************************************************!*\
  !*** ./node_modules/core-js/modules/_for-of.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var ctx = __webpack_require__(/*! ./_ctx */ "./node_modules/core-js/modules/_ctx.js");
var call = __webpack_require__(/*! ./_iter-call */ "./node_modules/core-js/modules/_iter-call.js");
var isArrayIter = __webpack_require__(/*! ./_is-array-iter */ "./node_modules/core-js/modules/_is-array-iter.js");
var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/modules/_an-object.js");
var toLength = __webpack_require__(/*! ./_to-length */ "./node_modules/core-js/modules/_to-length.js");
var getIterFn = __webpack_require__(/*! ./core.get-iterator-method */ "./node_modules/core-js/modules/core.get-iterator-method.js");
var BREAK = {};
var RETURN = {};
var exports = module.exports = function (iterable, entries, fn, that, ITERATOR) {
  var iterFn = ITERATOR ? function () { return iterable; } : getIterFn(iterable);
  var f = ctx(fn, that, entries ? 2 : 1);
  var index = 0;
  var length, step, iterator, result;
  if (typeof iterFn != 'function') throw TypeError(iterable + ' is not iterable!');
  // fast case for arrays with default iterator
  if (isArrayIter(iterFn)) for (length = toLength(iterable.length); length > index; index++) {
    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);
    if (result === BREAK || result === RETURN) return result;
  } else for (iterator = iterFn.call(iterable); !(step = iterator.next()).done;) {
    result = call(iterator, f, step.value, entries);
    if (result === BREAK || result === RETURN) return result;
  }
};
exports.BREAK = BREAK;
exports.RETURN = RETURN;


/***/ }),

/***/ "./node_modules/core-js/modules/_global.js":
/*!*************************************************!*\
  !*** ./node_modules/core-js/modules/_global.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
var global = module.exports = typeof window != 'undefined' && window.Math == Math
  ? window : typeof self != 'undefined' && self.Math == Math ? self
  // eslint-disable-next-line no-new-func
  : Function('return this')();
if (typeof __g == 'number') __g = global; // eslint-disable-line no-undef


/***/ }),

/***/ "./node_modules/core-js/modules/_has.js":
/*!**********************************************!*\
  !*** ./node_modules/core-js/modules/_has.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

var hasOwnProperty = {}.hasOwnProperty;
module.exports = function (it, key) {
  return hasOwnProperty.call(it, key);
};


/***/ }),

/***/ "./node_modules/core-js/modules/_hide.js":
/*!***********************************************!*\
  !*** ./node_modules/core-js/modules/_hide.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var dP = __webpack_require__(/*! ./_object-dp */ "./node_modules/core-js/modules/_object-dp.js");
var createDesc = __webpack_require__(/*! ./_property-desc */ "./node_modules/core-js/modules/_property-desc.js");
module.exports = __webpack_require__(/*! ./_descriptors */ "./node_modules/core-js/modules/_descriptors.js") ? function (object, key, value) {
  return dP.f(object, key, createDesc(1, value));
} : function (object, key, value) {
  object[key] = value;
  return object;
};


/***/ }),

/***/ "./node_modules/core-js/modules/_html.js":
/*!***********************************************!*\
  !*** ./node_modules/core-js/modules/_html.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var document = __webpack_require__(/*! ./_global */ "./node_modules/core-js/modules/_global.js").document;
module.exports = document && document.documentElement;


/***/ }),

/***/ "./node_modules/core-js/modules/_ie8-dom-define.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/modules/_ie8-dom-define.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = !__webpack_require__(/*! ./_descriptors */ "./node_modules/core-js/modules/_descriptors.js") && !__webpack_require__(/*! ./_fails */ "./node_modules/core-js/modules/_fails.js")(function () {
  return Object.defineProperty(__webpack_require__(/*! ./_dom-create */ "./node_modules/core-js/modules/_dom-create.js")('div'), 'a', { get: function () { return 7; } }).a != 7;
});


/***/ }),

/***/ "./node_modules/core-js/modules/_inherit-if-required.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/modules/_inherit-if-required.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/modules/_is-object.js");
var setPrototypeOf = __webpack_require__(/*! ./_set-proto */ "./node_modules/core-js/modules/_set-proto.js").set;
module.exports = function (that, target, C) {
  var S = target.constructor;
  var P;
  if (S !== C && typeof S == 'function' && (P = S.prototype) !== C.prototype && isObject(P) && setPrototypeOf) {
    setPrototypeOf(that, P);
  } return that;
};


/***/ }),

/***/ "./node_modules/core-js/modules/_invoke.js":
/*!*************************************************!*\
  !*** ./node_modules/core-js/modules/_invoke.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// fast apply, http://jsperf.lnkit.com/fast-apply/5
module.exports = function (fn, args, that) {
  var un = that === undefined;
  switch (args.length) {
    case 0: return un ? fn()
                      : fn.call(that);
    case 1: return un ? fn(args[0])
                      : fn.call(that, args[0]);
    case 2: return un ? fn(args[0], args[1])
                      : fn.call(that, args[0], args[1]);
    case 3: return un ? fn(args[0], args[1], args[2])
                      : fn.call(that, args[0], args[1], args[2]);
    case 4: return un ? fn(args[0], args[1], args[2], args[3])
                      : fn.call(that, args[0], args[1], args[2], args[3]);
  } return fn.apply(that, args);
};


/***/ }),

/***/ "./node_modules/core-js/modules/_iobject.js":
/*!**************************************************!*\
  !*** ./node_modules/core-js/modules/_iobject.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// fallback for non-array-like ES3 and non-enumerable old V8 strings
var cof = __webpack_require__(/*! ./_cof */ "./node_modules/core-js/modules/_cof.js");
// eslint-disable-next-line no-prototype-builtins
module.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {
  return cof(it) == 'String' ? it.split('') : Object(it);
};


/***/ }),

/***/ "./node_modules/core-js/modules/_is-array-iter.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/modules/_is-array-iter.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// check on default Array iterator
var Iterators = __webpack_require__(/*! ./_iterators */ "./node_modules/core-js/modules/_iterators.js");
var ITERATOR = __webpack_require__(/*! ./_wks */ "./node_modules/core-js/modules/_wks.js")('iterator');
var ArrayProto = Array.prototype;

module.exports = function (it) {
  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);
};


/***/ }),

/***/ "./node_modules/core-js/modules/_is-array.js":
/*!***************************************************!*\
  !*** ./node_modules/core-js/modules/_is-array.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 7.2.2 IsArray(argument)
var cof = __webpack_require__(/*! ./_cof */ "./node_modules/core-js/modules/_cof.js");
module.exports = Array.isArray || function isArray(arg) {
  return cof(arg) == 'Array';
};


/***/ }),

/***/ "./node_modules/core-js/modules/_is-object.js":
/*!****************************************************!*\
  !*** ./node_modules/core-js/modules/_is-object.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function (it) {
  return typeof it === 'object' ? it !== null : typeof it === 'function';
};


/***/ }),

/***/ "./node_modules/core-js/modules/_is-regexp.js":
/*!****************************************************!*\
  !*** ./node_modules/core-js/modules/_is-regexp.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 7.2.8 IsRegExp(argument)
var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/modules/_is-object.js");
var cof = __webpack_require__(/*! ./_cof */ "./node_modules/core-js/modules/_cof.js");
var MATCH = __webpack_require__(/*! ./_wks */ "./node_modules/core-js/modules/_wks.js")('match');
module.exports = function (it) {
  var isRegExp;
  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : cof(it) == 'RegExp');
};


/***/ }),

/***/ "./node_modules/core-js/modules/_iter-call.js":
/*!****************************************************!*\
  !*** ./node_modules/core-js/modules/_iter-call.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// call something on iterator step with safe closing on error
var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/modules/_an-object.js");
module.exports = function (iterator, fn, value, entries) {
  try {
    return entries ? fn(anObject(value)[0], value[1]) : fn(value);
  // 7.4.6 IteratorClose(iterator, completion)
  } catch (e) {
    var ret = iterator['return'];
    if (ret !== undefined) anObject(ret.call(iterator));
    throw e;
  }
};


/***/ }),

/***/ "./node_modules/core-js/modules/_iter-create.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/modules/_iter-create.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var create = __webpack_require__(/*! ./_object-create */ "./node_modules/core-js/modules/_object-create.js");
var descriptor = __webpack_require__(/*! ./_property-desc */ "./node_modules/core-js/modules/_property-desc.js");
var setToStringTag = __webpack_require__(/*! ./_set-to-string-tag */ "./node_modules/core-js/modules/_set-to-string-tag.js");
var IteratorPrototype = {};

// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
__webpack_require__(/*! ./_hide */ "./node_modules/core-js/modules/_hide.js")(IteratorPrototype, __webpack_require__(/*! ./_wks */ "./node_modules/core-js/modules/_wks.js")('iterator'), function () { return this; });

module.exports = function (Constructor, NAME, next) {
  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });
  setToStringTag(Constructor, NAME + ' Iterator');
};


/***/ }),

/***/ "./node_modules/core-js/modules/_iter-define.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/modules/_iter-define.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var LIBRARY = __webpack_require__(/*! ./_library */ "./node_modules/core-js/modules/_library.js");
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
var redefine = __webpack_require__(/*! ./_redefine */ "./node_modules/core-js/modules/_redefine.js");
var hide = __webpack_require__(/*! ./_hide */ "./node_modules/core-js/modules/_hide.js");
var Iterators = __webpack_require__(/*! ./_iterators */ "./node_modules/core-js/modules/_iterators.js");
var $iterCreate = __webpack_require__(/*! ./_iter-create */ "./node_modules/core-js/modules/_iter-create.js");
var setToStringTag = __webpack_require__(/*! ./_set-to-string-tag */ "./node_modules/core-js/modules/_set-to-string-tag.js");
var getPrototypeOf = __webpack_require__(/*! ./_object-gpo */ "./node_modules/core-js/modules/_object-gpo.js");
var ITERATOR = __webpack_require__(/*! ./_wks */ "./node_modules/core-js/modules/_wks.js")('iterator');
var BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`
var FF_ITERATOR = '@@iterator';
var KEYS = 'keys';
var VALUES = 'values';

var returnThis = function () { return this; };

module.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {
  $iterCreate(Constructor, NAME, next);
  var getMethod = function (kind) {
    if (!BUGGY && kind in proto) return proto[kind];
    switch (kind) {
      case KEYS: return function keys() { return new Constructor(this, kind); };
      case VALUES: return function values() { return new Constructor(this, kind); };
    } return function entries() { return new Constructor(this, kind); };
  };
  var TAG = NAME + ' Iterator';
  var DEF_VALUES = DEFAULT == VALUES;
  var VALUES_BUG = false;
  var proto = Base.prototype;
  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];
  var $default = $native || getMethod(DEFAULT);
  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;
  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;
  var methods, key, IteratorPrototype;
  // Fix native
  if ($anyNative) {
    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));
    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {
      // Set @@toStringTag to native iterators
      setToStringTag(IteratorPrototype, TAG, true);
      // fix for some old engines
      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);
    }
  }
  // fix Array#{values, @@iterator}.name in V8 / FF
  if (DEF_VALUES && $native && $native.name !== VALUES) {
    VALUES_BUG = true;
    $default = function values() { return $native.call(this); };
  }
  // Define iterator
  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {
    hide(proto, ITERATOR, $default);
  }
  // Plug for library
  Iterators[NAME] = $default;
  Iterators[TAG] = returnThis;
  if (DEFAULT) {
    methods = {
      values: DEF_VALUES ? $default : getMethod(VALUES),
      keys: IS_SET ? $default : getMethod(KEYS),
      entries: $entries
    };
    if (FORCED) for (key in methods) {
      if (!(key in proto)) redefine(proto, key, methods[key]);
    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);
  }
  return methods;
};


/***/ }),

/***/ "./node_modules/core-js/modules/_iter-detect.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/modules/_iter-detect.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var ITERATOR = __webpack_require__(/*! ./_wks */ "./node_modules/core-js/modules/_wks.js")('iterator');
var SAFE_CLOSING = false;

try {
  var riter = [7][ITERATOR]();
  riter['return'] = function () { SAFE_CLOSING = true; };
  // eslint-disable-next-line no-throw-literal
  Array.from(riter, function () { throw 2; });
} catch (e) { /* empty */ }

module.exports = function (exec, skipClosing) {
  if (!skipClosing && !SAFE_CLOSING) return false;
  var safe = false;
  try {
    var arr = [7];
    var iter = arr[ITERATOR]();
    iter.next = function () { return { done: safe = true }; };
    arr[ITERATOR] = function () { return iter; };
    exec(arr);
  } catch (e) { /* empty */ }
  return safe;
};


/***/ }),

/***/ "./node_modules/core-js/modules/_iter-step.js":
/*!****************************************************!*\
  !*** ./node_modules/core-js/modules/_iter-step.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function (done, value) {
  return { value: value, done: !!done };
};


/***/ }),

/***/ "./node_modules/core-js/modules/_iterators.js":
/*!****************************************************!*\
  !*** ./node_modules/core-js/modules/_iterators.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = {};


/***/ }),

/***/ "./node_modules/core-js/modules/_library.js":
/*!**************************************************!*\
  !*** ./node_modules/core-js/modules/_library.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = false;


/***/ }),

/***/ "./node_modules/core-js/modules/_meta.js":
/*!***********************************************!*\
  !*** ./node_modules/core-js/modules/_meta.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var META = __webpack_require__(/*! ./_uid */ "./node_modules/core-js/modules/_uid.js")('meta');
var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/modules/_is-object.js");
var has = __webpack_require__(/*! ./_has */ "./node_modules/core-js/modules/_has.js");
var setDesc = __webpack_require__(/*! ./_object-dp */ "./node_modules/core-js/modules/_object-dp.js").f;
var id = 0;
var isExtensible = Object.isExtensible || function () {
  return true;
};
var FREEZE = !__webpack_require__(/*! ./_fails */ "./node_modules/core-js/modules/_fails.js")(function () {
  return isExtensible(Object.preventExtensions({}));
});
var setMeta = function (it) {
  setDesc(it, META, { value: {
    i: 'O' + ++id, // object ID
    w: {}          // weak collections IDs
  } });
};
var fastKey = function (it, create) {
  // return primitive with prefix
  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
  if (!has(it, META)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return 'F';
    // not necessary to add metadata
    if (!create) return 'E';
    // add missing metadata
    setMeta(it);
  // return object ID
  } return it[META].i;
};
var getWeak = function (it, create) {
  if (!has(it, META)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return true;
    // not necessary to add metadata
    if (!create) return false;
    // add missing metadata
    setMeta(it);
  // return hash weak collections IDs
  } return it[META].w;
};
// add metadata on freeze-family methods calling
var onFreeze = function (it) {
  if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);
  return it;
};
var meta = module.exports = {
  KEY: META,
  NEED: false,
  fastKey: fastKey,
  getWeak: getWeak,
  onFreeze: onFreeze
};


/***/ }),

/***/ "./node_modules/core-js/modules/_microtask.js":
/*!****************************************************!*\
  !*** ./node_modules/core-js/modules/_microtask.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/modules/_global.js");
var macrotask = __webpack_require__(/*! ./_task */ "./node_modules/core-js/modules/_task.js").set;
var Observer = global.MutationObserver || global.WebKitMutationObserver;
var process = global.process;
var Promise = global.Promise;
var isNode = __webpack_require__(/*! ./_cof */ "./node_modules/core-js/modules/_cof.js")(process) == 'process';

module.exports = function () {
  var head, last, notify;

  var flush = function () {
    var parent, fn;
    if (isNode && (parent = process.domain)) parent.exit();
    while (head) {
      fn = head.fn;
      head = head.next;
      try {
        fn();
      } catch (e) {
        if (head) notify();
        else last = undefined;
        throw e;
      }
    } last = undefined;
    if (parent) parent.enter();
  };

  // Node.js
  if (isNode) {
    notify = function () {
      process.nextTick(flush);
    };
  // browsers with MutationObserver, except iOS Safari - https://github.com/zloirock/core-js/issues/339
  } else if (Observer && !(global.navigator && global.navigator.standalone)) {
    var toggle = true;
    var node = document.createTextNode('');
    new Observer(flush).observe(node, { characterData: true }); // eslint-disable-line no-new
    notify = function () {
      node.data = toggle = !toggle;
    };
  // environments with maybe non-completely correct, but existent Promise
  } else if (Promise && Promise.resolve) {
    // Promise.resolve without an argument throws an error in LG WebOS 2
    var promise = Promise.resolve(undefined);
    notify = function () {
      promise.then(flush);
    };
  // for other environments - macrotask based on:
  // - setImmediate
  // - MessageChannel
  // - window.postMessag
  // - onreadystatechange
  // - setTimeout
  } else {
    notify = function () {
      // strange IE + webpack dev server bug - use .call(global)
      macrotask.call(global, flush);
    };
  }

  return function (fn) {
    var task = { fn: fn, next: undefined };
    if (last) last.next = task;
    if (!head) {
      head = task;
      notify();
    } last = task;
  };
};


/***/ }),

/***/ "./node_modules/core-js/modules/_new-promise-capability.js":
/*!*****************************************************************!*\
  !*** ./node_modules/core-js/modules/_new-promise-capability.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// 25.4.1.5 NewPromiseCapability(C)
var aFunction = __webpack_require__(/*! ./_a-function */ "./node_modules/core-js/modules/_a-function.js");

function PromiseCapability(C) {
  var resolve, reject;
  this.promise = new C(function ($$resolve, $$reject) {
    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');
    resolve = $$resolve;
    reject = $$reject;
  });
  this.resolve = aFunction(resolve);
  this.reject = aFunction(reject);
}

module.exports.f = function (C) {
  return new PromiseCapability(C);
};


/***/ }),

/***/ "./node_modules/core-js/modules/_object-assign.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/modules/_object-assign.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// 19.1.2.1 Object.assign(target, source, ...)
var getKeys = __webpack_require__(/*! ./_object-keys */ "./node_modules/core-js/modules/_object-keys.js");
var gOPS = __webpack_require__(/*! ./_object-gops */ "./node_modules/core-js/modules/_object-gops.js");
var pIE = __webpack_require__(/*! ./_object-pie */ "./node_modules/core-js/modules/_object-pie.js");
var toObject = __webpack_require__(/*! ./_to-object */ "./node_modules/core-js/modules/_to-object.js");
var IObject = __webpack_require__(/*! ./_iobject */ "./node_modules/core-js/modules/_iobject.js");
var $assign = Object.assign;

// should work with symbols and should have deterministic property order (V8 bug)
module.exports = !$assign || __webpack_require__(/*! ./_fails */ "./node_modules/core-js/modules/_fails.js")(function () {
  var A = {};
  var B = {};
  // eslint-disable-next-line no-undef
  var S = Symbol();
  var K = 'abcdefghijklmnopqrst';
  A[S] = 7;
  K.split('').forEach(function (k) { B[k] = k; });
  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;
}) ? function assign(target, source) { // eslint-disable-line no-unused-vars
  var T = toObject(target);
  var aLen = arguments.length;
  var index = 1;
  var getSymbols = gOPS.f;
  var isEnum = pIE.f;
  while (aLen > index) {
    var S = IObject(arguments[index++]);
    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);
    var length = keys.length;
    var j = 0;
    var key;
    while (length > j) if (isEnum.call(S, key = keys[j++])) T[key] = S[key];
  } return T;
} : $assign;


/***/ }),

/***/ "./node_modules/core-js/modules/_object-create.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/modules/_object-create.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/modules/_an-object.js");
var dPs = __webpack_require__(/*! ./_object-dps */ "./node_modules/core-js/modules/_object-dps.js");
var enumBugKeys = __webpack_require__(/*! ./_enum-bug-keys */ "./node_modules/core-js/modules/_enum-bug-keys.js");
var IE_PROTO = __webpack_require__(/*! ./_shared-key */ "./node_modules/core-js/modules/_shared-key.js")('IE_PROTO');
var Empty = function () { /* empty */ };
var PROTOTYPE = 'prototype';

// Create object with fake `null` prototype: use iframe Object with cleared prototype
var createDict = function () {
  // Thrash, waste and sodomy: IE GC bug
  var iframe = __webpack_require__(/*! ./_dom-create */ "./node_modules/core-js/modules/_dom-create.js")('iframe');
  var i = enumBugKeys.length;
  var lt = '<';
  var gt = '>';
  var iframeDocument;
  iframe.style.display = 'none';
  __webpack_require__(/*! ./_html */ "./node_modules/core-js/modules/_html.js").appendChild(iframe);
  iframe.src = 'javascript:'; // eslint-disable-line no-script-url
  // createDict = iframe.contentWindow.Object;
  // html.removeChild(iframe);
  iframeDocument = iframe.contentWindow.document;
  iframeDocument.open();
  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
  iframeDocument.close();
  createDict = iframeDocument.F;
  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];
  return createDict();
};

module.exports = Object.create || function create(O, Properties) {
  var result;
  if (O !== null) {
    Empty[PROTOTYPE] = anObject(O);
    result = new Empty();
    Empty[PROTOTYPE] = null;
    // add "__proto__" for Object.getPrototypeOf polyfill
    result[IE_PROTO] = O;
  } else result = createDict();
  return Properties === undefined ? result : dPs(result, Properties);
};


/***/ }),

/***/ "./node_modules/core-js/modules/_object-dp.js":
/*!****************************************************!*\
  !*** ./node_modules/core-js/modules/_object-dp.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/modules/_an-object.js");
var IE8_DOM_DEFINE = __webpack_require__(/*! ./_ie8-dom-define */ "./node_modules/core-js/modules/_ie8-dom-define.js");
var toPrimitive = __webpack_require__(/*! ./_to-primitive */ "./node_modules/core-js/modules/_to-primitive.js");
var dP = Object.defineProperty;

exports.f = __webpack_require__(/*! ./_descriptors */ "./node_modules/core-js/modules/_descriptors.js") ? Object.defineProperty : function defineProperty(O, P, Attributes) {
  anObject(O);
  P = toPrimitive(P, true);
  anObject(Attributes);
  if (IE8_DOM_DEFINE) try {
    return dP(O, P, Attributes);
  } catch (e) { /* empty */ }
  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');
  if ('value' in Attributes) O[P] = Attributes.value;
  return O;
};


/***/ }),

/***/ "./node_modules/core-js/modules/_object-dps.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/modules/_object-dps.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var dP = __webpack_require__(/*! ./_object-dp */ "./node_modules/core-js/modules/_object-dp.js");
var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/modules/_an-object.js");
var getKeys = __webpack_require__(/*! ./_object-keys */ "./node_modules/core-js/modules/_object-keys.js");

module.exports = __webpack_require__(/*! ./_descriptors */ "./node_modules/core-js/modules/_descriptors.js") ? Object.defineProperties : function defineProperties(O, Properties) {
  anObject(O);
  var keys = getKeys(Properties);
  var length = keys.length;
  var i = 0;
  var P;
  while (length > i) dP.f(O, P = keys[i++], Properties[P]);
  return O;
};


/***/ }),

/***/ "./node_modules/core-js/modules/_object-gopd.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/modules/_object-gopd.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var pIE = __webpack_require__(/*! ./_object-pie */ "./node_modules/core-js/modules/_object-pie.js");
var createDesc = __webpack_require__(/*! ./_property-desc */ "./node_modules/core-js/modules/_property-desc.js");
var toIObject = __webpack_require__(/*! ./_to-iobject */ "./node_modules/core-js/modules/_to-iobject.js");
var toPrimitive = __webpack_require__(/*! ./_to-primitive */ "./node_modules/core-js/modules/_to-primitive.js");
var has = __webpack_require__(/*! ./_has */ "./node_modules/core-js/modules/_has.js");
var IE8_DOM_DEFINE = __webpack_require__(/*! ./_ie8-dom-define */ "./node_modules/core-js/modules/_ie8-dom-define.js");
var gOPD = Object.getOwnPropertyDescriptor;

exports.f = __webpack_require__(/*! ./_descriptors */ "./node_modules/core-js/modules/_descriptors.js") ? gOPD : function getOwnPropertyDescriptor(O, P) {
  O = toIObject(O);
  P = toPrimitive(P, true);
  if (IE8_DOM_DEFINE) try {
    return gOPD(O, P);
  } catch (e) { /* empty */ }
  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);
};


/***/ }),

/***/ "./node_modules/core-js/modules/_object-gopn-ext.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/modules/_object-gopn-ext.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
var toIObject = __webpack_require__(/*! ./_to-iobject */ "./node_modules/core-js/modules/_to-iobject.js");
var gOPN = __webpack_require__(/*! ./_object-gopn */ "./node_modules/core-js/modules/_object-gopn.js").f;
var toString = {}.toString;

var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames
  ? Object.getOwnPropertyNames(window) : [];

var getWindowNames = function (it) {
  try {
    return gOPN(it);
  } catch (e) {
    return windowNames.slice();
  }
};

module.exports.f = function getOwnPropertyNames(it) {
  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));
};


/***/ }),

/***/ "./node_modules/core-js/modules/_object-gopn.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/modules/_object-gopn.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)
var $keys = __webpack_require__(/*! ./_object-keys-internal */ "./node_modules/core-js/modules/_object-keys-internal.js");
var hiddenKeys = __webpack_require__(/*! ./_enum-bug-keys */ "./node_modules/core-js/modules/_enum-bug-keys.js").concat('length', 'prototype');

exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
  return $keys(O, hiddenKeys);
};


/***/ }),

/***/ "./node_modules/core-js/modules/_object-gops.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/modules/_object-gops.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

exports.f = Object.getOwnPropertySymbols;


/***/ }),

/***/ "./node_modules/core-js/modules/_object-gpo.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/modules/_object-gpo.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)
var has = __webpack_require__(/*! ./_has */ "./node_modules/core-js/modules/_has.js");
var toObject = __webpack_require__(/*! ./_to-object */ "./node_modules/core-js/modules/_to-object.js");
var IE_PROTO = __webpack_require__(/*! ./_shared-key */ "./node_modules/core-js/modules/_shared-key.js")('IE_PROTO');
var ObjectProto = Object.prototype;

module.exports = Object.getPrototypeOf || function (O) {
  O = toObject(O);
  if (has(O, IE_PROTO)) return O[IE_PROTO];
  if (typeof O.constructor == 'function' && O instanceof O.constructor) {
    return O.constructor.prototype;
  } return O instanceof Object ? ObjectProto : null;
};


/***/ }),

/***/ "./node_modules/core-js/modules/_object-keys-internal.js":
/*!***************************************************************!*\
  !*** ./node_modules/core-js/modules/_object-keys-internal.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var has = __webpack_require__(/*! ./_has */ "./node_modules/core-js/modules/_has.js");
var toIObject = __webpack_require__(/*! ./_to-iobject */ "./node_modules/core-js/modules/_to-iobject.js");
var arrayIndexOf = __webpack_require__(/*! ./_array-includes */ "./node_modules/core-js/modules/_array-includes.js")(false);
var IE_PROTO = __webpack_require__(/*! ./_shared-key */ "./node_modules/core-js/modules/_shared-key.js")('IE_PROTO');

module.exports = function (object, names) {
  var O = toIObject(object);
  var i = 0;
  var result = [];
  var key;
  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);
  // Don't enum bug & hidden keys
  while (names.length > i) if (has(O, key = names[i++])) {
    ~arrayIndexOf(result, key) || result.push(key);
  }
  return result;
};


/***/ }),

/***/ "./node_modules/core-js/modules/_object-keys.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/modules/_object-keys.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.14 / 15.2.3.14 Object.keys(O)
var $keys = __webpack_require__(/*! ./_object-keys-internal */ "./node_modules/core-js/modules/_object-keys-internal.js");
var enumBugKeys = __webpack_require__(/*! ./_enum-bug-keys */ "./node_modules/core-js/modules/_enum-bug-keys.js");

module.exports = Object.keys || function keys(O) {
  return $keys(O, enumBugKeys);
};


/***/ }),

/***/ "./node_modules/core-js/modules/_object-pie.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/modules/_object-pie.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

exports.f = {}.propertyIsEnumerable;


/***/ }),

/***/ "./node_modules/core-js/modules/_object-to-array.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/modules/_object-to-array.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var getKeys = __webpack_require__(/*! ./_object-keys */ "./node_modules/core-js/modules/_object-keys.js");
var toIObject = __webpack_require__(/*! ./_to-iobject */ "./node_modules/core-js/modules/_to-iobject.js");
var isEnum = __webpack_require__(/*! ./_object-pie */ "./node_modules/core-js/modules/_object-pie.js").f;
module.exports = function (isEntries) {
  return function (it) {
    var O = toIObject(it);
    var keys = getKeys(O);
    var length = keys.length;
    var i = 0;
    var result = [];
    var key;
    while (length > i) if (isEnum.call(O, key = keys[i++])) {
      result.push(isEntries ? [key, O[key]] : O[key]);
    } return result;
  };
};


/***/ }),

/***/ "./node_modules/core-js/modules/_perform.js":
/*!**************************************************!*\
  !*** ./node_modules/core-js/modules/_perform.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function (exec) {
  try {
    return { e: false, v: exec() };
  } catch (e) {
    return { e: true, v: e };
  }
};


/***/ }),

/***/ "./node_modules/core-js/modules/_promise-resolve.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/modules/_promise-resolve.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/modules/_an-object.js");
var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/modules/_is-object.js");
var newPromiseCapability = __webpack_require__(/*! ./_new-promise-capability */ "./node_modules/core-js/modules/_new-promise-capability.js");

module.exports = function (C, x) {
  anObject(C);
  if (isObject(x) && x.constructor === C) return x;
  var promiseCapability = newPromiseCapability.f(C);
  var resolve = promiseCapability.resolve;
  resolve(x);
  return promiseCapability.promise;
};


/***/ }),

/***/ "./node_modules/core-js/modules/_property-desc.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/modules/_property-desc.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function (bitmap, value) {
  return {
    enumerable: !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable: !(bitmap & 4),
    value: value
  };
};


/***/ }),

/***/ "./node_modules/core-js/modules/_redefine-all.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/modules/_redefine-all.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var redefine = __webpack_require__(/*! ./_redefine */ "./node_modules/core-js/modules/_redefine.js");
module.exports = function (target, src, safe) {
  for (var key in src) redefine(target, key, src[key], safe);
  return target;
};


/***/ }),

/***/ "./node_modules/core-js/modules/_redefine.js":
/*!***************************************************!*\
  !*** ./node_modules/core-js/modules/_redefine.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/modules/_global.js");
var hide = __webpack_require__(/*! ./_hide */ "./node_modules/core-js/modules/_hide.js");
var has = __webpack_require__(/*! ./_has */ "./node_modules/core-js/modules/_has.js");
var SRC = __webpack_require__(/*! ./_uid */ "./node_modules/core-js/modules/_uid.js")('src');
var TO_STRING = 'toString';
var $toString = Function[TO_STRING];
var TPL = ('' + $toString).split(TO_STRING);

__webpack_require__(/*! ./_core */ "./node_modules/core-js/modules/_core.js").inspectSource = function (it) {
  return $toString.call(it);
};

(module.exports = function (O, key, val, safe) {
  var isFunction = typeof val == 'function';
  if (isFunction) has(val, 'name') || hide(val, 'name', key);
  if (O[key] === val) return;
  if (isFunction) has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));
  if (O === global) {
    O[key] = val;
  } else if (!safe) {
    delete O[key];
    hide(O, key, val);
  } else if (O[key]) {
    O[key] = val;
  } else {
    hide(O, key, val);
  }
// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative
})(Function.prototype, TO_STRING, function toString() {
  return typeof this == 'function' && this[SRC] || $toString.call(this);
});


/***/ }),

/***/ "./node_modules/core-js/modules/_set-proto.js":
/*!****************************************************!*\
  !*** ./node_modules/core-js/modules/_set-proto.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// Works with __proto__ only. Old v8 can't work with null proto objects.
/* eslint-disable no-proto */
var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/modules/_is-object.js");
var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/modules/_an-object.js");
var check = function (O, proto) {
  anObject(O);
  if (!isObject(proto) && proto !== null) throw TypeError(proto + ": can't set as prototype!");
};
module.exports = {
  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line
    function (test, buggy, set) {
      try {
        set = __webpack_require__(/*! ./_ctx */ "./node_modules/core-js/modules/_ctx.js")(Function.call, __webpack_require__(/*! ./_object-gopd */ "./node_modules/core-js/modules/_object-gopd.js").f(Object.prototype, '__proto__').set, 2);
        set(test, []);
        buggy = !(test instanceof Array);
      } catch (e) { buggy = true; }
      return function setPrototypeOf(O, proto) {
        check(O, proto);
        if (buggy) O.__proto__ = proto;
        else set(O, proto);
        return O;
      };
    }({}, false) : undefined),
  check: check
};


/***/ }),

/***/ "./node_modules/core-js/modules/_set-species.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/modules/_set-species.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/modules/_global.js");
var dP = __webpack_require__(/*! ./_object-dp */ "./node_modules/core-js/modules/_object-dp.js");
var DESCRIPTORS = __webpack_require__(/*! ./_descriptors */ "./node_modules/core-js/modules/_descriptors.js");
var SPECIES = __webpack_require__(/*! ./_wks */ "./node_modules/core-js/modules/_wks.js")('species');

module.exports = function (KEY) {
  var C = global[KEY];
  if (DESCRIPTORS && C && !C[SPECIES]) dP.f(C, SPECIES, {
    configurable: true,
    get: function () { return this; }
  });
};


/***/ }),

/***/ "./node_modules/core-js/modules/_set-to-string-tag.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/modules/_set-to-string-tag.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var def = __webpack_require__(/*! ./_object-dp */ "./node_modules/core-js/modules/_object-dp.js").f;
var has = __webpack_require__(/*! ./_has */ "./node_modules/core-js/modules/_has.js");
var TAG = __webpack_require__(/*! ./_wks */ "./node_modules/core-js/modules/_wks.js")('toStringTag');

module.exports = function (it, tag, stat) {
  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });
};


/***/ }),

/***/ "./node_modules/core-js/modules/_shared-key.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/modules/_shared-key.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var shared = __webpack_require__(/*! ./_shared */ "./node_modules/core-js/modules/_shared.js")('keys');
var uid = __webpack_require__(/*! ./_uid */ "./node_modules/core-js/modules/_uid.js");
module.exports = function (key) {
  return shared[key] || (shared[key] = uid(key));
};


/***/ }),

/***/ "./node_modules/core-js/modules/_shared.js":
/*!*************************************************!*\
  !*** ./node_modules/core-js/modules/_shared.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var core = __webpack_require__(/*! ./_core */ "./node_modules/core-js/modules/_core.js");
var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/modules/_global.js");
var SHARED = '__core-js_shared__';
var store = global[SHARED] || (global[SHARED] = {});

(module.exports = function (key, value) {
  return store[key] || (store[key] = value !== undefined ? value : {});
})('versions', []).push({
  version: core.version,
  mode: __webpack_require__(/*! ./_library */ "./node_modules/core-js/modules/_library.js") ? 'pure' : 'global',
  copyright: '© 2018 Denis Pushkarev (zloirock.ru)'
});


/***/ }),

/***/ "./node_modules/core-js/modules/_species-constructor.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/modules/_species-constructor.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 7.3.20 SpeciesConstructor(O, defaultConstructor)
var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/modules/_an-object.js");
var aFunction = __webpack_require__(/*! ./_a-function */ "./node_modules/core-js/modules/_a-function.js");
var SPECIES = __webpack_require__(/*! ./_wks */ "./node_modules/core-js/modules/_wks.js")('species');
module.exports = function (O, D) {
  var C = anObject(O).constructor;
  var S;
  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);
};


/***/ }),

/***/ "./node_modules/core-js/modules/_strict-method.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/modules/_strict-method.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var fails = __webpack_require__(/*! ./_fails */ "./node_modules/core-js/modules/_fails.js");

module.exports = function (method, arg) {
  return !!method && fails(function () {
    // eslint-disable-next-line no-useless-call
    arg ? method.call(null, function () { /* empty */ }, 1) : method.call(null);
  });
};


/***/ }),

/***/ "./node_modules/core-js/modules/_string-pad.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/modules/_string-pad.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// https://github.com/tc39/proposal-string-pad-start-end
var toLength = __webpack_require__(/*! ./_to-length */ "./node_modules/core-js/modules/_to-length.js");
var repeat = __webpack_require__(/*! ./_string-repeat */ "./node_modules/core-js/modules/_string-repeat.js");
var defined = __webpack_require__(/*! ./_defined */ "./node_modules/core-js/modules/_defined.js");

module.exports = function (that, maxLength, fillString, left) {
  var S = String(defined(that));
  var stringLength = S.length;
  var fillStr = fillString === undefined ? ' ' : String(fillString);
  var intMaxLength = toLength(maxLength);
  if (intMaxLength <= stringLength || fillStr == '') return S;
  var fillLen = intMaxLength - stringLength;
  var stringFiller = repeat.call(fillStr, Math.ceil(fillLen / fillStr.length));
  if (stringFiller.length > fillLen) stringFiller = stringFiller.slice(0, fillLen);
  return left ? stringFiller + S : S + stringFiller;
};


/***/ }),

/***/ "./node_modules/core-js/modules/_string-repeat.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/modules/_string-repeat.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var toInteger = __webpack_require__(/*! ./_to-integer */ "./node_modules/core-js/modules/_to-integer.js");
var defined = __webpack_require__(/*! ./_defined */ "./node_modules/core-js/modules/_defined.js");

module.exports = function repeat(count) {
  var str = String(defined(this));
  var res = '';
  var n = toInteger(count);
  if (n < 0 || n == Infinity) throw RangeError("Count can't be negative");
  for (;n > 0; (n >>>= 1) && (str += str)) if (n & 1) res += str;
  return res;
};


/***/ }),

/***/ "./node_modules/core-js/modules/_task.js":
/*!***********************************************!*\
  !*** ./node_modules/core-js/modules/_task.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var ctx = __webpack_require__(/*! ./_ctx */ "./node_modules/core-js/modules/_ctx.js");
var invoke = __webpack_require__(/*! ./_invoke */ "./node_modules/core-js/modules/_invoke.js");
var html = __webpack_require__(/*! ./_html */ "./node_modules/core-js/modules/_html.js");
var cel = __webpack_require__(/*! ./_dom-create */ "./node_modules/core-js/modules/_dom-create.js");
var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/modules/_global.js");
var process = global.process;
var setTask = global.setImmediate;
var clearTask = global.clearImmediate;
var MessageChannel = global.MessageChannel;
var Dispatch = global.Dispatch;
var counter = 0;
var queue = {};
var ONREADYSTATECHANGE = 'onreadystatechange';
var defer, channel, port;
var run = function () {
  var id = +this;
  // eslint-disable-next-line no-prototype-builtins
  if (queue.hasOwnProperty(id)) {
    var fn = queue[id];
    delete queue[id];
    fn();
  }
};
var listener = function (event) {
  run.call(event.data);
};
// Node.js 0.9+ & IE10+ has setImmediate, otherwise:
if (!setTask || !clearTask) {
  setTask = function setImmediate(fn) {
    var args = [];
    var i = 1;
    while (arguments.length > i) args.push(arguments[i++]);
    queue[++counter] = function () {
      // eslint-disable-next-line no-new-func
      invoke(typeof fn == 'function' ? fn : Function(fn), args);
    };
    defer(counter);
    return counter;
  };
  clearTask = function clearImmediate(id) {
    delete queue[id];
  };
  // Node.js 0.8-
  if (__webpack_require__(/*! ./_cof */ "./node_modules/core-js/modules/_cof.js")(process) == 'process') {
    defer = function (id) {
      process.nextTick(ctx(run, id, 1));
    };
  // Sphere (JS game engine) Dispatch API
  } else if (Dispatch && Dispatch.now) {
    defer = function (id) {
      Dispatch.now(ctx(run, id, 1));
    };
  // Browsers with MessageChannel, includes WebWorkers
  } else if (MessageChannel) {
    channel = new MessageChannel();
    port = channel.port2;
    channel.port1.onmessage = listener;
    defer = ctx(port.postMessage, port, 1);
  // Browsers with postMessage, skip WebWorkers
  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'
  } else if (global.addEventListener && typeof postMessage == 'function' && !global.importScripts) {
    defer = function (id) {
      global.postMessage(id + '', '*');
    };
    global.addEventListener('message', listener, false);
  // IE8-
  } else if (ONREADYSTATECHANGE in cel('script')) {
    defer = function (id) {
      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function () {
        html.removeChild(this);
        run.call(id);
      };
    };
  // Rest old browsers
  } else {
    defer = function (id) {
      setTimeout(ctx(run, id, 1), 0);
    };
  }
}
module.exports = {
  set: setTask,
  clear: clearTask
};


/***/ }),

/***/ "./node_modules/core-js/modules/_to-absolute-index.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/modules/_to-absolute-index.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__(/*! ./_to-integer */ "./node_modules/core-js/modules/_to-integer.js");
var max = Math.max;
var min = Math.min;
module.exports = function (index, length) {
  index = toInteger(index);
  return index < 0 ? max(index + length, 0) : min(index, length);
};


/***/ }),

/***/ "./node_modules/core-js/modules/_to-index.js":
/*!***************************************************!*\
  !*** ./node_modules/core-js/modules/_to-index.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// https://tc39.github.io/ecma262/#sec-toindex
var toInteger = __webpack_require__(/*! ./_to-integer */ "./node_modules/core-js/modules/_to-integer.js");
var toLength = __webpack_require__(/*! ./_to-length */ "./node_modules/core-js/modules/_to-length.js");
module.exports = function (it) {
  if (it === undefined) return 0;
  var number = toInteger(it);
  var length = toLength(number);
  if (number !== length) throw RangeError('Wrong length!');
  return length;
};


/***/ }),

/***/ "./node_modules/core-js/modules/_to-integer.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/modules/_to-integer.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// 7.1.4 ToInteger
var ceil = Math.ceil;
var floor = Math.floor;
module.exports = function (it) {
  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
};


/***/ }),

/***/ "./node_modules/core-js/modules/_to-iobject.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/modules/_to-iobject.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// to indexed object, toObject with fallback for non-array-like ES3 strings
var IObject = __webpack_require__(/*! ./_iobject */ "./node_modules/core-js/modules/_iobject.js");
var defined = __webpack_require__(/*! ./_defined */ "./node_modules/core-js/modules/_defined.js");
module.exports = function (it) {
  return IObject(defined(it));
};


/***/ }),

/***/ "./node_modules/core-js/modules/_to-length.js":
/*!****************************************************!*\
  !*** ./node_modules/core-js/modules/_to-length.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 7.1.15 ToLength
var toInteger = __webpack_require__(/*! ./_to-integer */ "./node_modules/core-js/modules/_to-integer.js");
var min = Math.min;
module.exports = function (it) {
  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
};


/***/ }),

/***/ "./node_modules/core-js/modules/_to-object.js":
/*!****************************************************!*\
  !*** ./node_modules/core-js/modules/_to-object.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 7.1.13 ToObject(argument)
var defined = __webpack_require__(/*! ./_defined */ "./node_modules/core-js/modules/_defined.js");
module.exports = function (it) {
  return Object(defined(it));
};


/***/ }),

/***/ "./node_modules/core-js/modules/_to-primitive.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/modules/_to-primitive.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 7.1.1 ToPrimitive(input [, PreferredType])
var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/modules/_is-object.js");
// instead of the ES6 spec version, we didn't implement @@toPrimitive case
// and the second argument - flag - preferred type is a string
module.exports = function (it, S) {
  if (!isObject(it)) return it;
  var fn, val;
  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;
  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  throw TypeError("Can't convert object to primitive value");
};


/***/ }),

/***/ "./node_modules/core-js/modules/_typed-array.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/modules/_typed-array.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

if (__webpack_require__(/*! ./_descriptors */ "./node_modules/core-js/modules/_descriptors.js")) {
  var LIBRARY = __webpack_require__(/*! ./_library */ "./node_modules/core-js/modules/_library.js");
  var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/modules/_global.js");
  var fails = __webpack_require__(/*! ./_fails */ "./node_modules/core-js/modules/_fails.js");
  var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
  var $typed = __webpack_require__(/*! ./_typed */ "./node_modules/core-js/modules/_typed.js");
  var $buffer = __webpack_require__(/*! ./_typed-buffer */ "./node_modules/core-js/modules/_typed-buffer.js");
  var ctx = __webpack_require__(/*! ./_ctx */ "./node_modules/core-js/modules/_ctx.js");
  var anInstance = __webpack_require__(/*! ./_an-instance */ "./node_modules/core-js/modules/_an-instance.js");
  var propertyDesc = __webpack_require__(/*! ./_property-desc */ "./node_modules/core-js/modules/_property-desc.js");
  var hide = __webpack_require__(/*! ./_hide */ "./node_modules/core-js/modules/_hide.js");
  var redefineAll = __webpack_require__(/*! ./_redefine-all */ "./node_modules/core-js/modules/_redefine-all.js");
  var toInteger = __webpack_require__(/*! ./_to-integer */ "./node_modules/core-js/modules/_to-integer.js");
  var toLength = __webpack_require__(/*! ./_to-length */ "./node_modules/core-js/modules/_to-length.js");
  var toIndex = __webpack_require__(/*! ./_to-index */ "./node_modules/core-js/modules/_to-index.js");
  var toAbsoluteIndex = __webpack_require__(/*! ./_to-absolute-index */ "./node_modules/core-js/modules/_to-absolute-index.js");
  var toPrimitive = __webpack_require__(/*! ./_to-primitive */ "./node_modules/core-js/modules/_to-primitive.js");
  var has = __webpack_require__(/*! ./_has */ "./node_modules/core-js/modules/_has.js");
  var classof = __webpack_require__(/*! ./_classof */ "./node_modules/core-js/modules/_classof.js");
  var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/modules/_is-object.js");
  var toObject = __webpack_require__(/*! ./_to-object */ "./node_modules/core-js/modules/_to-object.js");
  var isArrayIter = __webpack_require__(/*! ./_is-array-iter */ "./node_modules/core-js/modules/_is-array-iter.js");
  var create = __webpack_require__(/*! ./_object-create */ "./node_modules/core-js/modules/_object-create.js");
  var getPrototypeOf = __webpack_require__(/*! ./_object-gpo */ "./node_modules/core-js/modules/_object-gpo.js");
  var gOPN = __webpack_require__(/*! ./_object-gopn */ "./node_modules/core-js/modules/_object-gopn.js").f;
  var getIterFn = __webpack_require__(/*! ./core.get-iterator-method */ "./node_modules/core-js/modules/core.get-iterator-method.js");
  var uid = __webpack_require__(/*! ./_uid */ "./node_modules/core-js/modules/_uid.js");
  var wks = __webpack_require__(/*! ./_wks */ "./node_modules/core-js/modules/_wks.js");
  var createArrayMethod = __webpack_require__(/*! ./_array-methods */ "./node_modules/core-js/modules/_array-methods.js");
  var createArrayIncludes = __webpack_require__(/*! ./_array-includes */ "./node_modules/core-js/modules/_array-includes.js");
  var speciesConstructor = __webpack_require__(/*! ./_species-constructor */ "./node_modules/core-js/modules/_species-constructor.js");
  var ArrayIterators = __webpack_require__(/*! ./es6.array.iterator */ "./node_modules/core-js/modules/es6.array.iterator.js");
  var Iterators = __webpack_require__(/*! ./_iterators */ "./node_modules/core-js/modules/_iterators.js");
  var $iterDetect = __webpack_require__(/*! ./_iter-detect */ "./node_modules/core-js/modules/_iter-detect.js");
  var setSpecies = __webpack_require__(/*! ./_set-species */ "./node_modules/core-js/modules/_set-species.js");
  var arrayFill = __webpack_require__(/*! ./_array-fill */ "./node_modules/core-js/modules/_array-fill.js");
  var arrayCopyWithin = __webpack_require__(/*! ./_array-copy-within */ "./node_modules/core-js/modules/_array-copy-within.js");
  var $DP = __webpack_require__(/*! ./_object-dp */ "./node_modules/core-js/modules/_object-dp.js");
  var $GOPD = __webpack_require__(/*! ./_object-gopd */ "./node_modules/core-js/modules/_object-gopd.js");
  var dP = $DP.f;
  var gOPD = $GOPD.f;
  var RangeError = global.RangeError;
  var TypeError = global.TypeError;
  var Uint8Array = global.Uint8Array;
  var ARRAY_BUFFER = 'ArrayBuffer';
  var SHARED_BUFFER = 'Shared' + ARRAY_BUFFER;
  var BYTES_PER_ELEMENT = 'BYTES_PER_ELEMENT';
  var PROTOTYPE = 'prototype';
  var ArrayProto = Array[PROTOTYPE];
  var $ArrayBuffer = $buffer.ArrayBuffer;
  var $DataView = $buffer.DataView;
  var arrayForEach = createArrayMethod(0);
  var arrayFilter = createArrayMethod(2);
  var arraySome = createArrayMethod(3);
  var arrayEvery = createArrayMethod(4);
  var arrayFind = createArrayMethod(5);
  var arrayFindIndex = createArrayMethod(6);
  var arrayIncludes = createArrayIncludes(true);
  var arrayIndexOf = createArrayIncludes(false);
  var arrayValues = ArrayIterators.values;
  var arrayKeys = ArrayIterators.keys;
  var arrayEntries = ArrayIterators.entries;
  var arrayLastIndexOf = ArrayProto.lastIndexOf;
  var arrayReduce = ArrayProto.reduce;
  var arrayReduceRight = ArrayProto.reduceRight;
  var arrayJoin = ArrayProto.join;
  var arraySort = ArrayProto.sort;
  var arraySlice = ArrayProto.slice;
  var arrayToString = ArrayProto.toString;
  var arrayToLocaleString = ArrayProto.toLocaleString;
  var ITERATOR = wks('iterator');
  var TAG = wks('toStringTag');
  var TYPED_CONSTRUCTOR = uid('typed_constructor');
  var DEF_CONSTRUCTOR = uid('def_constructor');
  var ALL_CONSTRUCTORS = $typed.CONSTR;
  var TYPED_ARRAY = $typed.TYPED;
  var VIEW = $typed.VIEW;
  var WRONG_LENGTH = 'Wrong length!';

  var $map = createArrayMethod(1, function (O, length) {
    return allocate(speciesConstructor(O, O[DEF_CONSTRUCTOR]), length);
  });

  var LITTLE_ENDIAN = fails(function () {
    // eslint-disable-next-line no-undef
    return new Uint8Array(new Uint16Array([1]).buffer)[0] === 1;
  });

  var FORCED_SET = !!Uint8Array && !!Uint8Array[PROTOTYPE].set && fails(function () {
    new Uint8Array(1).set({});
  });

  var toOffset = function (it, BYTES) {
    var offset = toInteger(it);
    if (offset < 0 || offset % BYTES) throw RangeError('Wrong offset!');
    return offset;
  };

  var validate = function (it) {
    if (isObject(it) && TYPED_ARRAY in it) return it;
    throw TypeError(it + ' is not a typed array!');
  };

  var allocate = function (C, length) {
    if (!(isObject(C) && TYPED_CONSTRUCTOR in C)) {
      throw TypeError('It is not a typed array constructor!');
    } return new C(length);
  };

  var speciesFromList = function (O, list) {
    return fromList(speciesConstructor(O, O[DEF_CONSTRUCTOR]), list);
  };

  var fromList = function (C, list) {
    var index = 0;
    var length = list.length;
    var result = allocate(C, length);
    while (length > index) result[index] = list[index++];
    return result;
  };

  var addGetter = function (it, key, internal) {
    dP(it, key, { get: function () { return this._d[internal]; } });
  };

  var $from = function from(source /* , mapfn, thisArg */) {
    var O = toObject(source);
    var aLen = arguments.length;
    var mapfn = aLen > 1 ? arguments[1] : undefined;
    var mapping = mapfn !== undefined;
    var iterFn = getIterFn(O);
    var i, length, values, result, step, iterator;
    if (iterFn != undefined && !isArrayIter(iterFn)) {
      for (iterator = iterFn.call(O), values = [], i = 0; !(step = iterator.next()).done; i++) {
        values.push(step.value);
      } O = values;
    }
    if (mapping && aLen > 2) mapfn = ctx(mapfn, arguments[2], 2);
    for (i = 0, length = toLength(O.length), result = allocate(this, length); length > i; i++) {
      result[i] = mapping ? mapfn(O[i], i) : O[i];
    }
    return result;
  };

  var $of = function of(/* ...items */) {
    var index = 0;
    var length = arguments.length;
    var result = allocate(this, length);
    while (length > index) result[index] = arguments[index++];
    return result;
  };

  // iOS Safari 6.x fails here
  var TO_LOCALE_BUG = !!Uint8Array && fails(function () { arrayToLocaleString.call(new Uint8Array(1)); });

  var $toLocaleString = function toLocaleString() {
    return arrayToLocaleString.apply(TO_LOCALE_BUG ? arraySlice.call(validate(this)) : validate(this), arguments);
  };

  var proto = {
    copyWithin: function copyWithin(target, start /* , end */) {
      return arrayCopyWithin.call(validate(this), target, start, arguments.length > 2 ? arguments[2] : undefined);
    },
    every: function every(callbackfn /* , thisArg */) {
      return arrayEvery(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
    },
    fill: function fill(value /* , start, end */) { // eslint-disable-line no-unused-vars
      return arrayFill.apply(validate(this), arguments);
    },
    filter: function filter(callbackfn /* , thisArg */) {
      return speciesFromList(this, arrayFilter(validate(this), callbackfn,
        arguments.length > 1 ? arguments[1] : undefined));
    },
    find: function find(predicate /* , thisArg */) {
      return arrayFind(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);
    },
    findIndex: function findIndex(predicate /* , thisArg */) {
      return arrayFindIndex(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);
    },
    forEach: function forEach(callbackfn /* , thisArg */) {
      arrayForEach(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
    },
    indexOf: function indexOf(searchElement /* , fromIndex */) {
      return arrayIndexOf(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);
    },
    includes: function includes(searchElement /* , fromIndex */) {
      return arrayIncludes(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);
    },
    join: function join(separator) { // eslint-disable-line no-unused-vars
      return arrayJoin.apply(validate(this), arguments);
    },
    lastIndexOf: function lastIndexOf(searchElement /* , fromIndex */) { // eslint-disable-line no-unused-vars
      return arrayLastIndexOf.apply(validate(this), arguments);
    },
    map: function map(mapfn /* , thisArg */) {
      return $map(validate(this), mapfn, arguments.length > 1 ? arguments[1] : undefined);
    },
    reduce: function reduce(callbackfn /* , initialValue */) { // eslint-disable-line no-unused-vars
      return arrayReduce.apply(validate(this), arguments);
    },
    reduceRight: function reduceRight(callbackfn /* , initialValue */) { // eslint-disable-line no-unused-vars
      return arrayReduceRight.apply(validate(this), arguments);
    },
    reverse: function reverse() {
      var that = this;
      var length = validate(that).length;
      var middle = Math.floor(length / 2);
      var index = 0;
      var value;
      while (index < middle) {
        value = that[index];
        that[index++] = that[--length];
        that[length] = value;
      } return that;
    },
    some: function some(callbackfn /* , thisArg */) {
      return arraySome(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
    },
    sort: function sort(comparefn) {
      return arraySort.call(validate(this), comparefn);
    },
    subarray: function subarray(begin, end) {
      var O = validate(this);
      var length = O.length;
      var $begin = toAbsoluteIndex(begin, length);
      return new (speciesConstructor(O, O[DEF_CONSTRUCTOR]))(
        O.buffer,
        O.byteOffset + $begin * O.BYTES_PER_ELEMENT,
        toLength((end === undefined ? length : toAbsoluteIndex(end, length)) - $begin)
      );
    }
  };

  var $slice = function slice(start, end) {
    return speciesFromList(this, arraySlice.call(validate(this), start, end));
  };

  var $set = function set(arrayLike /* , offset */) {
    validate(this);
    var offset = toOffset(arguments[1], 1);
    var length = this.length;
    var src = toObject(arrayLike);
    var len = toLength(src.length);
    var index = 0;
    if (len + offset > length) throw RangeError(WRONG_LENGTH);
    while (index < len) this[offset + index] = src[index++];
  };

  var $iterators = {
    entries: function entries() {
      return arrayEntries.call(validate(this));
    },
    keys: function keys() {
      return arrayKeys.call(validate(this));
    },
    values: function values() {
      return arrayValues.call(validate(this));
    }
  };

  var isTAIndex = function (target, key) {
    return isObject(target)
      && target[TYPED_ARRAY]
      && typeof key != 'symbol'
      && key in target
      && String(+key) == String(key);
  };
  var $getDesc = function getOwnPropertyDescriptor(target, key) {
    return isTAIndex(target, key = toPrimitive(key, true))
      ? propertyDesc(2, target[key])
      : gOPD(target, key);
  };
  var $setDesc = function defineProperty(target, key, desc) {
    if (isTAIndex(target, key = toPrimitive(key, true))
      && isObject(desc)
      && has(desc, 'value')
      && !has(desc, 'get')
      && !has(desc, 'set')
      // TODO: add validation descriptor w/o calling accessors
      && !desc.configurable
      && (!has(desc, 'writable') || desc.writable)
      && (!has(desc, 'enumerable') || desc.enumerable)
    ) {
      target[key] = desc.value;
      return target;
    } return dP(target, key, desc);
  };

  if (!ALL_CONSTRUCTORS) {
    $GOPD.f = $getDesc;
    $DP.f = $setDesc;
  }

  $export($export.S + $export.F * !ALL_CONSTRUCTORS, 'Object', {
    getOwnPropertyDescriptor: $getDesc,
    defineProperty: $setDesc
  });

  if (fails(function () { arrayToString.call({}); })) {
    arrayToString = arrayToLocaleString = function toString() {
      return arrayJoin.call(this);
    };
  }

  var $TypedArrayPrototype$ = redefineAll({}, proto);
  redefineAll($TypedArrayPrototype$, $iterators);
  hide($TypedArrayPrototype$, ITERATOR, $iterators.values);
  redefineAll($TypedArrayPrototype$, {
    slice: $slice,
    set: $set,
    constructor: function () { /* noop */ },
    toString: arrayToString,
    toLocaleString: $toLocaleString
  });
  addGetter($TypedArrayPrototype$, 'buffer', 'b');
  addGetter($TypedArrayPrototype$, 'byteOffset', 'o');
  addGetter($TypedArrayPrototype$, 'byteLength', 'l');
  addGetter($TypedArrayPrototype$, 'length', 'e');
  dP($TypedArrayPrototype$, TAG, {
    get: function () { return this[TYPED_ARRAY]; }
  });

  // eslint-disable-next-line max-statements
  module.exports = function (KEY, BYTES, wrapper, CLAMPED) {
    CLAMPED = !!CLAMPED;
    var NAME = KEY + (CLAMPED ? 'Clamped' : '') + 'Array';
    var GETTER = 'get' + KEY;
    var SETTER = 'set' + KEY;
    var TypedArray = global[NAME];
    var Base = TypedArray || {};
    var TAC = TypedArray && getPrototypeOf(TypedArray);
    var FORCED = !TypedArray || !$typed.ABV;
    var O = {};
    var TypedArrayPrototype = TypedArray && TypedArray[PROTOTYPE];
    var getter = function (that, index) {
      var data = that._d;
      return data.v[GETTER](index * BYTES + data.o, LITTLE_ENDIAN);
    };
    var setter = function (that, index, value) {
      var data = that._d;
      if (CLAMPED) value = (value = Math.round(value)) < 0 ? 0 : value > 0xff ? 0xff : value & 0xff;
      data.v[SETTER](index * BYTES + data.o, value, LITTLE_ENDIAN);
    };
    var addElement = function (that, index) {
      dP(that, index, {
        get: function () {
          return getter(this, index);
        },
        set: function (value) {
          return setter(this, index, value);
        },
        enumerable: true
      });
    };
    if (FORCED) {
      TypedArray = wrapper(function (that, data, $offset, $length) {
        anInstance(that, TypedArray, NAME, '_d');
        var index = 0;
        var offset = 0;
        var buffer, byteLength, length, klass;
        if (!isObject(data)) {
          length = toIndex(data);
          byteLength = length * BYTES;
          buffer = new $ArrayBuffer(byteLength);
        } else if (data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER) {
          buffer = data;
          offset = toOffset($offset, BYTES);
          var $len = data.byteLength;
          if ($length === undefined) {
            if ($len % BYTES) throw RangeError(WRONG_LENGTH);
            byteLength = $len - offset;
            if (byteLength < 0) throw RangeError(WRONG_LENGTH);
          } else {
            byteLength = toLength($length) * BYTES;
            if (byteLength + offset > $len) throw RangeError(WRONG_LENGTH);
          }
          length = byteLength / BYTES;
        } else if (TYPED_ARRAY in data) {
          return fromList(TypedArray, data);
        } else {
          return $from.call(TypedArray, data);
        }
        hide(that, '_d', {
          b: buffer,
          o: offset,
          l: byteLength,
          e: length,
          v: new $DataView(buffer)
        });
        while (index < length) addElement(that, index++);
      });
      TypedArrayPrototype = TypedArray[PROTOTYPE] = create($TypedArrayPrototype$);
      hide(TypedArrayPrototype, 'constructor', TypedArray);
    } else if (!fails(function () {
      TypedArray(1);
    }) || !fails(function () {
      new TypedArray(-1); // eslint-disable-line no-new
    }) || !$iterDetect(function (iter) {
      new TypedArray(); // eslint-disable-line no-new
      new TypedArray(null); // eslint-disable-line no-new
      new TypedArray(1.5); // eslint-disable-line no-new
      new TypedArray(iter); // eslint-disable-line no-new
    }, true)) {
      TypedArray = wrapper(function (that, data, $offset, $length) {
        anInstance(that, TypedArray, NAME);
        var klass;
        // `ws` module bug, temporarily remove validation length for Uint8Array
        // https://github.com/websockets/ws/pull/645
        if (!isObject(data)) return new Base(toIndex(data));
        if (data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER) {
          return $length !== undefined
            ? new Base(data, toOffset($offset, BYTES), $length)
            : $offset !== undefined
              ? new Base(data, toOffset($offset, BYTES))
              : new Base(data);
        }
        if (TYPED_ARRAY in data) return fromList(TypedArray, data);
        return $from.call(TypedArray, data);
      });
      arrayForEach(TAC !== Function.prototype ? gOPN(Base).concat(gOPN(TAC)) : gOPN(Base), function (key) {
        if (!(key in TypedArray)) hide(TypedArray, key, Base[key]);
      });
      TypedArray[PROTOTYPE] = TypedArrayPrototype;
      if (!LIBRARY) TypedArrayPrototype.constructor = TypedArray;
    }
    var $nativeIterator = TypedArrayPrototype[ITERATOR];
    var CORRECT_ITER_NAME = !!$nativeIterator
      && ($nativeIterator.name == 'values' || $nativeIterator.name == undefined);
    var $iterator = $iterators.values;
    hide(TypedArray, TYPED_CONSTRUCTOR, true);
    hide(TypedArrayPrototype, TYPED_ARRAY, NAME);
    hide(TypedArrayPrototype, VIEW, true);
    hide(TypedArrayPrototype, DEF_CONSTRUCTOR, TypedArray);

    if (CLAMPED ? new TypedArray(1)[TAG] != NAME : !(TAG in TypedArrayPrototype)) {
      dP(TypedArrayPrototype, TAG, {
        get: function () { return NAME; }
      });
    }

    O[NAME] = TypedArray;

    $export($export.G + $export.W + $export.F * (TypedArray != Base), O);

    $export($export.S, NAME, {
      BYTES_PER_ELEMENT: BYTES
    });

    $export($export.S + $export.F * fails(function () { Base.of.call(TypedArray, 1); }), NAME, {
      from: $from,
      of: $of
    });

    if (!(BYTES_PER_ELEMENT in TypedArrayPrototype)) hide(TypedArrayPrototype, BYTES_PER_ELEMENT, BYTES);

    $export($export.P, NAME, proto);

    setSpecies(NAME);

    $export($export.P + $export.F * FORCED_SET, NAME, { set: $set });

    $export($export.P + $export.F * !CORRECT_ITER_NAME, NAME, $iterators);

    if (!LIBRARY && TypedArrayPrototype.toString != arrayToString) TypedArrayPrototype.toString = arrayToString;

    $export($export.P + $export.F * fails(function () {
      new TypedArray(1).slice();
    }), NAME, { slice: $slice });

    $export($export.P + $export.F * (fails(function () {
      return [1, 2].toLocaleString() != new TypedArray([1, 2]).toLocaleString();
    }) || !fails(function () {
      TypedArrayPrototype.toLocaleString.call([1, 2]);
    })), NAME, { toLocaleString: $toLocaleString });

    Iterators[NAME] = CORRECT_ITER_NAME ? $nativeIterator : $iterator;
    if (!LIBRARY && !CORRECT_ITER_NAME) hide(TypedArrayPrototype, ITERATOR, $iterator);
  };
} else module.exports = function () { /* empty */ };


/***/ }),

/***/ "./node_modules/core-js/modules/_typed-buffer.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/modules/_typed-buffer.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/modules/_global.js");
var DESCRIPTORS = __webpack_require__(/*! ./_descriptors */ "./node_modules/core-js/modules/_descriptors.js");
var LIBRARY = __webpack_require__(/*! ./_library */ "./node_modules/core-js/modules/_library.js");
var $typed = __webpack_require__(/*! ./_typed */ "./node_modules/core-js/modules/_typed.js");
var hide = __webpack_require__(/*! ./_hide */ "./node_modules/core-js/modules/_hide.js");
var redefineAll = __webpack_require__(/*! ./_redefine-all */ "./node_modules/core-js/modules/_redefine-all.js");
var fails = __webpack_require__(/*! ./_fails */ "./node_modules/core-js/modules/_fails.js");
var anInstance = __webpack_require__(/*! ./_an-instance */ "./node_modules/core-js/modules/_an-instance.js");
var toInteger = __webpack_require__(/*! ./_to-integer */ "./node_modules/core-js/modules/_to-integer.js");
var toLength = __webpack_require__(/*! ./_to-length */ "./node_modules/core-js/modules/_to-length.js");
var toIndex = __webpack_require__(/*! ./_to-index */ "./node_modules/core-js/modules/_to-index.js");
var gOPN = __webpack_require__(/*! ./_object-gopn */ "./node_modules/core-js/modules/_object-gopn.js").f;
var dP = __webpack_require__(/*! ./_object-dp */ "./node_modules/core-js/modules/_object-dp.js").f;
var arrayFill = __webpack_require__(/*! ./_array-fill */ "./node_modules/core-js/modules/_array-fill.js");
var setToStringTag = __webpack_require__(/*! ./_set-to-string-tag */ "./node_modules/core-js/modules/_set-to-string-tag.js");
var ARRAY_BUFFER = 'ArrayBuffer';
var DATA_VIEW = 'DataView';
var PROTOTYPE = 'prototype';
var WRONG_LENGTH = 'Wrong length!';
var WRONG_INDEX = 'Wrong index!';
var $ArrayBuffer = global[ARRAY_BUFFER];
var $DataView = global[DATA_VIEW];
var Math = global.Math;
var RangeError = global.RangeError;
// eslint-disable-next-line no-shadow-restricted-names
var Infinity = global.Infinity;
var BaseBuffer = $ArrayBuffer;
var abs = Math.abs;
var pow = Math.pow;
var floor = Math.floor;
var log = Math.log;
var LN2 = Math.LN2;
var BUFFER = 'buffer';
var BYTE_LENGTH = 'byteLength';
var BYTE_OFFSET = 'byteOffset';
var $BUFFER = DESCRIPTORS ? '_b' : BUFFER;
var $LENGTH = DESCRIPTORS ? '_l' : BYTE_LENGTH;
var $OFFSET = DESCRIPTORS ? '_o' : BYTE_OFFSET;

// IEEE754 conversions based on https://github.com/feross/ieee754
function packIEEE754(value, mLen, nBytes) {
  var buffer = new Array(nBytes);
  var eLen = nBytes * 8 - mLen - 1;
  var eMax = (1 << eLen) - 1;
  var eBias = eMax >> 1;
  var rt = mLen === 23 ? pow(2, -24) - pow(2, -77) : 0;
  var i = 0;
  var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;
  var e, m, c;
  value = abs(value);
  // eslint-disable-next-line no-self-compare
  if (value != value || value === Infinity) {
    // eslint-disable-next-line no-self-compare
    m = value != value ? 1 : 0;
    e = eMax;
  } else {
    e = floor(log(value) / LN2);
    if (value * (c = pow(2, -e)) < 1) {
      e--;
      c *= 2;
    }
    if (e + eBias >= 1) {
      value += rt / c;
    } else {
      value += rt * pow(2, 1 - eBias);
    }
    if (value * c >= 2) {
      e++;
      c /= 2;
    }
    if (e + eBias >= eMax) {
      m = 0;
      e = eMax;
    } else if (e + eBias >= 1) {
      m = (value * c - 1) * pow(2, mLen);
      e = e + eBias;
    } else {
      m = value * pow(2, eBias - 1) * pow(2, mLen);
      e = 0;
    }
  }
  for (; mLen >= 8; buffer[i++] = m & 255, m /= 256, mLen -= 8);
  e = e << mLen | m;
  eLen += mLen;
  for (; eLen > 0; buffer[i++] = e & 255, e /= 256, eLen -= 8);
  buffer[--i] |= s * 128;
  return buffer;
}
function unpackIEEE754(buffer, mLen, nBytes) {
  var eLen = nBytes * 8 - mLen - 1;
  var eMax = (1 << eLen) - 1;
  var eBias = eMax >> 1;
  var nBits = eLen - 7;
  var i = nBytes - 1;
  var s = buffer[i--];
  var e = s & 127;
  var m;
  s >>= 7;
  for (; nBits > 0; e = e * 256 + buffer[i], i--, nBits -= 8);
  m = e & (1 << -nBits) - 1;
  e >>= -nBits;
  nBits += mLen;
  for (; nBits > 0; m = m * 256 + buffer[i], i--, nBits -= 8);
  if (e === 0) {
    e = 1 - eBias;
  } else if (e === eMax) {
    return m ? NaN : s ? -Infinity : Infinity;
  } else {
    m = m + pow(2, mLen);
    e = e - eBias;
  } return (s ? -1 : 1) * m * pow(2, e - mLen);
}

function unpackI32(bytes) {
  return bytes[3] << 24 | bytes[2] << 16 | bytes[1] << 8 | bytes[0];
}
function packI8(it) {
  return [it & 0xff];
}
function packI16(it) {
  return [it & 0xff, it >> 8 & 0xff];
}
function packI32(it) {
  return [it & 0xff, it >> 8 & 0xff, it >> 16 & 0xff, it >> 24 & 0xff];
}
function packF64(it) {
  return packIEEE754(it, 52, 8);
}
function packF32(it) {
  return packIEEE754(it, 23, 4);
}

function addGetter(C, key, internal) {
  dP(C[PROTOTYPE], key, { get: function () { return this[internal]; } });
}

function get(view, bytes, index, isLittleEndian) {
  var numIndex = +index;
  var intIndex = toIndex(numIndex);
  if (intIndex + bytes > view[$LENGTH]) throw RangeError(WRONG_INDEX);
  var store = view[$BUFFER]._b;
  var start = intIndex + view[$OFFSET];
  var pack = store.slice(start, start + bytes);
  return isLittleEndian ? pack : pack.reverse();
}
function set(view, bytes, index, conversion, value, isLittleEndian) {
  var numIndex = +index;
  var intIndex = toIndex(numIndex);
  if (intIndex + bytes > view[$LENGTH]) throw RangeError(WRONG_INDEX);
  var store = view[$BUFFER]._b;
  var start = intIndex + view[$OFFSET];
  var pack = conversion(+value);
  for (var i = 0; i < bytes; i++) store[start + i] = pack[isLittleEndian ? i : bytes - i - 1];
}

if (!$typed.ABV) {
  $ArrayBuffer = function ArrayBuffer(length) {
    anInstance(this, $ArrayBuffer, ARRAY_BUFFER);
    var byteLength = toIndex(length);
    this._b = arrayFill.call(new Array(byteLength), 0);
    this[$LENGTH] = byteLength;
  };

  $DataView = function DataView(buffer, byteOffset, byteLength) {
    anInstance(this, $DataView, DATA_VIEW);
    anInstance(buffer, $ArrayBuffer, DATA_VIEW);
    var bufferLength = buffer[$LENGTH];
    var offset = toInteger(byteOffset);
    if (offset < 0 || offset > bufferLength) throw RangeError('Wrong offset!');
    byteLength = byteLength === undefined ? bufferLength - offset : toLength(byteLength);
    if (offset + byteLength > bufferLength) throw RangeError(WRONG_LENGTH);
    this[$BUFFER] = buffer;
    this[$OFFSET] = offset;
    this[$LENGTH] = byteLength;
  };

  if (DESCRIPTORS) {
    addGetter($ArrayBuffer, BYTE_LENGTH, '_l');
    addGetter($DataView, BUFFER, '_b');
    addGetter($DataView, BYTE_LENGTH, '_l');
    addGetter($DataView, BYTE_OFFSET, '_o');
  }

  redefineAll($DataView[PROTOTYPE], {
    getInt8: function getInt8(byteOffset) {
      return get(this, 1, byteOffset)[0] << 24 >> 24;
    },
    getUint8: function getUint8(byteOffset) {
      return get(this, 1, byteOffset)[0];
    },
    getInt16: function getInt16(byteOffset /* , littleEndian */) {
      var bytes = get(this, 2, byteOffset, arguments[1]);
      return (bytes[1] << 8 | bytes[0]) << 16 >> 16;
    },
    getUint16: function getUint16(byteOffset /* , littleEndian */) {
      var bytes = get(this, 2, byteOffset, arguments[1]);
      return bytes[1] << 8 | bytes[0];
    },
    getInt32: function getInt32(byteOffset /* , littleEndian */) {
      return unpackI32(get(this, 4, byteOffset, arguments[1]));
    },
    getUint32: function getUint32(byteOffset /* , littleEndian */) {
      return unpackI32(get(this, 4, byteOffset, arguments[1])) >>> 0;
    },
    getFloat32: function getFloat32(byteOffset /* , littleEndian */) {
      return unpackIEEE754(get(this, 4, byteOffset, arguments[1]), 23, 4);
    },
    getFloat64: function getFloat64(byteOffset /* , littleEndian */) {
      return unpackIEEE754(get(this, 8, byteOffset, arguments[1]), 52, 8);
    },
    setInt8: function setInt8(byteOffset, value) {
      set(this, 1, byteOffset, packI8, value);
    },
    setUint8: function setUint8(byteOffset, value) {
      set(this, 1, byteOffset, packI8, value);
    },
    setInt16: function setInt16(byteOffset, value /* , littleEndian */) {
      set(this, 2, byteOffset, packI16, value, arguments[2]);
    },
    setUint16: function setUint16(byteOffset, value /* , littleEndian */) {
      set(this, 2, byteOffset, packI16, value, arguments[2]);
    },
    setInt32: function setInt32(byteOffset, value /* , littleEndian */) {
      set(this, 4, byteOffset, packI32, value, arguments[2]);
    },
    setUint32: function setUint32(byteOffset, value /* , littleEndian */) {
      set(this, 4, byteOffset, packI32, value, arguments[2]);
    },
    setFloat32: function setFloat32(byteOffset, value /* , littleEndian */) {
      set(this, 4, byteOffset, packF32, value, arguments[2]);
    },
    setFloat64: function setFloat64(byteOffset, value /* , littleEndian */) {
      set(this, 8, byteOffset, packF64, value, arguments[2]);
    }
  });
} else {
  if (!fails(function () {
    $ArrayBuffer(1);
  }) || !fails(function () {
    new $ArrayBuffer(-1); // eslint-disable-line no-new
  }) || fails(function () {
    new $ArrayBuffer(); // eslint-disable-line no-new
    new $ArrayBuffer(1.5); // eslint-disable-line no-new
    new $ArrayBuffer(NaN); // eslint-disable-line no-new
    return $ArrayBuffer.name != ARRAY_BUFFER;
  })) {
    $ArrayBuffer = function ArrayBuffer(length) {
      anInstance(this, $ArrayBuffer);
      return new BaseBuffer(toIndex(length));
    };
    var ArrayBufferProto = $ArrayBuffer[PROTOTYPE] = BaseBuffer[PROTOTYPE];
    for (var keys = gOPN(BaseBuffer), j = 0, key; keys.length > j;) {
      if (!((key = keys[j++]) in $ArrayBuffer)) hide($ArrayBuffer, key, BaseBuffer[key]);
    }
    if (!LIBRARY) ArrayBufferProto.constructor = $ArrayBuffer;
  }
  // iOS Safari 7.x bug
  var view = new $DataView(new $ArrayBuffer(2));
  var $setInt8 = $DataView[PROTOTYPE].setInt8;
  view.setInt8(0, 2147483648);
  view.setInt8(1, 2147483649);
  if (view.getInt8(0) || !view.getInt8(1)) redefineAll($DataView[PROTOTYPE], {
    setInt8: function setInt8(byteOffset, value) {
      $setInt8.call(this, byteOffset, value << 24 >> 24);
    },
    setUint8: function setUint8(byteOffset, value) {
      $setInt8.call(this, byteOffset, value << 24 >> 24);
    }
  }, true);
}
setToStringTag($ArrayBuffer, ARRAY_BUFFER);
setToStringTag($DataView, DATA_VIEW);
hide($DataView[PROTOTYPE], $typed.VIEW, true);
exports[ARRAY_BUFFER] = $ArrayBuffer;
exports[DATA_VIEW] = $DataView;


/***/ }),

/***/ "./node_modules/core-js/modules/_typed.js":
/*!************************************************!*\
  !*** ./node_modules/core-js/modules/_typed.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/modules/_global.js");
var hide = __webpack_require__(/*! ./_hide */ "./node_modules/core-js/modules/_hide.js");
var uid = __webpack_require__(/*! ./_uid */ "./node_modules/core-js/modules/_uid.js");
var TYPED = uid('typed_array');
var VIEW = uid('view');
var ABV = !!(global.ArrayBuffer && global.DataView);
var CONSTR = ABV;
var i = 0;
var l = 9;
var Typed;

var TypedArrayConstructors = (
  'Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array'
).split(',');

while (i < l) {
  if (Typed = global[TypedArrayConstructors[i++]]) {
    hide(Typed.prototype, TYPED, true);
    hide(Typed.prototype, VIEW, true);
  } else CONSTR = false;
}

module.exports = {
  ABV: ABV,
  CONSTR: CONSTR,
  TYPED: TYPED,
  VIEW: VIEW
};


/***/ }),

/***/ "./node_modules/core-js/modules/_uid.js":
/*!**********************************************!*\
  !*** ./node_modules/core-js/modules/_uid.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

var id = 0;
var px = Math.random();
module.exports = function (key) {
  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
};


/***/ }),

/***/ "./node_modules/core-js/modules/_user-agent.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/modules/_user-agent.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/modules/_global.js");
var navigator = global.navigator;

module.exports = navigator && navigator.userAgent || '';


/***/ }),

/***/ "./node_modules/core-js/modules/_validate-collection.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/modules/_validate-collection.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/modules/_is-object.js");
module.exports = function (it, TYPE) {
  if (!isObject(it) || it._t !== TYPE) throw TypeError('Incompatible receiver, ' + TYPE + ' required!');
  return it;
};


/***/ }),

/***/ "./node_modules/core-js/modules/_wks-define.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/modules/_wks-define.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/modules/_global.js");
var core = __webpack_require__(/*! ./_core */ "./node_modules/core-js/modules/_core.js");
var LIBRARY = __webpack_require__(/*! ./_library */ "./node_modules/core-js/modules/_library.js");
var wksExt = __webpack_require__(/*! ./_wks-ext */ "./node_modules/core-js/modules/_wks-ext.js");
var defineProperty = __webpack_require__(/*! ./_object-dp */ "./node_modules/core-js/modules/_object-dp.js").f;
module.exports = function (name) {
  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});
  if (name.charAt(0) != '_' && !(name in $Symbol)) defineProperty($Symbol, name, { value: wksExt.f(name) });
};


/***/ }),

/***/ "./node_modules/core-js/modules/_wks-ext.js":
/*!**************************************************!*\
  !*** ./node_modules/core-js/modules/_wks-ext.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports.f = __webpack_require__(/*! ./_wks */ "./node_modules/core-js/modules/_wks.js");


/***/ }),

/***/ "./node_modules/core-js/modules/_wks.js":
/*!**********************************************!*\
  !*** ./node_modules/core-js/modules/_wks.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var store = __webpack_require__(/*! ./_shared */ "./node_modules/core-js/modules/_shared.js")('wks');
var uid = __webpack_require__(/*! ./_uid */ "./node_modules/core-js/modules/_uid.js");
var Symbol = __webpack_require__(/*! ./_global */ "./node_modules/core-js/modules/_global.js").Symbol;
var USE_SYMBOL = typeof Symbol == 'function';

var $exports = module.exports = function (name) {
  return store[name] || (store[name] =
    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));
};

$exports.store = store;


/***/ }),

/***/ "./node_modules/core-js/modules/core.get-iterator-method.js":
/*!******************************************************************!*\
  !*** ./node_modules/core-js/modules/core.get-iterator-method.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var classof = __webpack_require__(/*! ./_classof */ "./node_modules/core-js/modules/_classof.js");
var ITERATOR = __webpack_require__(/*! ./_wks */ "./node_modules/core-js/modules/_wks.js")('iterator');
var Iterators = __webpack_require__(/*! ./_iterators */ "./node_modules/core-js/modules/_iterators.js");
module.exports = __webpack_require__(/*! ./_core */ "./node_modules/core-js/modules/_core.js").getIteratorMethod = function (it) {
  if (it != undefined) return it[ITERATOR]
    || it['@@iterator']
    || Iterators[classof(it)];
};


/***/ }),

/***/ "./node_modules/core-js/modules/es6.array.fill.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.array.fill.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");

$export($export.P, 'Array', { fill: __webpack_require__(/*! ./_array-fill */ "./node_modules/core-js/modules/_array-fill.js") });

__webpack_require__(/*! ./_add-to-unscopables */ "./node_modules/core-js/modules/_add-to-unscopables.js")('fill');


/***/ }),

/***/ "./node_modules/core-js/modules/es6.array.from.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.array.from.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var ctx = __webpack_require__(/*! ./_ctx */ "./node_modules/core-js/modules/_ctx.js");
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
var toObject = __webpack_require__(/*! ./_to-object */ "./node_modules/core-js/modules/_to-object.js");
var call = __webpack_require__(/*! ./_iter-call */ "./node_modules/core-js/modules/_iter-call.js");
var isArrayIter = __webpack_require__(/*! ./_is-array-iter */ "./node_modules/core-js/modules/_is-array-iter.js");
var toLength = __webpack_require__(/*! ./_to-length */ "./node_modules/core-js/modules/_to-length.js");
var createProperty = __webpack_require__(/*! ./_create-property */ "./node_modules/core-js/modules/_create-property.js");
var getIterFn = __webpack_require__(/*! ./core.get-iterator-method */ "./node_modules/core-js/modules/core.get-iterator-method.js");

$export($export.S + $export.F * !__webpack_require__(/*! ./_iter-detect */ "./node_modules/core-js/modules/_iter-detect.js")(function (iter) { Array.from(iter); }), 'Array', {
  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)
  from: function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {
    var O = toObject(arrayLike);
    var C = typeof this == 'function' ? this : Array;
    var aLen = arguments.length;
    var mapfn = aLen > 1 ? arguments[1] : undefined;
    var mapping = mapfn !== undefined;
    var index = 0;
    var iterFn = getIterFn(O);
    var length, result, step, iterator;
    if (mapping) mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);
    // if object isn't iterable or it's array with default iterator - use simple case
    if (iterFn != undefined && !(C == Array && isArrayIter(iterFn))) {
      for (iterator = iterFn.call(O), result = new C(); !(step = iterator.next()).done; index++) {
        createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);
      }
    } else {
      length = toLength(O.length);
      for (result = new C(length); length > index; index++) {
        createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);
      }
    }
    result.length = index;
    return result;
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.array.iterator.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.array.iterator.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var addToUnscopables = __webpack_require__(/*! ./_add-to-unscopables */ "./node_modules/core-js/modules/_add-to-unscopables.js");
var step = __webpack_require__(/*! ./_iter-step */ "./node_modules/core-js/modules/_iter-step.js");
var Iterators = __webpack_require__(/*! ./_iterators */ "./node_modules/core-js/modules/_iterators.js");
var toIObject = __webpack_require__(/*! ./_to-iobject */ "./node_modules/core-js/modules/_to-iobject.js");

// 22.1.3.4 Array.prototype.entries()
// 22.1.3.13 Array.prototype.keys()
// 22.1.3.29 Array.prototype.values()
// 22.1.3.30 Array.prototype[@@iterator]()
module.exports = __webpack_require__(/*! ./_iter-define */ "./node_modules/core-js/modules/_iter-define.js")(Array, 'Array', function (iterated, kind) {
  this._t = toIObject(iterated); // target
  this._i = 0;                   // next index
  this._k = kind;                // kind
// 22.1.5.2.1 %ArrayIteratorPrototype%.next()
}, function () {
  var O = this._t;
  var kind = this._k;
  var index = this._i++;
  if (!O || index >= O.length) {
    this._t = undefined;
    return step(1);
  }
  if (kind == 'keys') return step(0, index);
  if (kind == 'values') return step(0, O[index]);
  return step(0, [index, O[index]]);
}, 'values');

// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)
Iterators.Arguments = Iterators.Array;

addToUnscopables('keys');
addToUnscopables('values');
addToUnscopables('entries');


/***/ }),

/***/ "./node_modules/core-js/modules/es6.array.sort.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.array.sort.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
var aFunction = __webpack_require__(/*! ./_a-function */ "./node_modules/core-js/modules/_a-function.js");
var toObject = __webpack_require__(/*! ./_to-object */ "./node_modules/core-js/modules/_to-object.js");
var fails = __webpack_require__(/*! ./_fails */ "./node_modules/core-js/modules/_fails.js");
var $sort = [].sort;
var test = [1, 2, 3];

$export($export.P + $export.F * (fails(function () {
  // IE8-
  test.sort(undefined);
}) || !fails(function () {
  // V8 bug
  test.sort(null);
  // Old WebKit
}) || !__webpack_require__(/*! ./_strict-method */ "./node_modules/core-js/modules/_strict-method.js")($sort)), 'Array', {
  // 22.1.3.25 Array.prototype.sort(comparefn)
  sort: function sort(comparefn) {
    return comparefn === undefined
      ? $sort.call(toObject(this))
      : $sort.call(toObject(this), aFunction(comparefn));
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.map.js":
/*!*************************************************!*\
  !*** ./node_modules/core-js/modules/es6.map.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var strong = __webpack_require__(/*! ./_collection-strong */ "./node_modules/core-js/modules/_collection-strong.js");
var validate = __webpack_require__(/*! ./_validate-collection */ "./node_modules/core-js/modules/_validate-collection.js");
var MAP = 'Map';

// 23.1 Map Objects
module.exports = __webpack_require__(/*! ./_collection */ "./node_modules/core-js/modules/_collection.js")(MAP, function (get) {
  return function Map() { return get(this, arguments.length > 0 ? arguments[0] : undefined); };
}, {
  // 23.1.3.6 Map.prototype.get(key)
  get: function get(key) {
    var entry = strong.getEntry(validate(this, MAP), key);
    return entry && entry.v;
  },
  // 23.1.3.9 Map.prototype.set(key, value)
  set: function set(key, value) {
    return strong.def(validate(this, MAP), key === 0 ? 0 : key, value);
  }
}, strong, true);


/***/ }),

/***/ "./node_modules/core-js/modules/es6.object.assign.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.object.assign.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.3.1 Object.assign(target, source)
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");

$export($export.S + $export.F, 'Object', { assign: __webpack_require__(/*! ./_object-assign */ "./node_modules/core-js/modules/_object-assign.js") });


/***/ }),

/***/ "./node_modules/core-js/modules/es6.promise.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/modules/es6.promise.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var LIBRARY = __webpack_require__(/*! ./_library */ "./node_modules/core-js/modules/_library.js");
var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/modules/_global.js");
var ctx = __webpack_require__(/*! ./_ctx */ "./node_modules/core-js/modules/_ctx.js");
var classof = __webpack_require__(/*! ./_classof */ "./node_modules/core-js/modules/_classof.js");
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/modules/_is-object.js");
var aFunction = __webpack_require__(/*! ./_a-function */ "./node_modules/core-js/modules/_a-function.js");
var anInstance = __webpack_require__(/*! ./_an-instance */ "./node_modules/core-js/modules/_an-instance.js");
var forOf = __webpack_require__(/*! ./_for-of */ "./node_modules/core-js/modules/_for-of.js");
var speciesConstructor = __webpack_require__(/*! ./_species-constructor */ "./node_modules/core-js/modules/_species-constructor.js");
var task = __webpack_require__(/*! ./_task */ "./node_modules/core-js/modules/_task.js").set;
var microtask = __webpack_require__(/*! ./_microtask */ "./node_modules/core-js/modules/_microtask.js")();
var newPromiseCapabilityModule = __webpack_require__(/*! ./_new-promise-capability */ "./node_modules/core-js/modules/_new-promise-capability.js");
var perform = __webpack_require__(/*! ./_perform */ "./node_modules/core-js/modules/_perform.js");
var userAgent = __webpack_require__(/*! ./_user-agent */ "./node_modules/core-js/modules/_user-agent.js");
var promiseResolve = __webpack_require__(/*! ./_promise-resolve */ "./node_modules/core-js/modules/_promise-resolve.js");
var PROMISE = 'Promise';
var TypeError = global.TypeError;
var process = global.process;
var versions = process && process.versions;
var v8 = versions && versions.v8 || '';
var $Promise = global[PROMISE];
var isNode = classof(process) == 'process';
var empty = function () { /* empty */ };
var Internal, newGenericPromiseCapability, OwnPromiseCapability, Wrapper;
var newPromiseCapability = newGenericPromiseCapability = newPromiseCapabilityModule.f;

var USE_NATIVE = !!function () {
  try {
    // correct subclassing with @@species support
    var promise = $Promise.resolve(1);
    var FakePromise = (promise.constructor = {})[__webpack_require__(/*! ./_wks */ "./node_modules/core-js/modules/_wks.js")('species')] = function (exec) {
      exec(empty, empty);
    };
    // unhandled rejections tracking support, NodeJS Promise without it fails @@species test
    return (isNode || typeof PromiseRejectionEvent == 'function')
      && promise.then(empty) instanceof FakePromise
      // v8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables
      // https://bugs.chromium.org/p/chromium/issues/detail?id=830565
      // we can't detect it synchronously, so just check versions
      && v8.indexOf('6.6') !== 0
      && userAgent.indexOf('Chrome/66') === -1;
  } catch (e) { /* empty */ }
}();

// helpers
var isThenable = function (it) {
  var then;
  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;
};
var notify = function (promise, isReject) {
  if (promise._n) return;
  promise._n = true;
  var chain = promise._c;
  microtask(function () {
    var value = promise._v;
    var ok = promise._s == 1;
    var i = 0;
    var run = function (reaction) {
      var handler = ok ? reaction.ok : reaction.fail;
      var resolve = reaction.resolve;
      var reject = reaction.reject;
      var domain = reaction.domain;
      var result, then, exited;
      try {
        if (handler) {
          if (!ok) {
            if (promise._h == 2) onHandleUnhandled(promise);
            promise._h = 1;
          }
          if (handler === true) result = value;
          else {
            if (domain) domain.enter();
            result = handler(value); // may throw
            if (domain) {
              domain.exit();
              exited = true;
            }
          }
          if (result === reaction.promise) {
            reject(TypeError('Promise-chain cycle'));
          } else if (then = isThenable(result)) {
            then.call(result, resolve, reject);
          } else resolve(result);
        } else reject(value);
      } catch (e) {
        if (domain && !exited) domain.exit();
        reject(e);
      }
    };
    while (chain.length > i) run(chain[i++]); // variable length - can't use forEach
    promise._c = [];
    promise._n = false;
    if (isReject && !promise._h) onUnhandled(promise);
  });
};
var onUnhandled = function (promise) {
  task.call(global, function () {
    var value = promise._v;
    var unhandled = isUnhandled(promise);
    var result, handler, console;
    if (unhandled) {
      result = perform(function () {
        if (isNode) {
          process.emit('unhandledRejection', value, promise);
        } else if (handler = global.onunhandledrejection) {
          handler({ promise: promise, reason: value });
        } else if ((console = global.console) && console.error) {
          console.error('Unhandled promise rejection', value);
        }
      });
      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should
      promise._h = isNode || isUnhandled(promise) ? 2 : 1;
    } promise._a = undefined;
    if (unhandled && result.e) throw result.v;
  });
};
var isUnhandled = function (promise) {
  return promise._h !== 1 && (promise._a || promise._c).length === 0;
};
var onHandleUnhandled = function (promise) {
  task.call(global, function () {
    var handler;
    if (isNode) {
      process.emit('rejectionHandled', promise);
    } else if (handler = global.onrejectionhandled) {
      handler({ promise: promise, reason: promise._v });
    }
  });
};
var $reject = function (value) {
  var promise = this;
  if (promise._d) return;
  promise._d = true;
  promise = promise._w || promise; // unwrap
  promise._v = value;
  promise._s = 2;
  if (!promise._a) promise._a = promise._c.slice();
  notify(promise, true);
};
var $resolve = function (value) {
  var promise = this;
  var then;
  if (promise._d) return;
  promise._d = true;
  promise = promise._w || promise; // unwrap
  try {
    if (promise === value) throw TypeError("Promise can't be resolved itself");
    if (then = isThenable(value)) {
      microtask(function () {
        var wrapper = { _w: promise, _d: false }; // wrap
        try {
          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));
        } catch (e) {
          $reject.call(wrapper, e);
        }
      });
    } else {
      promise._v = value;
      promise._s = 1;
      notify(promise, false);
    }
  } catch (e) {
    $reject.call({ _w: promise, _d: false }, e); // wrap
  }
};

// constructor polyfill
if (!USE_NATIVE) {
  // 25.4.3.1 Promise(executor)
  $Promise = function Promise(executor) {
    anInstance(this, $Promise, PROMISE, '_h');
    aFunction(executor);
    Internal.call(this);
    try {
      executor(ctx($resolve, this, 1), ctx($reject, this, 1));
    } catch (err) {
      $reject.call(this, err);
    }
  };
  // eslint-disable-next-line no-unused-vars
  Internal = function Promise(executor) {
    this._c = [];             // <- awaiting reactions
    this._a = undefined;      // <- checked in isUnhandled reactions
    this._s = 0;              // <- state
    this._d = false;          // <- done
    this._v = undefined;      // <- value
    this._h = 0;              // <- rejection state, 0 - default, 1 - handled, 2 - unhandled
    this._n = false;          // <- notify
  };
  Internal.prototype = __webpack_require__(/*! ./_redefine-all */ "./node_modules/core-js/modules/_redefine-all.js")($Promise.prototype, {
    // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)
    then: function then(onFulfilled, onRejected) {
      var reaction = newPromiseCapability(speciesConstructor(this, $Promise));
      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;
      reaction.fail = typeof onRejected == 'function' && onRejected;
      reaction.domain = isNode ? process.domain : undefined;
      this._c.push(reaction);
      if (this._a) this._a.push(reaction);
      if (this._s) notify(this, false);
      return reaction.promise;
    },
    // 25.4.5.1 Promise.prototype.catch(onRejected)
    'catch': function (onRejected) {
      return this.then(undefined, onRejected);
    }
  });
  OwnPromiseCapability = function () {
    var promise = new Internal();
    this.promise = promise;
    this.resolve = ctx($resolve, promise, 1);
    this.reject = ctx($reject, promise, 1);
  };
  newPromiseCapabilityModule.f = newPromiseCapability = function (C) {
    return C === $Promise || C === Wrapper
      ? new OwnPromiseCapability(C)
      : newGenericPromiseCapability(C);
  };
}

$export($export.G + $export.W + $export.F * !USE_NATIVE, { Promise: $Promise });
__webpack_require__(/*! ./_set-to-string-tag */ "./node_modules/core-js/modules/_set-to-string-tag.js")($Promise, PROMISE);
__webpack_require__(/*! ./_set-species */ "./node_modules/core-js/modules/_set-species.js")(PROMISE);
Wrapper = __webpack_require__(/*! ./_core */ "./node_modules/core-js/modules/_core.js")[PROMISE];

// statics
$export($export.S + $export.F * !USE_NATIVE, PROMISE, {
  // 25.4.4.5 Promise.reject(r)
  reject: function reject(r) {
    var capability = newPromiseCapability(this);
    var $$reject = capability.reject;
    $$reject(r);
    return capability.promise;
  }
});
$export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {
  // 25.4.4.6 Promise.resolve(x)
  resolve: function resolve(x) {
    return promiseResolve(LIBRARY && this === Wrapper ? $Promise : this, x);
  }
});
$export($export.S + $export.F * !(USE_NATIVE && __webpack_require__(/*! ./_iter-detect */ "./node_modules/core-js/modules/_iter-detect.js")(function (iter) {
  $Promise.all(iter)['catch'](empty);
})), PROMISE, {
  // 25.4.4.1 Promise.all(iterable)
  all: function all(iterable) {
    var C = this;
    var capability = newPromiseCapability(C);
    var resolve = capability.resolve;
    var reject = capability.reject;
    var result = perform(function () {
      var values = [];
      var index = 0;
      var remaining = 1;
      forOf(iterable, false, function (promise) {
        var $index = index++;
        var alreadyCalled = false;
        values.push(undefined);
        remaining++;
        C.resolve(promise).then(function (value) {
          if (alreadyCalled) return;
          alreadyCalled = true;
          values[$index] = value;
          --remaining || resolve(values);
        }, reject);
      });
      --remaining || resolve(values);
    });
    if (result.e) reject(result.v);
    return capability.promise;
  },
  // 25.4.4.4 Promise.race(iterable)
  race: function race(iterable) {
    var C = this;
    var capability = newPromiseCapability(C);
    var reject = capability.reject;
    var result = perform(function () {
      forOf(iterable, false, function (promise) {
        C.resolve(promise).then(capability.resolve, reject);
      });
    });
    if (result.e) reject(result.v);
    return capability.promise;
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.reflect.construct.js":
/*!***************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.reflect.construct.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 26.1.2 Reflect.construct(target, argumentsList [, newTarget])
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
var create = __webpack_require__(/*! ./_object-create */ "./node_modules/core-js/modules/_object-create.js");
var aFunction = __webpack_require__(/*! ./_a-function */ "./node_modules/core-js/modules/_a-function.js");
var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/modules/_an-object.js");
var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/modules/_is-object.js");
var fails = __webpack_require__(/*! ./_fails */ "./node_modules/core-js/modules/_fails.js");
var bind = __webpack_require__(/*! ./_bind */ "./node_modules/core-js/modules/_bind.js");
var rConstruct = (__webpack_require__(/*! ./_global */ "./node_modules/core-js/modules/_global.js").Reflect || {}).construct;

// MS Edge supports only 2 arguments and argumentsList argument is optional
// FF Nightly sets third argument as `new.target`, but does not create `this` from it
var NEW_TARGET_BUG = fails(function () {
  function F() { /* empty */ }
  return !(rConstruct(function () { /* empty */ }, [], F) instanceof F);
});
var ARGS_BUG = !fails(function () {
  rConstruct(function () { /* empty */ });
});

$export($export.S + $export.F * (NEW_TARGET_BUG || ARGS_BUG), 'Reflect', {
  construct: function construct(Target, args /* , newTarget */) {
    aFunction(Target);
    anObject(args);
    var newTarget = arguments.length < 3 ? Target : aFunction(arguments[2]);
    if (ARGS_BUG && !NEW_TARGET_BUG) return rConstruct(Target, args, newTarget);
    if (Target == newTarget) {
      // w/o altered newTarget, optimization for 0-4 arguments
      switch (args.length) {
        case 0: return new Target();
        case 1: return new Target(args[0]);
        case 2: return new Target(args[0], args[1]);
        case 3: return new Target(args[0], args[1], args[2]);
        case 4: return new Target(args[0], args[1], args[2], args[3]);
      }
      // w/o altered newTarget, lot of arguments case
      var $args = [null];
      $args.push.apply($args, args);
      return new (bind.apply(Target, $args))();
    }
    // with altered newTarget, not support built-in constructors
    var proto = newTarget.prototype;
    var instance = create(isObject(proto) ? proto : Object.prototype);
    var result = Function.apply.call(Target, instance, args);
    return isObject(result) ? result : instance;
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.reflect.get.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.reflect.get.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 26.1.6 Reflect.get(target, propertyKey [, receiver])
var gOPD = __webpack_require__(/*! ./_object-gopd */ "./node_modules/core-js/modules/_object-gopd.js");
var getPrototypeOf = __webpack_require__(/*! ./_object-gpo */ "./node_modules/core-js/modules/_object-gpo.js");
var has = __webpack_require__(/*! ./_has */ "./node_modules/core-js/modules/_has.js");
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/modules/_is-object.js");
var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/modules/_an-object.js");

function get(target, propertyKey /* , receiver */) {
  var receiver = arguments.length < 3 ? target : arguments[2];
  var desc, proto;
  if (anObject(target) === receiver) return target[propertyKey];
  if (desc = gOPD.f(target, propertyKey)) return has(desc, 'value')
    ? desc.value
    : desc.get !== undefined
      ? desc.get.call(receiver)
      : undefined;
  if (isObject(proto = getPrototypeOf(target))) return get(proto, propertyKey, receiver);
}

$export($export.S, 'Reflect', { get: get });


/***/ }),

/***/ "./node_modules/core-js/modules/es6.regexp.constructor.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.regexp.constructor.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/modules/_global.js");
var inheritIfRequired = __webpack_require__(/*! ./_inherit-if-required */ "./node_modules/core-js/modules/_inherit-if-required.js");
var dP = __webpack_require__(/*! ./_object-dp */ "./node_modules/core-js/modules/_object-dp.js").f;
var gOPN = __webpack_require__(/*! ./_object-gopn */ "./node_modules/core-js/modules/_object-gopn.js").f;
var isRegExp = __webpack_require__(/*! ./_is-regexp */ "./node_modules/core-js/modules/_is-regexp.js");
var $flags = __webpack_require__(/*! ./_flags */ "./node_modules/core-js/modules/_flags.js");
var $RegExp = global.RegExp;
var Base = $RegExp;
var proto = $RegExp.prototype;
var re1 = /a/g;
var re2 = /a/g;
// "new" creates a new object, old webkit buggy here
var CORRECT_NEW = new $RegExp(re1) !== re1;

if (__webpack_require__(/*! ./_descriptors */ "./node_modules/core-js/modules/_descriptors.js") && (!CORRECT_NEW || __webpack_require__(/*! ./_fails */ "./node_modules/core-js/modules/_fails.js")(function () {
  re2[__webpack_require__(/*! ./_wks */ "./node_modules/core-js/modules/_wks.js")('match')] = false;
  // RegExp constructor can alter flags and IsRegExp works correct with @@match
  return $RegExp(re1) != re1 || $RegExp(re2) == re2 || $RegExp(re1, 'i') != '/a/i';
}))) {
  $RegExp = function RegExp(p, f) {
    var tiRE = this instanceof $RegExp;
    var piRE = isRegExp(p);
    var fiU = f === undefined;
    return !tiRE && piRE && p.constructor === $RegExp && fiU ? p
      : inheritIfRequired(CORRECT_NEW
        ? new Base(piRE && !fiU ? p.source : p, f)
        : Base((piRE = p instanceof $RegExp) ? p.source : p, piRE && fiU ? $flags.call(p) : f)
      , tiRE ? this : proto, $RegExp);
  };
  var proxy = function (key) {
    key in $RegExp || dP($RegExp, key, {
      configurable: true,
      get: function () { return Base[key]; },
      set: function (it) { Base[key] = it; }
    });
  };
  for (var keys = gOPN(Base), i = 0; keys.length > i;) proxy(keys[i++]);
  proto.constructor = $RegExp;
  $RegExp.prototype = proto;
  __webpack_require__(/*! ./_redefine */ "./node_modules/core-js/modules/_redefine.js")(global, 'RegExp', $RegExp);
}

__webpack_require__(/*! ./_set-species */ "./node_modules/core-js/modules/_set-species.js")('RegExp');


/***/ }),

/***/ "./node_modules/core-js/modules/es6.regexp.flags.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.regexp.flags.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 21.2.5.3 get RegExp.prototype.flags()
if (__webpack_require__(/*! ./_descriptors */ "./node_modules/core-js/modules/_descriptors.js") && /./g.flags != 'g') __webpack_require__(/*! ./_object-dp */ "./node_modules/core-js/modules/_object-dp.js").f(RegExp.prototype, 'flags', {
  configurable: true,
  get: __webpack_require__(/*! ./_flags */ "./node_modules/core-js/modules/_flags.js")
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.regexp.match.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.regexp.match.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// @@match logic
__webpack_require__(/*! ./_fix-re-wks */ "./node_modules/core-js/modules/_fix-re-wks.js")('match', 1, function (defined, MATCH, $match) {
  // 21.1.3.11 String.prototype.match(regexp)
  return [function match(regexp) {
    'use strict';
    var O = defined(this);
    var fn = regexp == undefined ? undefined : regexp[MATCH];
    return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[MATCH](String(O));
  }, $match];
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.regexp.replace.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.regexp.replace.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// @@replace logic
__webpack_require__(/*! ./_fix-re-wks */ "./node_modules/core-js/modules/_fix-re-wks.js")('replace', 2, function (defined, REPLACE, $replace) {
  // 21.1.3.14 String.prototype.replace(searchValue, replaceValue)
  return [function replace(searchValue, replaceValue) {
    'use strict';
    var O = defined(this);
    var fn = searchValue == undefined ? undefined : searchValue[REPLACE];
    return fn !== undefined
      ? fn.call(searchValue, O, replaceValue)
      : $replace.call(String(O), searchValue, replaceValue);
  }, $replace];
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.regexp.search.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.regexp.search.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// @@search logic
__webpack_require__(/*! ./_fix-re-wks */ "./node_modules/core-js/modules/_fix-re-wks.js")('search', 1, function (defined, SEARCH, $search) {
  // 21.1.3.15 String.prototype.search(regexp)
  return [function search(regexp) {
    'use strict';
    var O = defined(this);
    var fn = regexp == undefined ? undefined : regexp[SEARCH];
    return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[SEARCH](String(O));
  }, $search];
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.regexp.split.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.regexp.split.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// @@split logic
__webpack_require__(/*! ./_fix-re-wks */ "./node_modules/core-js/modules/_fix-re-wks.js")('split', 2, function (defined, SPLIT, $split) {
  'use strict';
  var isRegExp = __webpack_require__(/*! ./_is-regexp */ "./node_modules/core-js/modules/_is-regexp.js");
  var _split = $split;
  var $push = [].push;
  var $SPLIT = 'split';
  var LENGTH = 'length';
  var LAST_INDEX = 'lastIndex';
  if (
    'abbc'[$SPLIT](/(b)*/)[1] == 'c' ||
    'test'[$SPLIT](/(?:)/, -1)[LENGTH] != 4 ||
    'ab'[$SPLIT](/(?:ab)*/)[LENGTH] != 2 ||
    '.'[$SPLIT](/(.?)(.?)/)[LENGTH] != 4 ||
    '.'[$SPLIT](/()()/)[LENGTH] > 1 ||
    ''[$SPLIT](/.?/)[LENGTH]
  ) {
    var NPCG = /()??/.exec('')[1] === undefined; // nonparticipating capturing group
    // based on es5-shim implementation, need to rework it
    $split = function (separator, limit) {
      var string = String(this);
      if (separator === undefined && limit === 0) return [];
      // If `separator` is not a regex, use native split
      if (!isRegExp(separator)) return _split.call(string, separator, limit);
      var output = [];
      var flags = (separator.ignoreCase ? 'i' : '') +
                  (separator.multiline ? 'm' : '') +
                  (separator.unicode ? 'u' : '') +
                  (separator.sticky ? 'y' : '');
      var lastLastIndex = 0;
      var splitLimit = limit === undefined ? 4294967295 : limit >>> 0;
      // Make `global` and avoid `lastIndex` issues by working with a copy
      var separatorCopy = new RegExp(separator.source, flags + 'g');
      var separator2, match, lastIndex, lastLength, i;
      // Doesn't need flags gy, but they don't hurt
      if (!NPCG) separator2 = new RegExp('^' + separatorCopy.source + '$(?!\\s)', flags);
      while (match = separatorCopy.exec(string)) {
        // `separatorCopy.lastIndex` is not reliable cross-browser
        lastIndex = match.index + match[0][LENGTH];
        if (lastIndex > lastLastIndex) {
          output.push(string.slice(lastLastIndex, match.index));
          // Fix browsers whose `exec` methods don't consistently return `undefined` for NPCG
          // eslint-disable-next-line no-loop-func
          if (!NPCG && match[LENGTH] > 1) match[0].replace(separator2, function () {
            for (i = 1; i < arguments[LENGTH] - 2; i++) if (arguments[i] === undefined) match[i] = undefined;
          });
          if (match[LENGTH] > 1 && match.index < string[LENGTH]) $push.apply(output, match.slice(1));
          lastLength = match[0][LENGTH];
          lastLastIndex = lastIndex;
          if (output[LENGTH] >= splitLimit) break;
        }
        if (separatorCopy[LAST_INDEX] === match.index) separatorCopy[LAST_INDEX]++; // Avoid an infinite loop
      }
      if (lastLastIndex === string[LENGTH]) {
        if (lastLength || !separatorCopy.test('')) output.push('');
      } else output.push(string.slice(lastLastIndex));
      return output[LENGTH] > splitLimit ? output.slice(0, splitLimit) : output;
    };
  // Chakra, V8
  } else if ('0'[$SPLIT](undefined, 0)[LENGTH]) {
    $split = function (separator, limit) {
      return separator === undefined && limit === 0 ? [] : _split.call(this, separator, limit);
    };
  }
  // 21.1.3.17 String.prototype.split(separator, limit)
  return [function split(separator, limit) {
    var O = defined(this);
    var fn = separator == undefined ? undefined : separator[SPLIT];
    return fn !== undefined ? fn.call(separator, O, limit) : $split.call(String(O), separator, limit);
  }, $split];
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.regexp.to-string.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.regexp.to-string.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

__webpack_require__(/*! ./es6.regexp.flags */ "./node_modules/core-js/modules/es6.regexp.flags.js");
var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/modules/_an-object.js");
var $flags = __webpack_require__(/*! ./_flags */ "./node_modules/core-js/modules/_flags.js");
var DESCRIPTORS = __webpack_require__(/*! ./_descriptors */ "./node_modules/core-js/modules/_descriptors.js");
var TO_STRING = 'toString';
var $toString = /./[TO_STRING];

var define = function (fn) {
  __webpack_require__(/*! ./_redefine */ "./node_modules/core-js/modules/_redefine.js")(RegExp.prototype, TO_STRING, fn, true);
};

// 21.2.5.14 RegExp.prototype.toString()
if (__webpack_require__(/*! ./_fails */ "./node_modules/core-js/modules/_fails.js")(function () { return $toString.call({ source: 'a', flags: 'b' }) != '/a/b'; })) {
  define(function toString() {
    var R = anObject(this);
    return '/'.concat(R.source, '/',
      'flags' in R ? R.flags : !DESCRIPTORS && R instanceof RegExp ? $flags.call(R) : undefined);
  });
// FF44- RegExp#toString has a wrong name
} else if ($toString.name != TO_STRING) {
  define(function toString() {
    return $toString.call(this);
  });
}


/***/ }),

/***/ "./node_modules/core-js/modules/es6.set.js":
/*!*************************************************!*\
  !*** ./node_modules/core-js/modules/es6.set.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var strong = __webpack_require__(/*! ./_collection-strong */ "./node_modules/core-js/modules/_collection-strong.js");
var validate = __webpack_require__(/*! ./_validate-collection */ "./node_modules/core-js/modules/_validate-collection.js");
var SET = 'Set';

// 23.2 Set Objects
module.exports = __webpack_require__(/*! ./_collection */ "./node_modules/core-js/modules/_collection.js")(SET, function (get) {
  return function Set() { return get(this, arguments.length > 0 ? arguments[0] : undefined); };
}, {
  // 23.2.3.1 Set.prototype.add(value)
  add: function add(value) {
    return strong.def(validate(this, SET), value = value === 0 ? 0 : value, value);
  }
}, strong);


/***/ }),

/***/ "./node_modules/core-js/modules/es6.symbol.js":
/*!****************************************************!*\
  !*** ./node_modules/core-js/modules/es6.symbol.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// ECMAScript 6 symbols shim
var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/modules/_global.js");
var has = __webpack_require__(/*! ./_has */ "./node_modules/core-js/modules/_has.js");
var DESCRIPTORS = __webpack_require__(/*! ./_descriptors */ "./node_modules/core-js/modules/_descriptors.js");
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
var redefine = __webpack_require__(/*! ./_redefine */ "./node_modules/core-js/modules/_redefine.js");
var META = __webpack_require__(/*! ./_meta */ "./node_modules/core-js/modules/_meta.js").KEY;
var $fails = __webpack_require__(/*! ./_fails */ "./node_modules/core-js/modules/_fails.js");
var shared = __webpack_require__(/*! ./_shared */ "./node_modules/core-js/modules/_shared.js");
var setToStringTag = __webpack_require__(/*! ./_set-to-string-tag */ "./node_modules/core-js/modules/_set-to-string-tag.js");
var uid = __webpack_require__(/*! ./_uid */ "./node_modules/core-js/modules/_uid.js");
var wks = __webpack_require__(/*! ./_wks */ "./node_modules/core-js/modules/_wks.js");
var wksExt = __webpack_require__(/*! ./_wks-ext */ "./node_modules/core-js/modules/_wks-ext.js");
var wksDefine = __webpack_require__(/*! ./_wks-define */ "./node_modules/core-js/modules/_wks-define.js");
var enumKeys = __webpack_require__(/*! ./_enum-keys */ "./node_modules/core-js/modules/_enum-keys.js");
var isArray = __webpack_require__(/*! ./_is-array */ "./node_modules/core-js/modules/_is-array.js");
var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/modules/_an-object.js");
var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/modules/_is-object.js");
var toIObject = __webpack_require__(/*! ./_to-iobject */ "./node_modules/core-js/modules/_to-iobject.js");
var toPrimitive = __webpack_require__(/*! ./_to-primitive */ "./node_modules/core-js/modules/_to-primitive.js");
var createDesc = __webpack_require__(/*! ./_property-desc */ "./node_modules/core-js/modules/_property-desc.js");
var _create = __webpack_require__(/*! ./_object-create */ "./node_modules/core-js/modules/_object-create.js");
var gOPNExt = __webpack_require__(/*! ./_object-gopn-ext */ "./node_modules/core-js/modules/_object-gopn-ext.js");
var $GOPD = __webpack_require__(/*! ./_object-gopd */ "./node_modules/core-js/modules/_object-gopd.js");
var $DP = __webpack_require__(/*! ./_object-dp */ "./node_modules/core-js/modules/_object-dp.js");
var $keys = __webpack_require__(/*! ./_object-keys */ "./node_modules/core-js/modules/_object-keys.js");
var gOPD = $GOPD.f;
var dP = $DP.f;
var gOPN = gOPNExt.f;
var $Symbol = global.Symbol;
var $JSON = global.JSON;
var _stringify = $JSON && $JSON.stringify;
var PROTOTYPE = 'prototype';
var HIDDEN = wks('_hidden');
var TO_PRIMITIVE = wks('toPrimitive');
var isEnum = {}.propertyIsEnumerable;
var SymbolRegistry = shared('symbol-registry');
var AllSymbols = shared('symbols');
var OPSymbols = shared('op-symbols');
var ObjectProto = Object[PROTOTYPE];
var USE_NATIVE = typeof $Symbol == 'function';
var QObject = global.QObject;
// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
var setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;

// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
var setSymbolDesc = DESCRIPTORS && $fails(function () {
  return _create(dP({}, 'a', {
    get: function () { return dP(this, 'a', { value: 7 }).a; }
  })).a != 7;
}) ? function (it, key, D) {
  var protoDesc = gOPD(ObjectProto, key);
  if (protoDesc) delete ObjectProto[key];
  dP(it, key, D);
  if (protoDesc && it !== ObjectProto) dP(ObjectProto, key, protoDesc);
} : dP;

var wrap = function (tag) {
  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);
  sym._k = tag;
  return sym;
};

var isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function (it) {
  return typeof it == 'symbol';
} : function (it) {
  return it instanceof $Symbol;
};

var $defineProperty = function defineProperty(it, key, D) {
  if (it === ObjectProto) $defineProperty(OPSymbols, key, D);
  anObject(it);
  key = toPrimitive(key, true);
  anObject(D);
  if (has(AllSymbols, key)) {
    if (!D.enumerable) {
      if (!has(it, HIDDEN)) dP(it, HIDDEN, createDesc(1, {}));
      it[HIDDEN][key] = true;
    } else {
      if (has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;
      D = _create(D, { enumerable: createDesc(0, false) });
    } return setSymbolDesc(it, key, D);
  } return dP(it, key, D);
};
var $defineProperties = function defineProperties(it, P) {
  anObject(it);
  var keys = enumKeys(P = toIObject(P));
  var i = 0;
  var l = keys.length;
  var key;
  while (l > i) $defineProperty(it, key = keys[i++], P[key]);
  return it;
};
var $create = function create(it, P) {
  return P === undefined ? _create(it) : $defineProperties(_create(it), P);
};
var $propertyIsEnumerable = function propertyIsEnumerable(key) {
  var E = isEnum.call(this, key = toPrimitive(key, true));
  if (this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return false;
  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;
};
var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {
  it = toIObject(it);
  key = toPrimitive(key, true);
  if (it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return;
  var D = gOPD(it, key);
  if (D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) D.enumerable = true;
  return D;
};
var $getOwnPropertyNames = function getOwnPropertyNames(it) {
  var names = gOPN(toIObject(it));
  var result = [];
  var i = 0;
  var key;
  while (names.length > i) {
    if (!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META) result.push(key);
  } return result;
};
var $getOwnPropertySymbols = function getOwnPropertySymbols(it) {
  var IS_OP = it === ObjectProto;
  var names = gOPN(IS_OP ? OPSymbols : toIObject(it));
  var result = [];
  var i = 0;
  var key;
  while (names.length > i) {
    if (has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true)) result.push(AllSymbols[key]);
  } return result;
};

// 19.4.1.1 Symbol([description])
if (!USE_NATIVE) {
  $Symbol = function Symbol() {
    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor!');
    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);
    var $set = function (value) {
      if (this === ObjectProto) $set.call(OPSymbols, value);
      if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;
      setSymbolDesc(this, tag, createDesc(1, value));
    };
    if (DESCRIPTORS && setter) setSymbolDesc(ObjectProto, tag, { configurable: true, set: $set });
    return wrap(tag);
  };
  redefine($Symbol[PROTOTYPE], 'toString', function toString() {
    return this._k;
  });

  $GOPD.f = $getOwnPropertyDescriptor;
  $DP.f = $defineProperty;
  __webpack_require__(/*! ./_object-gopn */ "./node_modules/core-js/modules/_object-gopn.js").f = gOPNExt.f = $getOwnPropertyNames;
  __webpack_require__(/*! ./_object-pie */ "./node_modules/core-js/modules/_object-pie.js").f = $propertyIsEnumerable;
  __webpack_require__(/*! ./_object-gops */ "./node_modules/core-js/modules/_object-gops.js").f = $getOwnPropertySymbols;

  if (DESCRIPTORS && !__webpack_require__(/*! ./_library */ "./node_modules/core-js/modules/_library.js")) {
    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);
  }

  wksExt.f = function (name) {
    return wrap(wks(name));
  };
}

$export($export.G + $export.W + $export.F * !USE_NATIVE, { Symbol: $Symbol });

for (var es6Symbols = (
  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14
  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'
).split(','), j = 0; es6Symbols.length > j;)wks(es6Symbols[j++]);

for (var wellKnownSymbols = $keys(wks.store), k = 0; wellKnownSymbols.length > k;) wksDefine(wellKnownSymbols[k++]);

$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {
  // 19.4.2.1 Symbol.for(key)
  'for': function (key) {
    return has(SymbolRegistry, key += '')
      ? SymbolRegistry[key]
      : SymbolRegistry[key] = $Symbol(key);
  },
  // 19.4.2.5 Symbol.keyFor(sym)
  keyFor: function keyFor(sym) {
    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol!');
    for (var key in SymbolRegistry) if (SymbolRegistry[key] === sym) return key;
  },
  useSetter: function () { setter = true; },
  useSimple: function () { setter = false; }
});

$export($export.S + $export.F * !USE_NATIVE, 'Object', {
  // 19.1.2.2 Object.create(O [, Properties])
  create: $create,
  // 19.1.2.4 Object.defineProperty(O, P, Attributes)
  defineProperty: $defineProperty,
  // 19.1.2.3 Object.defineProperties(O, Properties)
  defineProperties: $defineProperties,
  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,
  // 19.1.2.7 Object.getOwnPropertyNames(O)
  getOwnPropertyNames: $getOwnPropertyNames,
  // 19.1.2.8 Object.getOwnPropertySymbols(O)
  getOwnPropertySymbols: $getOwnPropertySymbols
});

// 24.3.2 JSON.stringify(value [, replacer [, space]])
$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function () {
  var S = $Symbol();
  // MS Edge converts symbol values to JSON as {}
  // WebKit converts symbol values to JSON as null
  // V8 throws on boxed symbols
  return _stringify([S]) != '[null]' || _stringify({ a: S }) != '{}' || _stringify(Object(S)) != '{}';
})), 'JSON', {
  stringify: function stringify(it) {
    var args = [it];
    var i = 1;
    var replacer, $replacer;
    while (arguments.length > i) args.push(arguments[i++]);
    $replacer = replacer = args[1];
    if (!isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined
    if (!isArray(replacer)) replacer = function (key, value) {
      if (typeof $replacer == 'function') value = $replacer.call(this, key, value);
      if (!isSymbol(value)) return value;
    };
    args[1] = replacer;
    return _stringify.apply($JSON, args);
  }
});

// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)
$Symbol[PROTOTYPE][TO_PRIMITIVE] || __webpack_require__(/*! ./_hide */ "./node_modules/core-js/modules/_hide.js")($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);
// 19.4.3.5 Symbol.prototype[@@toStringTag]
setToStringTag($Symbol, 'Symbol');
// 20.2.1.9 Math[@@toStringTag]
setToStringTag(Math, 'Math', true);
// 24.3.3 JSON[@@toStringTag]
setToStringTag(global.JSON, 'JSON', true);


/***/ }),

/***/ "./node_modules/core-js/modules/es6.typed.float32-array.js":
/*!*****************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.typed.float32-array.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ./_typed-array */ "./node_modules/core-js/modules/_typed-array.js")('Float32', 4, function (init) {
  return function Float32Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});


/***/ }),

/***/ "./node_modules/core-js/modules/es6.typed.uint8-array.js":
/*!***************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.typed.uint8-array.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ./_typed-array */ "./node_modules/core-js/modules/_typed-array.js")('Uint8', 1, function (init) {
  return function Uint8Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});


/***/ }),

/***/ "./node_modules/core-js/modules/es7.array.includes.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/modules/es7.array.includes.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// https://github.com/tc39/Array.prototype.includes
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
var $includes = __webpack_require__(/*! ./_array-includes */ "./node_modules/core-js/modules/_array-includes.js")(true);

$export($export.P, 'Array', {
  includes: function includes(el /* , fromIndex = 0 */) {
    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);
  }
});

__webpack_require__(/*! ./_add-to-unscopables */ "./node_modules/core-js/modules/_add-to-unscopables.js")('includes');


/***/ }),

/***/ "./node_modules/core-js/modules/es7.object.values.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/modules/es7.object.values.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// https://github.com/tc39/proposal-object-values-entries
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
var $values = __webpack_require__(/*! ./_object-to-array */ "./node_modules/core-js/modules/_object-to-array.js")(false);

$export($export.S, 'Object', {
  values: function values(it) {
    return $values(it);
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es7.string.pad-start.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/modules/es7.string.pad-start.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// https://github.com/tc39/proposal-string-pad-start-end
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
var $pad = __webpack_require__(/*! ./_string-pad */ "./node_modules/core-js/modules/_string-pad.js");
var userAgent = __webpack_require__(/*! ./_user-agent */ "./node_modules/core-js/modules/_user-agent.js");

// https://github.com/zloirock/core-js/issues/280
$export($export.P + $export.F * /Version\/10\.\d+(\.\d+)? Safari\//.test(userAgent), 'String', {
  padStart: function padStart(maxLength /* , fillString = ' ' */) {
    return $pad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, true);
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es7.symbol.async-iterator.js":
/*!*******************************************************************!*\
  !*** ./node_modules/core-js/modules/es7.symbol.async-iterator.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ./_wks-define */ "./node_modules/core-js/modules/_wks-define.js")('asyncIterator');


/***/ }),

/***/ "./node_modules/core-js/modules/web.dom.iterable.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/modules/web.dom.iterable.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var $iterators = __webpack_require__(/*! ./es6.array.iterator */ "./node_modules/core-js/modules/es6.array.iterator.js");
var getKeys = __webpack_require__(/*! ./_object-keys */ "./node_modules/core-js/modules/_object-keys.js");
var redefine = __webpack_require__(/*! ./_redefine */ "./node_modules/core-js/modules/_redefine.js");
var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/modules/_global.js");
var hide = __webpack_require__(/*! ./_hide */ "./node_modules/core-js/modules/_hide.js");
var Iterators = __webpack_require__(/*! ./_iterators */ "./node_modules/core-js/modules/_iterators.js");
var wks = __webpack_require__(/*! ./_wks */ "./node_modules/core-js/modules/_wks.js");
var ITERATOR = wks('iterator');
var TO_STRING_TAG = wks('toStringTag');
var ArrayValues = Iterators.Array;

var DOMIterables = {
  CSSRuleList: true, // TODO: Not spec compliant, should be false.
  CSSStyleDeclaration: false,
  CSSValueList: false,
  ClientRectList: false,
  DOMRectList: false,
  DOMStringList: false,
  DOMTokenList: true,
  DataTransferItemList: false,
  FileList: false,
  HTMLAllCollection: false,
  HTMLCollection: false,
  HTMLFormElement: false,
  HTMLSelectElement: false,
  MediaList: true, // TODO: Not spec compliant, should be false.
  MimeTypeArray: false,
  NamedNodeMap: false,
  NodeList: true,
  PaintRequestList: false,
  Plugin: false,
  PluginArray: false,
  SVGLengthList: false,
  SVGNumberList: false,
  SVGPathSegList: false,
  SVGPointList: false,
  SVGStringList: false,
  SVGTransformList: false,
  SourceBufferList: false,
  StyleSheetList: true, // TODO: Not spec compliant, should be false.
  TextTrackCueList: false,
  TextTrackList: false,
  TouchList: false
};

for (var collections = getKeys(DOMIterables), i = 0; i < collections.length; i++) {
  var NAME = collections[i];
  var explicit = DOMIterables[NAME];
  var Collection = global[NAME];
  var proto = Collection && Collection.prototype;
  var key;
  if (proto) {
    if (!proto[ITERATOR]) hide(proto, ITERATOR, ArrayValues);
    if (!proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);
    Iterators[NAME] = ArrayValues;
    if (explicit) for (key in $iterators) if (!proto[key]) redefine(proto, key, $iterators[key], true);
  }
}


/***/ }),

/***/ "./node_modules/page/page.js":
/*!***********************************!*\
  !*** ./node_modules/page/page.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(process) {(function (global, factory) {
	 true ? module.exports = factory() :
	undefined;
}(this, (function () { 'use strict';

var isarray = Array.isArray || function (arr) {
  return Object.prototype.toString.call(arr) == '[object Array]';
};

/**
 * Expose `pathToRegexp`.
 */
var pathToRegexp_1 = pathToRegexp;
var parse_1 = parse;
var compile_1 = compile;
var tokensToFunction_1 = tokensToFunction;
var tokensToRegExp_1 = tokensToRegExp;

/**
 * The main path matching regexp utility.
 *
 * @type {RegExp}
 */
var PATH_REGEXP = new RegExp([
  // Match escaped characters that would otherwise appear in future matches.
  // This allows the user to escape special characters that won't transform.
  '(\\\\.)',
  // Match Express-style parameters and un-named parameters with a prefix
  // and optional suffixes. Matches appear as:
  //
  // "/:test(\\d+)?" => ["/", "test", "\d+", undefined, "?", undefined]
  // "/route(\\d+)"  => [undefined, undefined, undefined, "\d+", undefined, undefined]
  // "/*"            => ["/", undefined, undefined, undefined, undefined, "*"]
  '([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^()])+)\\))?|\\(((?:\\\\.|[^()])+)\\))([+*?])?|(\\*))'
].join('|'), 'g');

/**
 * Parse a string for the raw tokens.
 *
 * @param  {String} str
 * @return {Array}
 */
function parse (str) {
  var tokens = [];
  var key = 0;
  var index = 0;
  var path = '';
  var res;

  while ((res = PATH_REGEXP.exec(str)) != null) {
    var m = res[0];
    var escaped = res[1];
    var offset = res.index;
    path += str.slice(index, offset);
    index = offset + m.length;

    // Ignore already escaped sequences.
    if (escaped) {
      path += escaped[1];
      continue
    }

    // Push the current path onto the tokens.
    if (path) {
      tokens.push(path);
      path = '';
    }

    var prefix = res[2];
    var name = res[3];
    var capture = res[4];
    var group = res[5];
    var suffix = res[6];
    var asterisk = res[7];

    var repeat = suffix === '+' || suffix === '*';
    var optional = suffix === '?' || suffix === '*';
    var delimiter = prefix || '/';
    var pattern = capture || group || (asterisk ? '.*' : '[^' + delimiter + ']+?');

    tokens.push({
      name: name || key++,
      prefix: prefix || '',
      delimiter: delimiter,
      optional: optional,
      repeat: repeat,
      pattern: escapeGroup(pattern)
    });
  }

  // Match any characters still remaining.
  if (index < str.length) {
    path += str.substr(index);
  }

  // If the path exists, push it onto the end.
  if (path) {
    tokens.push(path);
  }

  return tokens
}

/**
 * Compile a string to a template function for the path.
 *
 * @param  {String}   str
 * @return {Function}
 */
function compile (str) {
  return tokensToFunction(parse(str))
}

/**
 * Expose a method for transforming tokens into the path function.
 */
function tokensToFunction (tokens) {
  // Compile all the tokens into regexps.
  var matches = new Array(tokens.length);

  // Compile all the patterns before compilation.
  for (var i = 0; i < tokens.length; i++) {
    if (typeof tokens[i] === 'object') {
      matches[i] = new RegExp('^' + tokens[i].pattern + '$');
    }
  }

  return function (obj) {
    var path = '';
    var data = obj || {};

    for (var i = 0; i < tokens.length; i++) {
      var token = tokens[i];

      if (typeof token === 'string') {
        path += token;

        continue
      }

      var value = data[token.name];
      var segment;

      if (value == null) {
        if (token.optional) {
          continue
        } else {
          throw new TypeError('Expected "' + token.name + '" to be defined')
        }
      }

      if (isarray(value)) {
        if (!token.repeat) {
          throw new TypeError('Expected "' + token.name + '" to not repeat, but received "' + value + '"')
        }

        if (value.length === 0) {
          if (token.optional) {
            continue
          } else {
            throw new TypeError('Expected "' + token.name + '" to not be empty')
          }
        }

        for (var j = 0; j < value.length; j++) {
          segment = encodeURIComponent(value[j]);

          if (!matches[i].test(segment)) {
            throw new TypeError('Expected all "' + token.name + '" to match "' + token.pattern + '", but received "' + segment + '"')
          }

          path += (j === 0 ? token.prefix : token.delimiter) + segment;
        }

        continue
      }

      segment = encodeURIComponent(value);

      if (!matches[i].test(segment)) {
        throw new TypeError('Expected "' + token.name + '" to match "' + token.pattern + '", but received "' + segment + '"')
      }

      path += token.prefix + segment;
    }

    return path
  }
}

/**
 * Escape a regular expression string.
 *
 * @param  {String} str
 * @return {String}
 */
function escapeString (str) {
  return str.replace(/([.+*?=^!:${}()[\]|\/])/g, '\\$1')
}

/**
 * Escape the capturing group by escaping special characters and meaning.
 *
 * @param  {String} group
 * @return {String}
 */
function escapeGroup (group) {
  return group.replace(/([=!:$\/()])/g, '\\$1')
}

/**
 * Attach the keys as a property of the regexp.
 *
 * @param  {RegExp} re
 * @param  {Array}  keys
 * @return {RegExp}
 */
function attachKeys (re, keys) {
  re.keys = keys;
  return re
}

/**
 * Get the flags for a regexp from the options.
 *
 * @param  {Object} options
 * @return {String}
 */
function flags (options) {
  return options.sensitive ? '' : 'i'
}

/**
 * Pull out keys from a regexp.
 *
 * @param  {RegExp} path
 * @param  {Array}  keys
 * @return {RegExp}
 */
function regexpToRegexp (path, keys) {
  // Use a negative lookahead to match only capturing groups.
  var groups = path.source.match(/\((?!\?)/g);

  if (groups) {
    for (var i = 0; i < groups.length; i++) {
      keys.push({
        name: i,
        prefix: null,
        delimiter: null,
        optional: false,
        repeat: false,
        pattern: null
      });
    }
  }

  return attachKeys(path, keys)
}

/**
 * Transform an array into a regexp.
 *
 * @param  {Array}  path
 * @param  {Array}  keys
 * @param  {Object} options
 * @return {RegExp}
 */
function arrayToRegexp (path, keys, options) {
  var parts = [];

  for (var i = 0; i < path.length; i++) {
    parts.push(pathToRegexp(path[i], keys, options).source);
  }

  var regexp = new RegExp('(?:' + parts.join('|') + ')', flags(options));

  return attachKeys(regexp, keys)
}

/**
 * Create a path regexp from string input.
 *
 * @param  {String} path
 * @param  {Array}  keys
 * @param  {Object} options
 * @return {RegExp}
 */
function stringToRegexp (path, keys, options) {
  var tokens = parse(path);
  var re = tokensToRegExp(tokens, options);

  // Attach keys back to the regexp.
  for (var i = 0; i < tokens.length; i++) {
    if (typeof tokens[i] !== 'string') {
      keys.push(tokens[i]);
    }
  }

  return attachKeys(re, keys)
}

/**
 * Expose a function for taking tokens and returning a RegExp.
 *
 * @param  {Array}  tokens
 * @param  {Array}  keys
 * @param  {Object} options
 * @return {RegExp}
 */
function tokensToRegExp (tokens, options) {
  options = options || {};

  var strict = options.strict;
  var end = options.end !== false;
  var route = '';
  var lastToken = tokens[tokens.length - 1];
  var endsWithSlash = typeof lastToken === 'string' && /\/$/.test(lastToken);

  // Iterate over the tokens and create our regexp string.
  for (var i = 0; i < tokens.length; i++) {
    var token = tokens[i];

    if (typeof token === 'string') {
      route += escapeString(token);
    } else {
      var prefix = escapeString(token.prefix);
      var capture = token.pattern;

      if (token.repeat) {
        capture += '(?:' + prefix + capture + ')*';
      }

      if (token.optional) {
        if (prefix) {
          capture = '(?:' + prefix + '(' + capture + '))?';
        } else {
          capture = '(' + capture + ')?';
        }
      } else {
        capture = prefix + '(' + capture + ')';
      }

      route += capture;
    }
  }

  // In non-strict mode we allow a slash at the end of match. If the path to
  // match already ends with a slash, we remove it for consistency. The slash
  // is valid at the end of a path match, not in the middle. This is important
  // in non-ending mode, where "/test/" shouldn't match "/test//route".
  if (!strict) {
    route = (endsWithSlash ? route.slice(0, -2) : route) + '(?:\\/(?=$))?';
  }

  if (end) {
    route += '$';
  } else {
    // In non-ending mode, we need the capturing groups to match as much as
    // possible by using a positive lookahead to the end or next path segment.
    route += strict && endsWithSlash ? '' : '(?=\\/|$)';
  }

  return new RegExp('^' + route, flags(options))
}

/**
 * Normalize the given path string, returning a regular expression.
 *
 * An empty array can be passed in for the keys, which will hold the
 * placeholder key descriptions. For example, using `/user/:id`, `keys` will
 * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.
 *
 * @param  {(String|RegExp|Array)} path
 * @param  {Array}                 [keys]
 * @param  {Object}                [options]
 * @return {RegExp}
 */
function pathToRegexp (path, keys, options) {
  keys = keys || [];

  if (!isarray(keys)) {
    options = keys;
    keys = [];
  } else if (!options) {
    options = {};
  }

  if (path instanceof RegExp) {
    return regexpToRegexp(path, keys, options)
  }

  if (isarray(path)) {
    return arrayToRegexp(path, keys, options)
  }

  return stringToRegexp(path, keys, options)
}

pathToRegexp_1.parse = parse_1;
pathToRegexp_1.compile = compile_1;
pathToRegexp_1.tokensToFunction = tokensToFunction_1;
pathToRegexp_1.tokensToRegExp = tokensToRegExp_1;

/**
   * Module dependencies.
   */

  

  /**
   * Short-cuts for global-object checks
   */

  var hasDocument = ('undefined' !== typeof document);
  var hasWindow = ('undefined' !== typeof window);
  var hasHistory = ('undefined' !== typeof history);
  var hasProcess = typeof process !== 'undefined';

  /**
   * Detect click event
   */
  var clickEvent = hasDocument && document.ontouchstart ? 'touchstart' : 'click';

  /**
   * To work properly with the URL
   * history.location generated polyfill in https://github.com/devote/HTML5-History-API
   */

  var isLocation = hasWindow && !!(window.history.location || window.location);

  /**
   * The page instance
   * @api private
   */
  function Page(options) {
    // public things
    this.callbacks = [];
    this.exits = [];
    this.current = '';
    this.len = 0;

    // private things
    this._dispatch = true;
    this._decodeURLComponents = true;
    this._base = '';
    this._strict = false;
    this._running = false;
    this._hashbang = false;

    // bound functions
    this.clickHandler = this.clickHandler.bind(this);
    this._onpopstate = this._onpopstate.bind(this);

    this.configure(options);
  }

  /**
   * Configure the instance of page. This can be called multiple times.
   *
   * @param {Object} options
   * @api public
   */

  Page.prototype.configure = function(options) {
    var opts = options || {};

    this._window = opts.window || (hasWindow && window);
    this._dispatch = opts.dispatch !== false;
    this._decodeURLComponents = opts.decodeURLComponents !== false;
    this._popstate = opts.popstate !== false && hasWindow;
    this._click = opts.click !== false && hasDocument;
    this._hashbang = !!opts.hashbang;

    var _window = this._window;
    if(this._popstate) {
      _window.addEventListener('popstate', this._onpopstate, false);
    } else if(hasWindow) {
      _window.removeEventListener('popstate', this._onpopstate, false);
    }

    if (this._click) {
      _window.document.addEventListener(clickEvent, this.clickHandler, false);
    } else if(hasDocument) {
      _window.document.removeEventListener(clickEvent, this.clickHandler, false);
    }

    if(this._hashbang && hasWindow && !hasHistory) {
      _window.addEventListener('hashchange', this._onpopstate, false);
    } else if(hasWindow) {
      _window.removeEventListener('hashchange', this._onpopstate, false);
    }
  };

  /**
   * Get or set basepath to `path`.
   *
   * @param {string} path
   * @api public
   */

  Page.prototype.base = function(path) {
    if (0 === arguments.length) return this._base;
    this._base = path;
  };

  /**
   * Gets the `base`, which depends on whether we are using History or
   * hashbang routing.

   * @api private
   */
  Page.prototype._getBase = function() {
    var base = this._base;
    if(!!base) return base;
    var loc = hasWindow && this._window && this._window.location;

    if(hasWindow && this._hashbang && loc && loc.protocol === 'file:') {
      base = loc.pathname;
      base = base.substring(0, base.lastIndexOf('/'));
    }

    return base;
  };

  /**
   * Get or set strict path matching to `enable`
   *
   * @param {boolean} enable
   * @api public
   */

  Page.prototype.strict = function(enable) {
    if (0 === arguments.length) return this._strict;
    this._strict = enable;
  };


  /**
   * Bind with the given `options`.
   *
   * Options:
   *
   *    - `click` bind to click events [true]
   *    - `popstate` bind to popstate [true]
   *    - `dispatch` perform initial dispatch [true]
   *
   * @param {Object} options
   * @api public
   */

  Page.prototype.start = function(options) {
    this.configure(options);

    if (!this._dispatch) return;
    this._running = true;

    var url;
    if(isLocation) {
      var window = this._window;
      var loc = window.location;

      if(this._hashbang && ~loc.hash.indexOf('#!')) {
        url = loc.hash.substr(2) + loc.search;
      } else if (this._hashbang) {
        url = loc.search + loc.hash;
      } else {
        url = loc.pathname + loc.search + loc.hash;
      }
    }

    this.replace(url, null, true, this._dispatch);
  };

  /**
   * Unbind click and popstate event handlers.
   *
   * @api public
   */

  Page.prototype.stop = function() {
    if (!this._running) return;
    this.current = '';
    this.len = 0;
    this._running = false;

    var window = this._window;
    hasDocument && window.document.removeEventListener(clickEvent, this.clickHandler, false);
    hasWindow && window.removeEventListener('popstate', this._onpopstate, false);
    hasWindow && window.removeEventListener('hashchange', this._onpopstate, false);
  };

  /**
   * Show `path` with optional `state` object.
   *
   * @param {string} path
   * @param {Object=} state
   * @param {boolean=} dispatch
   * @param {boolean=} push
   * @return {!Context}
   * @api public
   */

  Page.prototype.show = function(path, state, dispatch, push) {
    var ctx = new Context(path, state, this),
      prev = this.prevContext;
    this.prevContext = ctx;
    this.current = ctx.path;
    if (this._dispatch) this.dispatch(ctx, prev);
    if (false !== ctx.handled && false !== push) ctx.pushState();
    return ctx;
  };

  /**
   * Goes back in the history
   * Back should always let the current route push state and then go back.
   *
   * @param {string} path - fallback path to go back if no more history exists, if undefined defaults to page.base
   * @param {Object=} state
   * @api public
   */

  Page.prototype.back = function(path, state) {
    var page = this;
    if (this.len > 0) {
      var window = this._window;
      // this may need more testing to see if all browsers
      // wait for the next tick to go back in history
      hasHistory && window.history.back();
      this.len--;
    } else if (path) {
      setTimeout(function() {
        page.show(path, state);
      });
    } else {
      setTimeout(function() {
        page.show(page._getBase(), state);
      });
    }
  };

  /**
   * Register route to redirect from one path to other
   * or just redirect to another route
   *
   * @param {string} from - if param 'to' is undefined redirects to 'from'
   * @param {string=} to
   * @api public
   */
  Page.prototype.redirect = function(from, to) {
    var inst = this;

    // Define route from a path to another
    if ('string' === typeof from && 'string' === typeof to) {
      page.call(this, from, function(e) {
        setTimeout(function() {
          inst.replace(/** @type {!string} */ (to));
        }, 0);
      });
    }

    // Wait for the push state and replace it with another
    if ('string' === typeof from && 'undefined' === typeof to) {
      setTimeout(function() {
        inst.replace(from);
      }, 0);
    }
  };

  /**
   * Replace `path` with optional `state` object.
   *
   * @param {string} path
   * @param {Object=} state
   * @param {boolean=} init
   * @param {boolean=} dispatch
   * @return {!Context}
   * @api public
   */


  Page.prototype.replace = function(path, state, init, dispatch) {
    var ctx = new Context(path, state, this),
      prev = this.prevContext;
    this.prevContext = ctx;
    this.current = ctx.path;
    ctx.init = init;
    ctx.save(); // save before dispatching, which may redirect
    if (false !== dispatch) this.dispatch(ctx, prev);
    return ctx;
  };

  /**
   * Dispatch the given `ctx`.
   *
   * @param {Context} ctx
   * @api private
   */

  Page.prototype.dispatch = function(ctx, prev) {
    var i = 0, j = 0, page = this;

    function nextExit() {
      var fn = page.exits[j++];
      if (!fn) return nextEnter();
      fn(prev, nextExit);
    }

    function nextEnter() {
      var fn = page.callbacks[i++];

      if (ctx.path !== page.current) {
        ctx.handled = false;
        return;
      }
      if (!fn) return unhandled.call(page, ctx);
      fn(ctx, nextEnter);
    }

    if (prev) {
      nextExit();
    } else {
      nextEnter();
    }
  };

  /**
   * Register an exit route on `path` with
   * callback `fn()`, which will be called
   * on the previous context when a new
   * page is visited.
   */
  Page.prototype.exit = function(path, fn) {
    if (typeof path === 'function') {
      return this.exit('*', path);
    }

    var route = new Route(path, null, this);
    for (var i = 1; i < arguments.length; ++i) {
      this.exits.push(route.middleware(arguments[i]));
    }
  };

  /**
   * Handle "click" events.
   */

  /* jshint +W054 */
  Page.prototype.clickHandler = function(e) {
    if (1 !== this._which(e)) return;

    if (e.metaKey || e.ctrlKey || e.shiftKey) return;
    if (e.defaultPrevented) return;

    // ensure link
    // use shadow dom when available if not, fall back to composedPath()
    // for browsers that only have shady
    var el = e.target;
    var eventPath = e.path || (e.composedPath ? e.composedPath() : null);

    if(eventPath) {
      for (var i = 0; i < eventPath.length; i++) {
        if (!eventPath[i].nodeName) continue;
        if (eventPath[i].nodeName.toUpperCase() !== 'A') continue;
        if (!eventPath[i].href) continue;

        el = eventPath[i];
        break;
      }
    }

    // continue ensure link
    // el.nodeName for svg links are 'a' instead of 'A'
    while (el && 'A' !== el.nodeName.toUpperCase()) el = el.parentNode;
    if (!el || 'A' !== el.nodeName.toUpperCase()) return;

    // check if link is inside an svg
    // in this case, both href and target are always inside an object
    var svg = (typeof el.href === 'object') && el.href.constructor.name === 'SVGAnimatedString';

    // Ignore if tag has
    // 1. "download" attribute
    // 2. rel="external" attribute
    if (el.hasAttribute('download') || el.getAttribute('rel') === 'external') return;

    // ensure non-hash for the same path
    var link = el.getAttribute('href');
    if(!this._hashbang && this._samePath(el) && (el.hash || '#' === link)) return;

    // Check for mailto: in the href
    if (link && link.indexOf('mailto:') > -1) return;

    // check target
    // svg target is an object and its desired value is in .baseVal property
    if (svg ? el.target.baseVal : el.target) return;

    // x-origin
    // note: svg links that are not relative don't call click events (and skip page.js)
    // consequently, all svg links tested inside page.js are relative and in the same origin
    if (!svg && !this.sameOrigin(el.href)) return;

    // rebuild path
    // There aren't .pathname and .search properties in svg links, so we use href
    // Also, svg href is an object and its desired value is in .baseVal property
    var path = svg ? el.href.baseVal : (el.pathname + el.search + (el.hash || ''));

    path = path[0] !== '/' ? '/' + path : path;

    // strip leading "/[drive letter]:" on NW.js on Windows
    if (hasProcess && path.match(/^\/[a-zA-Z]:\//)) {
      path = path.replace(/^\/[a-zA-Z]:\//, '/');
    }

    // same page
    var orig = path;
    var pageBase = this._getBase();

    if (path.indexOf(pageBase) === 0) {
      path = path.substr(pageBase.length);
    }

    if (this._hashbang) path = path.replace('#!', '');

    if (pageBase && orig === path && (!isLocation || this._window.location.protocol !== 'file:')) {
      return;
    }

    e.preventDefault();
    this.show(orig);
  };

  /**
   * Handle "populate" events.
   * @api private
   */

  Page.prototype._onpopstate = (function () {
    var loaded = false;
    if ( ! hasWindow ) {
      return function () {};
    }
    if (hasDocument && document.readyState === 'complete') {
      loaded = true;
    } else {
      window.addEventListener('load', function() {
        setTimeout(function() {
          loaded = true;
        }, 0);
      });
    }
    return function onpopstate(e) {
      if (!loaded) return;
      var page = this;
      if (e.state) {
        var path = e.state.path;
        page.replace(path, e.state);
      } else if (isLocation) {
        var loc = page._window.location;
        page.show(loc.pathname + loc.search + loc.hash, undefined, undefined, false);
      }
    };
  })();

  /**
   * Event button.
   */
  Page.prototype._which = function(e) {
    e = e || (hasWindow && this._window.event);
    return null == e.which ? e.button : e.which;
  };

  /**
   * Convert to a URL object
   * @api private
   */
  Page.prototype._toURL = function(href) {
    var window = this._window;
    if(typeof URL === 'function' && isLocation) {
      return new URL(href, window.location.toString());
    } else if (hasDocument) {
      var anc = window.document.createElement('a');
      anc.href = href;
      return anc;
    }
  };

  /**
   * Check if `href` is the same origin.
   * @param {string} href
   * @api public
   */

  Page.prototype.sameOrigin = function(href) {
    if(!href || !isLocation) return false;

    var url = this._toURL(href);
    var window = this._window;

    var loc = window.location;
    return loc.protocol === url.protocol &&
      loc.hostname === url.hostname &&
      loc.port === url.port;
  };

  /**
   * @api private
   */
  Page.prototype._samePath = function(url) {
    if(!isLocation) return false;
    var window = this._window;
    var loc = window.location;
    return url.pathname === loc.pathname &&
      url.search === loc.search;
  };

  /**
   * Remove URL encoding from the given `str`.
   * Accommodates whitespace in both x-www-form-urlencoded
   * and regular percent-encoded form.
   *
   * @param {string} val - URL component to decode
   * @api private
   */
  Page.prototype._decodeURLEncodedURIComponent = function(val) {
    if (typeof val !== 'string') { return val; }
    return this._decodeURLComponents ? decodeURIComponent(val.replace(/\+/g, ' ')) : val;
  };

  /**
   * Create a new `page` instance and function
   */
  function createPage(options) {
    var pageInstance = new Page();

    function pageFn(/* args */) {
      return page.apply(pageInstance, arguments);
    }

    // Copy all of the things over. In 2.0 maybe we use setPrototypeOf
    pageFn.callbacks = pageInstance.callbacks;
    pageFn.exits = pageInstance.exits;
    pageFn.base = pageInstance.base.bind(pageInstance);
    pageFn.strict = pageInstance.strict.bind(pageInstance);
    pageFn.start = pageInstance.start.bind(pageInstance);
    pageFn.stop = pageInstance.stop.bind(pageInstance);
    pageFn.show = pageInstance.show.bind(pageInstance);
    pageFn.back = pageInstance.back.bind(pageInstance);
    pageFn.redirect = pageInstance.redirect.bind(pageInstance);
    pageFn.replace = pageInstance.replace.bind(pageInstance);
    pageFn.dispatch = pageInstance.dispatch.bind(pageInstance);
    pageFn.exit = pageInstance.exit.bind(pageInstance);
    pageFn.configure = pageInstance.configure.bind(pageInstance);
    pageFn.sameOrigin = pageInstance.sameOrigin.bind(pageInstance);
    pageFn.clickHandler = pageInstance.clickHandler.bind(pageInstance);

    pageFn.create = createPage;

    Object.defineProperty(pageFn, 'len', {
      get: function(){
        return pageInstance.len;
      },
      set: function(val) {
        pageInstance.len = val;
      }
    });

    Object.defineProperty(pageFn, 'current', {
      get: function(){
        return pageInstance.current;
      },
      set: function(val) {
        pageInstance.current = val;
      }
    });

    // In 2.0 these can be named exports
    pageFn.Context = Context;
    pageFn.Route = Route;

    return pageFn;
  }

  /**
   * Register `path` with callback `fn()`,
   * or route `path`, or redirection,
   * or `page.start()`.
   *
   *   page(fn);
   *   page('*', fn);
   *   page('/user/:id', load, user);
   *   page('/user/' + user.id, { some: 'thing' });
   *   page('/user/' + user.id);
   *   page('/from', '/to')
   *   page();
   *
   * @param {string|!Function|!Object} path
   * @param {Function=} fn
   * @api public
   */

  function page(path, fn) {
    // <callback>
    if ('function' === typeof path) {
      return page.call(this, '*', path);
    }

    // route <path> to <callback ...>
    if ('function' === typeof fn) {
      var route = new Route(/** @type {string} */ (path), null, this);
      for (var i = 1; i < arguments.length; ++i) {
        this.callbacks.push(route.middleware(arguments[i]));
      }
      // show <path> with [state]
    } else if ('string' === typeof path) {
      this['string' === typeof fn ? 'redirect' : 'show'](path, fn);
      // start [options]
    } else {
      this.start(path);
    }
  }

  /**
   * Unhandled `ctx`. When it's not the initial
   * popstate then redirect. If you wish to handle
   * 404s on your own use `page('*', callback)`.
   *
   * @param {Context} ctx
   * @api private
   */
  function unhandled(ctx) {
    if (ctx.handled) return;
    var current;
    var page = this;
    var window = page._window;

    if (page._hashbang) {
      current = isLocation && this._getBase() + window.location.hash.replace('#!', '');
    } else {
      current = isLocation && window.location.pathname + window.location.search;
    }

    if (current === ctx.canonicalPath) return;
    page.stop();
    ctx.handled = false;
    isLocation && (window.location.href = ctx.canonicalPath);
  }

  /**
   * Initialize a new "request" `Context`
   * with the given `path` and optional initial `state`.
   *
   * @constructor
   * @param {string} path
   * @param {Object=} state
   * @api public
   */

  function Context(path, state, pageInstance) {
    var _page = this.page = pageInstance || page;
    var window = _page._window;
    var hashbang = _page._hashbang;

    var pageBase = _page._getBase();
    if ('/' === path[0] && 0 !== path.indexOf(pageBase)) path = pageBase + (hashbang ? '#!' : '') + path;
    var i = path.indexOf('?');

    this.canonicalPath = path;
    this.path = path.replace(pageBase, '') || '/';
    if (hashbang) this.path = this.path.replace('#!', '') || '/';

    this.title = (hasDocument && window.document.title);
    this.state = state || {};
    this.state.path = path;
    this.querystring = ~i ? _page._decodeURLEncodedURIComponent(path.slice(i + 1)) : '';
    this.pathname = _page._decodeURLEncodedURIComponent(~i ? path.slice(0, i) : path);
    this.params = {};

    // fragment
    this.hash = '';
    if (!hashbang) {
      if (!~this.path.indexOf('#')) return;
      var parts = this.path.split('#');
      this.path = this.pathname = parts[0];
      this.hash = _page._decodeURLEncodedURIComponent(parts[1]) || '';
      this.querystring = this.querystring.split('#')[0];
    }
  }

  /**
   * Push state.
   *
   * @api private
   */

  Context.prototype.pushState = function() {
    var page = this.page;
    var window = page._window;
    var hashbang = page._hashbang;

    page.len++;
    if (hasHistory) {
        window.history.pushState(this.state, this.title,
          hashbang && this.path !== '/' ? '#!' + this.path : this.canonicalPath);
    }
  };

  /**
   * Save the context state.
   *
   * @api public
   */

  Context.prototype.save = function() {
    var page = this.page;
    if (hasHistory && page._window.location.protocol !== 'file:') {
        page._window.history.replaceState(this.state, this.title,
          page._hashbang && this.path !== '/' ? '#!' + this.path : this.canonicalPath);
    }
  };

  /**
   * Initialize `Route` with the given HTTP `path`,
   * and an array of `callbacks` and `options`.
   *
   * Options:
   *
   *   - `sensitive`    enable case-sensitive routes
   *   - `strict`       enable strict matching for trailing slashes
   *
   * @constructor
   * @param {string} path
   * @param {Object=} options
   * @api private
   */

  function Route(path, options, page) {
    var _page = this.page = page || globalPage;
    var opts = options || {};
    opts.strict = opts.strict || page._strict;
    this.path = (path === '*') ? '(.*)' : path;
    this.method = 'GET';
    this.regexp = pathToRegexp_1(this.path, this.keys = [], opts);
  }

  /**
   * Return route middleware with
   * the given callback `fn()`.
   *
   * @param {Function} fn
   * @return {Function}
   * @api public
   */

  Route.prototype.middleware = function(fn) {
    var self = this;
    return function(ctx, next) {
      if (self.match(ctx.path, ctx.params)) return fn(ctx, next);
      next();
    };
  };

  /**
   * Check if this route matches `path`, if so
   * populate `params`.
   *
   * @param {string} path
   * @param {Object} params
   * @return {boolean}
   * @api private
   */

  Route.prototype.match = function(path, params) {
    var keys = this.keys,
      qsIndex = path.indexOf('?'),
      pathname = ~qsIndex ? path.slice(0, qsIndex) : path,
      m = this.regexp.exec(decodeURIComponent(pathname));

    if (!m) return false;

    for (var i = 1, len = m.length; i < len; ++i) {
      var key = keys[i - 1];
      var val = this.page._decodeURLEncodedURIComponent(m[i]);
      if (val !== undefined || !(hasOwnProperty.call(params, key.name))) {
        params[key.name] = val;
      }
    }

    return true;
  };


  /**
   * Module exports.
   */

  var globalPage = createPage();
  var page_js = globalPage;
  page.default = globalPage;

return page_js;

})));

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../process/browser.js */ "./node_modules/process/browser.js")))

/***/ }),

/***/ "./node_modules/process/browser.js":
/*!*****************************************!*\
  !*** ./node_modules/process/browser.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };


/***/ }),

/***/ "./node_modules/regenerator-runtime/runtime.js":
/*!*****************************************************!*\
  !*** ./node_modules/regenerator-runtime/runtime.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

!(function(global) {
  "use strict";

  var Op = Object.prototype;
  var hasOwn = Op.hasOwnProperty;
  var undefined; // More compressible than void 0.
  var $Symbol = typeof Symbol === "function" ? Symbol : {};
  var iteratorSymbol = $Symbol.iterator || "@@iterator";
  var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
  var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";

  var inModule = typeof module === "object";
  var runtime = global.regeneratorRuntime;
  if (runtime) {
    if (inModule) {
      // If regeneratorRuntime is defined globally and we're in a module,
      // make the exports object identical to regeneratorRuntime.
      module.exports = runtime;
    }
    // Don't bother evaluating the rest of this file if the runtime was
    // already defined globally.
    return;
  }

  // Define the runtime globally (as expected by generated code) as either
  // module.exports (if we're in a module) or a new, empty object.
  runtime = global.regeneratorRuntime = inModule ? module.exports : {};

  function wrap(innerFn, outerFn, self, tryLocsList) {
    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.
    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
    var generator = Object.create(protoGenerator.prototype);
    var context = new Context(tryLocsList || []);

    // The ._invoke method unifies the implementations of the .next,
    // .throw, and .return methods.
    generator._invoke = makeInvokeMethod(innerFn, self, context);

    return generator;
  }
  runtime.wrap = wrap;

  // Try/catch helper to minimize deoptimizations. Returns a completion
  // record like context.tryEntries[i].completion. This interface could
  // have been (and was previously) designed to take a closure to be
  // invoked without arguments, but in all the cases we care about we
  // already have an existing method we want to call, so there's no need
  // to create a new function object. We can even get away with assuming
  // the method takes exactly one argument, since that happens to be true
  // in every case, so we don't have to touch the arguments object. The
  // only additional allocation required is the completion record, which
  // has a stable shape and so hopefully should be cheap to allocate.
  function tryCatch(fn, obj, arg) {
    try {
      return { type: "normal", arg: fn.call(obj, arg) };
    } catch (err) {
      return { type: "throw", arg: err };
    }
  }

  var GenStateSuspendedStart = "suspendedStart";
  var GenStateSuspendedYield = "suspendedYield";
  var GenStateExecuting = "executing";
  var GenStateCompleted = "completed";

  // Returning this object from the innerFn has the same effect as
  // breaking out of the dispatch switch statement.
  var ContinueSentinel = {};

  // Dummy constructor functions that we use as the .constructor and
  // .constructor.prototype properties for functions that return Generator
  // objects. For full spec compliance, you may wish to configure your
  // minifier not to mangle the names of these two functions.
  function Generator() {}
  function GeneratorFunction() {}
  function GeneratorFunctionPrototype() {}

  // This is a polyfill for %IteratorPrototype% for environments that
  // don't natively support it.
  var IteratorPrototype = {};
  IteratorPrototype[iteratorSymbol] = function () {
    return this;
  };

  var getProto = Object.getPrototypeOf;
  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));
  if (NativeIteratorPrototype &&
      NativeIteratorPrototype !== Op &&
      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
    // This environment has a native %IteratorPrototype%; use it instead
    // of the polyfill.
    IteratorPrototype = NativeIteratorPrototype;
  }

  var Gp = GeneratorFunctionPrototype.prototype =
    Generator.prototype = Object.create(IteratorPrototype);
  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
  GeneratorFunctionPrototype.constructor = GeneratorFunction;
  GeneratorFunctionPrototype[toStringTagSymbol] =
    GeneratorFunction.displayName = "GeneratorFunction";

  // Helper for defining the .next, .throw, and .return methods of the
  // Iterator interface in terms of a single ._invoke method.
  function defineIteratorMethods(prototype) {
    ["next", "throw", "return"].forEach(function(method) {
      prototype[method] = function(arg) {
        return this._invoke(method, arg);
      };
    });
  }

  runtime.isGeneratorFunction = function(genFun) {
    var ctor = typeof genFun === "function" && genFun.constructor;
    return ctor
      ? ctor === GeneratorFunction ||
        // For the native GeneratorFunction constructor, the best we can
        // do is to check its .name property.
        (ctor.displayName || ctor.name) === "GeneratorFunction"
      : false;
  };

  runtime.mark = function(genFun) {
    if (Object.setPrototypeOf) {
      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
    } else {
      genFun.__proto__ = GeneratorFunctionPrototype;
      if (!(toStringTagSymbol in genFun)) {
        genFun[toStringTagSymbol] = "GeneratorFunction";
      }
    }
    genFun.prototype = Object.create(Gp);
    return genFun;
  };

  // Within the body of any async function, `await x` is transformed to
  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
  // `hasOwn.call(value, "__await")` to determine if the yielded value is
  // meant to be awaited.
  runtime.awrap = function(arg) {
    return { __await: arg };
  };

  function AsyncIterator(generator) {
    function invoke(method, arg, resolve, reject) {
      var record = tryCatch(generator[method], generator, arg);
      if (record.type === "throw") {
        reject(record.arg);
      } else {
        var result = record.arg;
        var value = result.value;
        if (value &&
            typeof value === "object" &&
            hasOwn.call(value, "__await")) {
          return Promise.resolve(value.__await).then(function(value) {
            invoke("next", value, resolve, reject);
          }, function(err) {
            invoke("throw", err, resolve, reject);
          });
        }

        return Promise.resolve(value).then(function(unwrapped) {
          // When a yielded Promise is resolved, its final value becomes
          // the .value of the Promise<{value,done}> result for the
          // current iteration. If the Promise is rejected, however, the
          // result for this iteration will be rejected with the same
          // reason. Note that rejections of yielded Promises are not
          // thrown back into the generator function, as is the case
          // when an awaited Promise is rejected. This difference in
          // behavior between yield and await is important, because it
          // allows the consumer to decide what to do with the yielded
          // rejection (swallow it and continue, manually .throw it back
          // into the generator, abandon iteration, whatever). With
          // await, by contrast, there is no opportunity to examine the
          // rejection reason outside the generator function, so the
          // only option is to throw it from the await expression, and
          // let the generator function handle the exception.
          result.value = unwrapped;
          resolve(result);
        }, reject);
      }
    }

    var previousPromise;

    function enqueue(method, arg) {
      function callInvokeWithMethodAndArg() {
        return new Promise(function(resolve, reject) {
          invoke(method, arg, resolve, reject);
        });
      }

      return previousPromise =
        // If enqueue has been called before, then we want to wait until
        // all previous Promises have been resolved before calling invoke,
        // so that results are always delivered in the correct order. If
        // enqueue has not been called before, then it is important to
        // call invoke immediately, without waiting on a callback to fire,
        // so that the async generator function has the opportunity to do
        // any necessary setup in a predictable way. This predictability
        // is why the Promise constructor synchronously invokes its
        // executor callback, and why async functions synchronously
        // execute code before the first await. Since we implement simple
        // async functions in terms of async generators, it is especially
        // important to get this right, even though it requires care.
        previousPromise ? previousPromise.then(
          callInvokeWithMethodAndArg,
          // Avoid propagating failures to Promises returned by later
          // invocations of the iterator.
          callInvokeWithMethodAndArg
        ) : callInvokeWithMethodAndArg();
    }

    // Define the unified helper method that is used to implement .next,
    // .throw, and .return (see defineIteratorMethods).
    this._invoke = enqueue;
  }

  defineIteratorMethods(AsyncIterator.prototype);
  AsyncIterator.prototype[asyncIteratorSymbol] = function () {
    return this;
  };
  runtime.AsyncIterator = AsyncIterator;

  // Note that simple async functions are implemented on top of
  // AsyncIterator objects; they just return a Promise for the value of
  // the final result produced by the iterator.
  runtime.async = function(innerFn, outerFn, self, tryLocsList) {
    var iter = new AsyncIterator(
      wrap(innerFn, outerFn, self, tryLocsList)
    );

    return runtime.isGeneratorFunction(outerFn)
      ? iter // If outerFn is a generator, return the full iterator.
      : iter.next().then(function(result) {
          return result.done ? result.value : iter.next();
        });
  };

  function makeInvokeMethod(innerFn, self, context) {
    var state = GenStateSuspendedStart;

    return function invoke(method, arg) {
      if (state === GenStateExecuting) {
        throw new Error("Generator is already running");
      }

      if (state === GenStateCompleted) {
        if (method === "throw") {
          throw arg;
        }

        // Be forgiving, per 25.3.3.3.3 of the spec:
        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume
        return doneResult();
      }

      context.method = method;
      context.arg = arg;

      while (true) {
        var delegate = context.delegate;
        if (delegate) {
          var delegateResult = maybeInvokeDelegate(delegate, context);
          if (delegateResult) {
            if (delegateResult === ContinueSentinel) continue;
            return delegateResult;
          }
        }

        if (context.method === "next") {
          // Setting context._sent for legacy support of Babel's
          // function.sent implementation.
          context.sent = context._sent = context.arg;

        } else if (context.method === "throw") {
          if (state === GenStateSuspendedStart) {
            state = GenStateCompleted;
            throw context.arg;
          }

          context.dispatchException(context.arg);

        } else if (context.method === "return") {
          context.abrupt("return", context.arg);
        }

        state = GenStateExecuting;

        var record = tryCatch(innerFn, self, context);
        if (record.type === "normal") {
          // If an exception is thrown from innerFn, we leave state ===
          // GenStateExecuting and loop back for another invocation.
          state = context.done
            ? GenStateCompleted
            : GenStateSuspendedYield;

          if (record.arg === ContinueSentinel) {
            continue;
          }

          return {
            value: record.arg,
            done: context.done
          };

        } else if (record.type === "throw") {
          state = GenStateCompleted;
          // Dispatch the exception by looping back around to the
          // context.dispatchException(context.arg) call above.
          context.method = "throw";
          context.arg = record.arg;
        }
      }
    };
  }

  // Call delegate.iterator[context.method](context.arg) and handle the
  // result, either by returning a { value, done } result from the
  // delegate iterator, or by modifying context.method and context.arg,
  // setting context.delegate to null, and returning the ContinueSentinel.
  function maybeInvokeDelegate(delegate, context) {
    var method = delegate.iterator[context.method];
    if (method === undefined) {
      // A .throw or .return when the delegate iterator has no .throw
      // method always terminates the yield* loop.
      context.delegate = null;

      if (context.method === "throw") {
        if (delegate.iterator.return) {
          // If the delegate iterator has a return method, give it a
          // chance to clean up.
          context.method = "return";
          context.arg = undefined;
          maybeInvokeDelegate(delegate, context);

          if (context.method === "throw") {
            // If maybeInvokeDelegate(context) changed context.method from
            // "return" to "throw", let that override the TypeError below.
            return ContinueSentinel;
          }
        }

        context.method = "throw";
        context.arg = new TypeError(
          "The iterator does not provide a 'throw' method");
      }

      return ContinueSentinel;
    }

    var record = tryCatch(method, delegate.iterator, context.arg);

    if (record.type === "throw") {
      context.method = "throw";
      context.arg = record.arg;
      context.delegate = null;
      return ContinueSentinel;
    }

    var info = record.arg;

    if (! info) {
      context.method = "throw";
      context.arg = new TypeError("iterator result is not an object");
      context.delegate = null;
      return ContinueSentinel;
    }

    if (info.done) {
      // Assign the result of the finished delegate to the temporary
      // variable specified by delegate.resultName (see delegateYield).
      context[delegate.resultName] = info.value;

      // Resume execution at the desired location (see delegateYield).
      context.next = delegate.nextLoc;

      // If context.method was "throw" but the delegate handled the
      // exception, let the outer generator proceed normally. If
      // context.method was "next", forget context.arg since it has been
      // "consumed" by the delegate iterator. If context.method was
      // "return", allow the original .return call to continue in the
      // outer generator.
      if (context.method !== "return") {
        context.method = "next";
        context.arg = undefined;
      }

    } else {
      // Re-yield the result returned by the delegate method.
      return info;
    }

    // The delegate iterator is finished, so forget it and continue with
    // the outer generator.
    context.delegate = null;
    return ContinueSentinel;
  }

  // Define Generator.prototype.{next,throw,return} in terms of the
  // unified ._invoke helper method.
  defineIteratorMethods(Gp);

  Gp[toStringTagSymbol] = "Generator";

  // A Generator should always return itself as the iterator object when the
  // @@iterator function is called on it. Some browsers' implementations of the
  // iterator prototype chain incorrectly implement this, causing the Generator
  // object to not be returned from this call. This ensures that doesn't happen.
  // See https://github.com/facebook/regenerator/issues/274 for more details.
  Gp[iteratorSymbol] = function() {
    return this;
  };

  Gp.toString = function() {
    return "[object Generator]";
  };

  function pushTryEntry(locs) {
    var entry = { tryLoc: locs[0] };

    if (1 in locs) {
      entry.catchLoc = locs[1];
    }

    if (2 in locs) {
      entry.finallyLoc = locs[2];
      entry.afterLoc = locs[3];
    }

    this.tryEntries.push(entry);
  }

  function resetTryEntry(entry) {
    var record = entry.completion || {};
    record.type = "normal";
    delete record.arg;
    entry.completion = record;
  }

  function Context(tryLocsList) {
    // The root entry object (effectively a try statement without a catch
    // or a finally block) gives us a place to store values thrown from
    // locations where there is no enclosing try statement.
    this.tryEntries = [{ tryLoc: "root" }];
    tryLocsList.forEach(pushTryEntry, this);
    this.reset(true);
  }

  runtime.keys = function(object) {
    var keys = [];
    for (var key in object) {
      keys.push(key);
    }
    keys.reverse();

    // Rather than returning an object with a next method, we keep
    // things simple and return the next function itself.
    return function next() {
      while (keys.length) {
        var key = keys.pop();
        if (key in object) {
          next.value = key;
          next.done = false;
          return next;
        }
      }

      // To avoid creating an additional object, we just hang the .value
      // and .done properties off the next function object itself. This
      // also ensures that the minifier will not anonymize the function.
      next.done = true;
      return next;
    };
  };

  function values(iterable) {
    if (iterable) {
      var iteratorMethod = iterable[iteratorSymbol];
      if (iteratorMethod) {
        return iteratorMethod.call(iterable);
      }

      if (typeof iterable.next === "function") {
        return iterable;
      }

      if (!isNaN(iterable.length)) {
        var i = -1, next = function next() {
          while (++i < iterable.length) {
            if (hasOwn.call(iterable, i)) {
              next.value = iterable[i];
              next.done = false;
              return next;
            }
          }

          next.value = undefined;
          next.done = true;

          return next;
        };

        return next.next = next;
      }
    }

    // Return an iterator with no values.
    return { next: doneResult };
  }
  runtime.values = values;

  function doneResult() {
    return { value: undefined, done: true };
  }

  Context.prototype = {
    constructor: Context,

    reset: function(skipTempReset) {
      this.prev = 0;
      this.next = 0;
      // Resetting context._sent for legacy support of Babel's
      // function.sent implementation.
      this.sent = this._sent = undefined;
      this.done = false;
      this.delegate = null;

      this.method = "next";
      this.arg = undefined;

      this.tryEntries.forEach(resetTryEntry);

      if (!skipTempReset) {
        for (var name in this) {
          // Not sure about the optimal order of these conditions:
          if (name.charAt(0) === "t" &&
              hasOwn.call(this, name) &&
              !isNaN(+name.slice(1))) {
            this[name] = undefined;
          }
        }
      }
    },

    stop: function() {
      this.done = true;

      var rootEntry = this.tryEntries[0];
      var rootRecord = rootEntry.completion;
      if (rootRecord.type === "throw") {
        throw rootRecord.arg;
      }

      return this.rval;
    },

    dispatchException: function(exception) {
      if (this.done) {
        throw exception;
      }

      var context = this;
      function handle(loc, caught) {
        record.type = "throw";
        record.arg = exception;
        context.next = loc;

        if (caught) {
          // If the dispatched exception was caught by a catch block,
          // then let that catch block handle the exception normally.
          context.method = "next";
          context.arg = undefined;
        }

        return !! caught;
      }

      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        var record = entry.completion;

        if (entry.tryLoc === "root") {
          // Exception thrown outside of any try block that could handle
          // it, so set the completion value of the entire function to
          // throw the exception.
          return handle("end");
        }

        if (entry.tryLoc <= this.prev) {
          var hasCatch = hasOwn.call(entry, "catchLoc");
          var hasFinally = hasOwn.call(entry, "finallyLoc");

          if (hasCatch && hasFinally) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            } else if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }

          } else if (hasCatch) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            }

          } else if (hasFinally) {
            if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }

          } else {
            throw new Error("try statement without catch or finally");
          }
        }
      }
    },

    abrupt: function(type, arg) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc <= this.prev &&
            hasOwn.call(entry, "finallyLoc") &&
            this.prev < entry.finallyLoc) {
          var finallyEntry = entry;
          break;
        }
      }

      if (finallyEntry &&
          (type === "break" ||
           type === "continue") &&
          finallyEntry.tryLoc <= arg &&
          arg <= finallyEntry.finallyLoc) {
        // Ignore the finally entry if control is not jumping to a
        // location outside the try/catch block.
        finallyEntry = null;
      }

      var record = finallyEntry ? finallyEntry.completion : {};
      record.type = type;
      record.arg = arg;

      if (finallyEntry) {
        this.method = "next";
        this.next = finallyEntry.finallyLoc;
        return ContinueSentinel;
      }

      return this.complete(record);
    },

    complete: function(record, afterLoc) {
      if (record.type === "throw") {
        throw record.arg;
      }

      if (record.type === "break" ||
          record.type === "continue") {
        this.next = record.arg;
      } else if (record.type === "return") {
        this.rval = this.arg = record.arg;
        this.method = "return";
        this.next = "end";
      } else if (record.type === "normal" && afterLoc) {
        this.next = afterLoc;
      }

      return ContinueSentinel;
    },

    finish: function(finallyLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.finallyLoc === finallyLoc) {
          this.complete(entry.completion, entry.afterLoc);
          resetTryEntry(entry);
          return ContinueSentinel;
        }
      }
    },

    "catch": function(tryLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc === tryLoc) {
          var record = entry.completion;
          if (record.type === "throw") {
            var thrown = record.arg;
            resetTryEntry(entry);
          }
          return thrown;
        }
      }

      // The context.catch method must only be called with a location
      // argument that corresponds to a known catch block.
      throw new Error("illegal catch attempt");
    },

    delegateYield: function(iterable, resultName, nextLoc) {
      this.delegate = {
        iterator: values(iterable),
        resultName: resultName,
        nextLoc: nextLoc
      };

      if (this.method === "next") {
        // Deliberately forget the last sent value so that we don't
        // accidentally pass it on to the delegate.
        this.arg = undefined;
      }

      return ContinueSentinel;
    }
  };
})(
  // In sloppy mode, unbound `this` refers to the global object, fallback to
  // Function constructor if we're in global strict mode. That is sadly a form
  // of indirect eval which violates Content Security Policy.
  (function() { return this })() || Function("return this")()
);


/***/ }),

/***/ "./node_modules/setimmediate/setImmediate.js":
/*!***************************************************!*\
  !*** ./node_modules/setimmediate/setImmediate.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global, process) {(function (global, undefined) {
    "use strict";

    if (global.setImmediate) {
        return;
    }

    var nextHandle = 1; // Spec says greater than zero
    var tasksByHandle = {};
    var currentlyRunningATask = false;
    var doc = global.document;
    var registerImmediate;

    function setImmediate(callback) {
      // Callback can either be a function or a string
      if (typeof callback !== "function") {
        callback = new Function("" + callback);
      }
      // Copy function arguments
      var args = new Array(arguments.length - 1);
      for (var i = 0; i < args.length; i++) {
          args[i] = arguments[i + 1];
      }
      // Store and register the task
      var task = { callback: callback, args: args };
      tasksByHandle[nextHandle] = task;
      registerImmediate(nextHandle);
      return nextHandle++;
    }

    function clearImmediate(handle) {
        delete tasksByHandle[handle];
    }

    function run(task) {
        var callback = task.callback;
        var args = task.args;
        switch (args.length) {
        case 0:
            callback();
            break;
        case 1:
            callback(args[0]);
            break;
        case 2:
            callback(args[0], args[1]);
            break;
        case 3:
            callback(args[0], args[1], args[2]);
            break;
        default:
            callback.apply(undefined, args);
            break;
        }
    }

    function runIfPresent(handle) {
        // From the spec: "Wait until any invocations of this algorithm started before this one have completed."
        // So if we're currently running a task, we'll need to delay this invocation.
        if (currentlyRunningATask) {
            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a
            // "too much recursion" error.
            setTimeout(runIfPresent, 0, handle);
        } else {
            var task = tasksByHandle[handle];
            if (task) {
                currentlyRunningATask = true;
                try {
                    run(task);
                } finally {
                    clearImmediate(handle);
                    currentlyRunningATask = false;
                }
            }
        }
    }

    function installNextTickImplementation() {
        registerImmediate = function(handle) {
            process.nextTick(function () { runIfPresent(handle); });
        };
    }

    function canUsePostMessage() {
        // The test against `importScripts` prevents this implementation from being installed inside a web worker,
        // where `global.postMessage` means something completely different and can't be used for this purpose.
        if (global.postMessage && !global.importScripts) {
            var postMessageIsAsynchronous = true;
            var oldOnMessage = global.onmessage;
            global.onmessage = function() {
                postMessageIsAsynchronous = false;
            };
            global.postMessage("", "*");
            global.onmessage = oldOnMessage;
            return postMessageIsAsynchronous;
        }
    }

    function installPostMessageImplementation() {
        // Installs an event handler on `global` for the `message` event: see
        // * https://developer.mozilla.org/en/DOM/window.postMessage
        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages

        var messagePrefix = "setImmediate$" + Math.random() + "$";
        var onGlobalMessage = function(event) {
            if (event.source === global &&
                typeof event.data === "string" &&
                event.data.indexOf(messagePrefix) === 0) {
                runIfPresent(+event.data.slice(messagePrefix.length));
            }
        };

        if (global.addEventListener) {
            global.addEventListener("message", onGlobalMessage, false);
        } else {
            global.attachEvent("onmessage", onGlobalMessage);
        }

        registerImmediate = function(handle) {
            global.postMessage(messagePrefix + handle, "*");
        };
    }

    function installMessageChannelImplementation() {
        var channel = new MessageChannel();
        channel.port1.onmessage = function(event) {
            var handle = event.data;
            runIfPresent(handle);
        };

        registerImmediate = function(handle) {
            channel.port2.postMessage(handle);
        };
    }

    function installReadyStateChangeImplementation() {
        var html = doc.documentElement;
        registerImmediate = function(handle) {
            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted
            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.
            var script = doc.createElement("script");
            script.onreadystatechange = function () {
                runIfPresent(handle);
                script.onreadystatechange = null;
                html.removeChild(script);
                script = null;
            };
            html.appendChild(script);
        };
    }

    function installSetTimeoutImplementation() {
        registerImmediate = function(handle) {
            setTimeout(runIfPresent, 0, handle);
        };
    }

    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.
    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);
    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;

    // Don't get fooled by e.g. browserify environments.
    if ({}.toString.call(global.process) === "[object process]") {
        // For Node.js before 0.9
        installNextTickImplementation();

    } else if (canUsePostMessage()) {
        // For non-IE10 modern browsers
        installPostMessageImplementation();

    } else if (global.MessageChannel) {
        // For web workers, where supported
        installMessageChannelImplementation();

    } else if (doc && "onreadystatechange" in doc.createElement("script")) {
        // For IE 6–8
        installReadyStateChangeImplementation();

    } else {
        // For older browsers
        installSetTimeoutImplementation();
    }

    attachTo.setImmediate = setImmediate;
    attachTo.clearImmediate = clearImmediate;
}(typeof self === "undefined" ? typeof global === "undefined" ? this : global : self));

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js"), __webpack_require__(/*! ./../process/browser.js */ "./node_modules/process/browser.js")))

/***/ }),

/***/ "./node_modules/timers-browserify/main.js":
/*!************************************************!*\
  !*** ./node_modules/timers-browserify/main.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {var scope = (typeof global !== "undefined" && global) ||
            (typeof self !== "undefined" && self) ||
            window;
var apply = Function.prototype.apply;

// DOM APIs, for completeness

exports.setTimeout = function() {
  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);
};
exports.setInterval = function() {
  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);
};
exports.clearTimeout =
exports.clearInterval = function(timeout) {
  if (timeout) {
    timeout.close();
  }
};

function Timeout(id, clearFn) {
  this._id = id;
  this._clearFn = clearFn;
}
Timeout.prototype.unref = Timeout.prototype.ref = function() {};
Timeout.prototype.close = function() {
  this._clearFn.call(scope, this._id);
};

// Does not start the time, just sets up the members needed.
exports.enroll = function(item, msecs) {
  clearTimeout(item._idleTimeoutId);
  item._idleTimeout = msecs;
};

exports.unenroll = function(item) {
  clearTimeout(item._idleTimeoutId);
  item._idleTimeout = -1;
};

exports._unrefActive = exports.active = function(item) {
  clearTimeout(item._idleTimeoutId);

  var msecs = item._idleTimeout;
  if (msecs >= 0) {
    item._idleTimeoutId = setTimeout(function onTimeout() {
      if (item._onTimeout)
        item._onTimeout();
    }, msecs);
  }
};

// setimmediate attaches itself to the global object
__webpack_require__(/*! setimmediate */ "./node_modules/setimmediate/setImmediate.js");
// On some exotic environments, it's not clear which object `setimmediate` was
// able to install onto.  Search each possibility in the same order as the
// `setimmediate` library.
exports.setImmediate = (typeof self !== "undefined" && self.setImmediate) ||
                       (typeof global !== "undefined" && global.setImmediate) ||
                       (this && this.setImmediate);
exports.clearImmediate = (typeof self !== "undefined" && self.clearImmediate) ||
                         (typeof global !== "undefined" && global.clearImmediate) ||
                         (this && this.clearImmediate);

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js")))

/***/ }),

/***/ "./node_modules/webpack/buildin/global.js":
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || Function("return this")() || (1, eval)("this");
} catch (e) {
	// This works if the window reference is available
	if (typeof window === "object") g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),

/***/ "./static/js/action-input-form.js":
/*!****************************************!*\
  !*** ./static/js/action-input-form.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * ActionInputForm.
 *
 * Represents an input form for an action.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */


__webpack_require__(/*! core-js/modules/es7.array.includes */ "./node_modules/core-js/modules/es7.array.includes.js");

__webpack_require__(/*! core-js/modules/es6.object.assign */ "./node_modules/core-js/modules/es6.object.assign.js");

__webpack_require__(/*! core-js/modules/es7.symbol.async-iterator */ "./node_modules/core-js/modules/es7.symbol.async-iterator.js");

__webpack_require__(/*! core-js/modules/es6.symbol */ "./node_modules/core-js/modules/es6.symbol.js");

__webpack_require__(/*! core-js/modules/es6.array.from */ "./node_modules/core-js/modules/es6.array.from.js");

__webpack_require__(/*! core-js/modules/es6.array.sort */ "./node_modules/core-js/modules/es6.array.sort.js");

__webpack_require__(/*! core-js/modules/web.dom.iterable */ "./node_modules/core-js/modules/web.dom.iterable.js");

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var API = __webpack_require__(/*! ./api */ "./static/js/api.js");

var Utils = __webpack_require__(/*! ./utils */ "./static/js/utils.js");

var ActionInputForm = function ActionInputForm(href, name, label, schema) {
  this.container = document.getElementById('things');
  this.href = href;
  this.name = name;
  this.label = label || name;
  this.schema = schema;
  this.inputs = {};
  this.element = this.render();
  this.form = this.element.querySelector(`.action-input-form`);
  this.form.addEventListener('submit', this.handleSubmit.bind(this));
};

ActionInputForm.prototype.render = function () {
  var element = document.createElement('div');
  var form = `<div class="action-input">
    <div class="action-input-title">${Utils.escapeHtml(this.label)}</div>
    <form class="action-input-form">`;
  var inputs = [];
  var requiredFields = [];

  if (this.schema.type === 'object') {
    if (this.schema.hasOwnProperty('required') && Array.isArray(this.schema.required)) {
      requiredFields = this.schema.required;
    }

    var _iteratorNormalCompletion = true;
    var _didIteratorError = false;
    var _iteratorError = undefined;

    try {
      for (var _iterator = Array.from(Object.keys(this.schema.properties)).sort()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var name = _step.value;
        inputs.push(Object.assign({}, this.schema.properties[name], {
          name: name
        }));
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator.return != null) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }
  } else {
    inputs.push(Object.assign({}, this.schema, {
      name: '__default__'
    }));
    requiredFields.push('__default__');
  }

  for (var _i = 0; _i < inputs.length; _i++) {
    var input = inputs[_i];

    var _name = Utils.escapeHtmlForIdClass(input.name);

    this.inputs[_name] = input.name;
    form += `<span class="action-input-name">`;

    if (input.name !== '__default__') {
      form += Utils.escapeHtml(input.name);
    }

    form += '</span>';
    var required = '';

    if (requiredFields.includes(input.name)) {
      required = 'required';
    }

    var unit = '<span class="action-input-unit">';

    if (input.hasOwnProperty('unit')) {
      unit += Utils.escapeHtml(Utils.unitNameToAbbreviation(input.unit));
    }

    unit += '</span>'; // list item

    if (Array.isArray(input.enum) && (input.type === 'number' || input.type === 'integer' || input.type === 'string')) {
      // User can select undefiend value on field not required.
      if (required === '') {
        input.enum.unshift('');
      }

      var selects = input.enum.map(function (value, i) {
        return `<option key="${i}" value="${Utils.escapeHtml(value)}">
                  ${Utils.escapeHtml(value)}
                </option>`;
      });
      form += `<select name="${_name}" class="action-input-enum" ${required}>
                 ${selects.join(' ')}
               </select>${unit}`;
      continue;
    }

    switch (input.type) {
      case 'number':
      case 'integer':
        {
          var step = void 0;

          if (input.hasOwnProperty('multipleOf')) {
            step = `${input.multipleOf}`;
          } else if (input.type === 'number') {
            step = 'any';
          } else {
            step = '1';
          }

          var min = '';

          if (input.hasOwnProperty('minimum')) {
            min = `min="${input.minimum}"`;
          }

          var max = '';

          if (input.hasOwnProperty('maximum')) {
            max = `max="${input.maximum}"`;
          }

          var numberClass = min && max ? '' : 'hide-number-spinner';
          form += `<input type="number" name="${_name}" step="${step}" ${min}
                        ${max} class="action-input-number ${numberClass}"
                        ${required}>${unit}`;
          break;
        }

      case 'boolean':
        // Do NOT add "required" to the checkbox, as it will always fail
        // validation when unchecked. Its value will always be sent anyway.
        form += `<span>
          <input type="checkbox" name="${_name}" class="action-input-checkbox"
                 id="checkbox-${_name}">
          <label for="checkbox-${_name}"></label>
          </span>
          ${unit}`;
        break;

      case 'object':
      case 'array':
      case 'string':
      default:
        // We don't currently handle arrays or nested objects. Just treat
        // them as a string.
        form += `<input type="text" name="${_name}"
                        class="action-input-string" ${required}>${unit}`;
        break;
    }
  }

  form += `
    <input id="action-submit-button" type="submit"
      class="action-button" value="Submit">
    </form></div>`;
  element.innerHTML = form;
  return this.container.appendChild(element.firstChild);
};

ActionInputForm.prototype.handleSubmit = function (e) {
  var _this = this;

  e.preventDefault();
  var input;

  if (this.schema.type === 'object') {
    input = {};
  } else {
    input = null;
  }

  var _iteratorNormalCompletion2 = true;
  var _didIteratorError2 = false;
  var _iteratorError2 = undefined;

  try {
    for (var _iterator2 = this.element.getElementsByTagName('select')[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
      var el = _step2.value;

      if (el.value.length == 0) {
        continue;
      }

      var schema = void 0;

      if (el.name === '__default__') {
        schema = this.schema;
      } else {
        schema = this.inputs[el.name];
      }

      var value = void 0;

      if (schema.type === 'number') {
        value = Number(el.value);
      } else {
        value = el.value;
      }

      if (el.name === '__default__') {
        input = value;
        break;
      } else {
        input[this.inputs[el.name]] = value;
      }
    }
  } catch (err) {
    _didIteratorError2 = true;
    _iteratorError2 = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion2 && _iterator2.return != null) {
        _iterator2.return();
      }
    } finally {
      if (_didIteratorError2) {
        throw _iteratorError2;
      }
    }
  }

  var _iteratorNormalCompletion3 = true;
  var _didIteratorError3 = false;
  var _iteratorError3 = undefined;

  try {
    for (var _iterator3 = this.element.getElementsByTagName('input')[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
      var _el = _step3.value;

      var _value = void 0;

      if (_el.type === 'submit') {
        continue;
      } else if (_el.type === 'checkbox') {
        _value = _el.checked;
      } else if (_el.value.length > 0) {
        if (_el.type === 'number') {
          _value = Number(_el.value);
        } else {
          _value = _el.value;
        }
      } else {
        continue;
      }

      if (_el.name === '__default__') {
        input = _value;
        break;
      } else {
        input[this.inputs[_el.name]] = _value;
      }
    }
  } catch (err) {
    _didIteratorError3 = true;
    _iteratorError3 = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion3 && _iterator3.return != null) {
        _iterator3.return();
      }
    } finally {
      if (_didIteratorError3) {
        throw _iteratorError3;
      }
    }
  }

  var body;

  if (input) {
    body = JSON.stringify(_defineProperty({}, this.name, {
      input: input
    }));
  } else {
    body = JSON.stringify(_defineProperty({}, this.name, {}));
  }

  fetch(this.href, {
    method: 'POST',
    body: body,
    headers: {
      Authorization: `Bearer ${API.jwt}`,
      Accept: 'application/json',
      'Content-Type': 'application/json'
    }
  }).then(function () {
    window.history.back();
  }).catch(function (e) {
    console.error(`Error performing action "${_this.name}": ${e}`);
  });
  return false;
};

module.exports = ActionInputForm;

/***/ }),

/***/ "./static/js/adapter.js":
/*!******************************!*\
  !*** ./static/js/adapter.js ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Adapter.
 *
 * Represents an individual adapter (e.g. ZigBee, Z-Wave, or Philips Hue).
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */


var Utils = __webpack_require__(/*! ./utils */ "./static/js/utils.js");
/**
 * Adapter constructor.
 *
 * @param Object description Adapter metadata object.
 */


var Adapter = function Adapter(metadata) {
  this.name = metadata.name;
  this.id = metadata.id;
  this.ready = metadata.ready;
  this.container = document.getElementById('adapters-list');
  this.render();
};
/**
 * HTML view for Adapter.
 */


Adapter.prototype.view = function () {
  var buttonText, buttonClass;

  if (this.ready) {
    buttonText = 'Disable';
    buttonClass = 'adapter-settings-disable';
  } else {
    buttonText = 'Enable';
    buttonClass = 'adapter-settings-enable';
  }

  return `
    <li class="adapter-item">
      <div class="adapter-settings-header">
        <span class="adapter-settings-name">${Utils.escapeHtml(this.name)}
        </span>
        <span class="adapter-settings-description">${Utils.escapeHtml(this.id)}
        </span>
      </div>
      <div class="adapter-settings-controls">
        <!--button id="adapter-toggle-${Utils.escapeHtml(this.id)}"
          class="text-button ${buttonClass}"
          adapterEnabled="${Utils.escapeHtml(this.ready)}">
          ${buttonText}
        </button-->
      </div>
    </li>`;
};
/**
 * Render Adapter view and add to DOM.
 */


Adapter.prototype.render = function () {
  this.container.insertAdjacentHTML('beforeend', this.view());
  /*
  const button = document.getElementById(
    `adapter-toggle-${Utils.escapeHtml(this.id)}`);
  button.addEventListener('click', this.handleToggle.bind(this));
  */
};
/**
 * Handle a click on the enable/disable button.
 */


Adapter.prototype.handleToggle = function () {};

module.exports = Adapter;

/***/ }),

/***/ "./static/js/add-thing.js":
/*!********************************!*\
  !*** ./static/js/add-thing.js ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Add Thing Screen.
 *
 * UI for adding Things to the gateway.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */


__webpack_require__(/*! core-js/modules/web.dom.iterable */ "./node_modules/core-js/modules/web.dom.iterable.js");

__webpack_require__(/*! core-js/modules/es6.set */ "./node_modules/core-js/modules/es6.set.js");

var API = __webpack_require__(/*! ./api */ "./static/js/api.js");

var App = __webpack_require__(/*! ./app */ "./static/js/app.js");

var NewThing = __webpack_require__(/*! ./new-thing */ "./static/js/new-thing.js");

var NewWebThing = __webpack_require__(/*! ./new-web-thing */ "./static/js/new-web-thing.js");

var SettingsScreen = __webpack_require__(/*! ./settings */ "./static/js/settings.js");

var AddThingScreen = {
  /**
   * URL of curent pair action request.
   */
  actionUrl: null,

  /**
   * Initialise Add Thing Screen.
   */
  init: function init() {
    this.element = document.getElementById('add-thing-screen');
    this.backButton = document.getElementById('add-thing-back-button');
    this.cancelButton = document.getElementById('add-thing-cancel-button');
    this.newThingsElement = document.getElementById('new-things');
    this.scanStatus = document.getElementById('add-thing-status');
    this.addonsHint = document.getElementById('add-adapters-hint');
    this.addonsHintAnchor = document.getElementById('add-adapters-hint-anchor');
    this.addByUrlAnchor = document.getElementById('add-by-url-anchor');
    this.pairingTimeout = null;
    this.visibleThings = new Set(); // Add event listeners

    this.backButton.addEventListener('click', this.hide.bind(this));
    this.cancelButton.addEventListener('click', this.hide.bind(this));
    this.addonsHintAnchor.addEventListener('click', this.hide.bind(this));
    this.addByUrlAnchor.addEventListener('click', this.showNewWebThing.bind(this));
  },

  /**
   * Create a new "pair" action on the gateway.
   */
  requestPairing: function requestPairing() {
    var _this = this;

    this.scanStatus.classList.remove('hidden');
    this.addonsHint.classList.add('hidden');
    var proto = 'ws:';

    if (window.location.protocol === 'https:') {
      proto = 'wss:';
    }

    var path = `${proto}//${App.HOST}/new_things?jwt=${API.jwt}`; // Create a websocket to start listening for new things

    this.socket = new WebSocket(path);

    this.socket.onmessage = function (event) {
      _this.showNewThing(JSON.parse(event.data));
    }; // Timeout, in seconds.


    var timeout = 60;
    var action = {
      pair: {
        input: {
          timeout: timeout
        }
      }
    };
    fetch('/actions', {
      method: 'POST',
      body: JSON.stringify(action),
      headers: {
        Authorization: `Bearer ${API.jwt}`,
        Accept: 'application/json',
        'Content-Type': 'application/json'
      }
    }).then(function (response) {
      return response.json();
    }).then(function (json) {
      _this.actionUrl = json.pair.href;
      _this.pairingTimeout = setTimeout(function () {
        _this.scanStatus.classList.add('hidden');

        if (_this.visibleThings.size === 0) {
          _this.addonsHint.classList.remove('hidden');
        }

        _this.pairingTimeout = null;

        _this.requestCancelPairing();
      }, timeout * 1000);
    }).catch(function (error) {
      console.error(`Pairing request failed: ${error}`);
    });
  },

  /**
   * Cancel a pairing request.
   */
  requestCancelPairing: function requestCancelPairing() {
    var _this2 = this;

    if (this.pairingTimeout !== null) {
      clearTimeout(this.pairingTimeout);
      this.pairingTimeout = null;
    } // Close websocket.


    if (typeof this.socket !== 'undefined') {
      this.socket.close();
      delete this.socket;
    }

    var url = this.actionUrl;

    if (!url) {
      return;
    }

    fetch(url, {
      method: 'DELETE',
      headers: {
        Accept: 'application/json',
        'Content-Type': 'application/json',
        Authorization: `Bearer ${API.jwt}`
      }
    }).then(function (response) {
      if (response.ok) {
        _this2.actionUrl = null;
      } else {
        console.error(`Error cancelling pairing request ${response.statusText}`);
      }
    }).catch(function (error) {
      console.error(`Error cancelling pairing request ${error}`);
    });
  },

  /**
   * Show Add Thing Screen.
   */
  show: function show() {
    var _this3 = this;

    this.addByUrlAnchor.classList.add('hidden');
    SettingsScreen.fetchInstalledAddonList(true).then(function () {
      if (SettingsScreen.installedAddons.has('thing-url-adapter')) {
        var addon = SettingsScreen.installedAddons.get('thing-url-adapter');

        if (addon.moziot.enabled) {
          _this3.addByUrlAnchor.classList.remove('hidden');
        }
      }
    });
    this.cancelButton.textContent = 'Cancel';
    this.element.classList.remove('hidden');
    this.newThingsElement.innerHTML = '';
    this.visibleThings.clear();
    this.requestPairing();
  },

  /**
   * Hide Add Thing Screen.
   */
  hide: function hide() {
    this.element.classList.add('hidden');
    this.requestCancelPairing();
    App.gatewayModel.refreshThings();
  },
  showNewThing: function showNewThing(thing) {
    if (!this.visibleThings.has(thing.id)) {
      this.visibleThings.add(thing.id);
      new NewThing(thing.id, thing);
    }
  },
  showNewWebThing: function showNewWebThing(e) {
    e.preventDefault();
    new NewWebThing();
  }
};
module.exports = AddThingScreen;

/***/ }),

/***/ "./static/js/addon-config.js":
/*!***********************************!*\
  !*** ./static/js/addon-config.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * AddonConfig.
 *
 * Configuration screen for the addon installed.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */


var SchemaForm = __webpack_require__(/*! ./schema-form/schema-form */ "./static/js/schema-form/schema-form.js");

var page = __webpack_require__(/*! page */ "./node_modules/page/page.js");

var API = __webpack_require__(/*! ./api */ "./static/js/api.js");
/**
 * AddonConfig constructor.
 *
 * @param {Object} id add-on id.
 * @param {Object} metadata metadata object.
 */


var AddonConfig = function AddonConfig(id, metadata) {
  this.schema = metadata.moziot.schema;
  this.config = metadata.moziot.config;
  this.id = id;
  this.name = metadata.name;
  this.container = document.getElementById('addon-config-settings');
  this.render();
};

AddonConfig.prototype.scrollToTop = function () {
  this.container.scrollTop = 0;
};

AddonConfig.prototype.handleApply = function (formData, errors) {
  var _this = this;

  if (errors.length > 0) {
    this.scrollToTop();
  } else {
    this.configForm.submitButton.innerText = 'Applying...';
    API.setAddonConfig(this.id, formData).then(function () {
      page('/settings/addons');
    }).catch(function (err) {
      console.error(`Failed to set config add-on: ${_this.name}\n${err}`);

      _this.configForm.errorField.render([err]);

      _this.configForm.submitButton.innerText = 'Apply';
    });
  }
};
/**
 * Render AddonConfig view and add to DOM.
 */


AddonConfig.prototype.render = function () {
  this.configForm = new SchemaForm(this.schema, `addon-config-${this.id}`, this.name, this.config, this.handleApply.bind(this), {
    submitText: 'Apply'
  });
  this.container.appendChild(this.configForm.render());
};

module.exports = AddonConfig;

/***/ }),

/***/ "./static/js/api.js":
/*!**************************!*\
  !*** ./static/js/api.js ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Temporary API for interacting with the server.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */


var API = {
  jwt: localStorage.getItem('jwt'),
  isLoggedIn: function isLoggedIn() {
    return !!this.jwt;
  },

  /**
     * The default options to use with fetching API calls
     * @return {Object}
     */
  headers: function headers() {
    var headers = {
      Accept: 'application/json'
    };

    if (this.jwt) {
      headers.Authorization = `Bearer ${this.jwt}`;
    }

    return headers;
  },
  userCount: function userCount() {
    var opts = {
      headers: {
        Accept: 'application/json'
      }
    };
    return fetch('/users/count', opts).then(function (res) {
      return res.json();
    }).then(function (body) {
      return body.count;
    });
  },
  assertJWT: function assertJWT() {
    if (!this.jwt) {
      throw new Error('No JWT go login..');
    }
  },
  verifyJWT: function verifyJWT() {
    var opts = {
      headers: {
        Authorization: `Bearer ${API.jwt}`,
        Accept: 'application/json'
      }
    };
    return fetch('/things/', opts).then(function (res) {
      return res.ok;
    });
  },
  createUser: function createUser(name, email, password) {
    var opts = {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        Accept: 'application/json'
      },
      body: JSON.stringify({
        name: name,
        email: email,
        password: password
      })
    };
    return fetch('/users/', opts).then(function (res) {
      if (!res.ok) {
        throw new Error('Repeating signup not permitted');
      }

      return res.json();
    }).then(function (body) {
      var jwt = body.jwt;
      localStorage.setItem('jwt', jwt);
      API.jwt = jwt;
    });
  },
  getUser: function getUser(id) {
    var opts = {
      headers: {
        Accept: 'application/json',
        Authorization: `Bearer ${API.jwt}`
      }
    };
    return fetch(`/users/${encodeURIComponent(id)}`, opts).then(function (res) {
      if (!res.ok) {
        throw new Error('Unable to access user info');
      }

      return res.json();
    });
  },
  addUser: function addUser(name, email, password) {
    var opts = {
      method: 'POST',
      headers: {
        Accept: 'application/json',
        Authorization: `Bearer ${API.jwt}`,
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        name: name,
        email: email,
        password: password
      })
    };
    return fetch('/users/', opts).then(function (res) {
      if (!res.ok) {
        throw new Error('Failed to add new user');
      }
    });
  },
  editUser: function editUser(id, name, email, password, newPassword) {
    var opts = {
      method: 'PUT',
      headers: {
        Accept: 'application/json',
        Authorization: `Bearer ${API.jwt}`,
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        id: id,
        name: name,
        email: email,
        password: password,
        newPassword: newPassword
      })
    };
    return fetch(`/users/${encodeURIComponent(id)}`, opts).then(function (res) {
      if (!res.ok) {
        throw new Error('Failed to edit user');
      }
    });
  },
  addLocalDomain: function addLocalDomain(domainName) {
    var opts = {
      method: 'POST',
      headers: {
        Accept: 'application/json',
        Authorization: `Bearer ${window.API.jwt}`,
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        domainName: domainName
      })
    };
    return fetch('/users/', opts).then(function (res) {
      if (!res.ok) {
        throw new Error('Failed to change domain name');
      }
    });
  },
  deleteUser: function deleteUser(id) {
    var opts = {
      method: 'DELETE',
      headers: {
        Accept: 'application/json',
        Authorization: `Bearer ${API.jwt}`
      }
    };
    return fetch(`/users/${encodeURIComponent(id)}`, opts).then(function (res) {
      if (!res.ok) {
        throw new Error('Failed to delete user');
      }
    });
  },
  getAllUserInfo: function getAllUserInfo() {
    var opts = {
      headers: {
        Accept: 'application/json',
        Authorization: `Bearer ${API.jwt}`
      }
    };
    return fetch('/users/info', opts).then(function (response) {
      if (!response.ok) {
        throw new Error('Unable to access user info');
      }

      return response.json();
    });
  },
  login: function login(email, password) {
    var opts = {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        Accept: 'application/json'
      },
      body: JSON.stringify({
        email: email,
        password: password
      })
    };
    return fetch('/login/', opts).then(function (res) {
      if (!res.ok) {
        throw new Error('Incorrect username or password');
      }

      return res.json();
    }).then(function (body) {
      var jwt = body.jwt;
      localStorage.setItem('jwt', jwt);
      API.jwt = jwt;
    });
  },
  logout: function logout() {
    this.assertJWT();
    localStorage.removeItem('jwt');
    return fetch('/log-out', {
      method: 'POST',
      headers: {
        Authorization: `Bearer ${API.jwt}`,
        'Content-Type': 'application/json',
        Accept: 'application/json'
      }
    }).then(function (res) {
      if (!res.ok) {
        console.error('Logout failed...');
      }
    });
  },
  setAddonConfig: function setAddonConfig(addonName, config) {
    var headers = {
      Authorization: `Bearer ${API.jwt}`,
      Accept: 'application/json',
      'Content-Type': 'application/json'
    };
    var payload = {
      config: config
    };
    var body = JSON.stringify(payload);
    return fetch(`/addons/${encodeURIComponent(addonName)}/config`, {
      method: 'PUT',
      body: body,
      headers: headers
    }).then(function (response) {
      if (!response.ok) {
        throw new Error('Unexpected response code while setting add-on config');
      }
    });
  },
  setAddonSetting: function setAddonSetting(addonName, enabled) {
    var headers = {
      Authorization: `Bearer ${API.jwt}`,
      Accept: 'application/json',
      'Content-Type': 'application/json'
    };
    var payload = {
      enabled: enabled
    };
    return fetch(`/addons/${encodeURIComponent(addonName)}`, {
      method: 'PUT',
      body: JSON.stringify(payload),
      headers: headers
    }).then(function (response) {
      if (!response.ok) {
        throw new Error('Unexpected response code while setting add-on setting');
      }
    });
  },
  installAddon: function installAddon(addonName, addonUrl, addonChecksum) {
    var headers = {
      Authorization: `Bearer ${API.jwt}`,
      Accept: 'application/json',
      'Content-Type': 'application/json'
    };
    var payload = {
      name: addonName,
      url: addonUrl,
      checksum: addonChecksum
    };
    return fetch('/addons', {
      method: 'POST',
      body: JSON.stringify(payload),
      headers: headers
    }).then(function (response) {
      if (!response.ok) {
        throw new Error('Unexpected response code while installing add-on.');
      }

      return response.json();
    });
  },
  uninstallAddon: function uninstallAddon(addonName) {
    var headers = {
      Authorization: `Bearer ${API.jwt}`,
      Accept: 'application/json',
      'Content-Type': 'application/json'
    };
    return fetch(`/addons/${encodeURIComponent(addonName)}`, {
      method: 'DELETE',
      headers: headers
    }).then(function (response) {
      if (!response.ok) {
        throw new Error('Unexpected response code while uninstalling add-on.');
      }
    });
  },
  updateAddon: function updateAddon(addonName, addonUrl, addonChecksum) {
    var headers = {
      Authorization: `Bearer ${API.jwt}`,
      Accept: 'application/json',
      'Content-Type': 'application/json'
    };
    var payload = {
      url: addonUrl,
      checksum: addonChecksum
    };
    return fetch(`/addons/${encodeURIComponent(addonName)}`, {
      method: 'PATCH',
      body: JSON.stringify(payload),
      headers: headers
    }).then(function (response) {
      if (!response.ok) {
        throw new Error('Unexpected response code while updating add-on.');
      }
    });
  },
  getExperimentSetting: function getExperimentSetting(experimentName) {
    var headers = {
      Authorization: `Bearer ${API.jwt}`,
      Accept: 'application/json'
    };
    return fetch(`/settings/experiments/${encodeURIComponent(experimentName)}`, {
      method: 'GET',
      headers: headers
    }).then(function (response) {
      if (!response.ok) {
        if (response.status === 404) {
          return false;
        }

        throw new Error(`Error getting ${experimentName}`);
      }

      return response.json().then(function (json) {
        return json.enabled;
      }).catch(function (e) {
        throw new Error(`Error getting ${experimentName} ${e}`);
      });
    });
  },
  setExperimentSetting: function setExperimentSetting(experimentName, enabled) {
    var headers = {
      Authorization: `Bearer ${API.jwt}`,
      Accept: 'application/json',
      'Content-Type': 'application/json'
    };
    var payload = {
      enabled: enabled
    };
    return fetch(`/settings/experiments/${encodeURIComponent(experimentName)}`, {
      method: 'PUT',
      body: JSON.stringify(payload),
      headers: headers
    }).then(function (response) {
      if (!response.ok) {
        throw new Error('Unexpected response code while setting experiment setting');
      }
    });
  },
  getUpdateStatus: function getUpdateStatus() {
    return fetch('/updates/status', {
      headers: this.headers()
    }).then(function (res) {
      return res.json();
    });
  },
  getUpdateLatest: function getUpdateLatest() {
    return fetch('/updates/latest', {
      headers: this.headers()
    }).then(function (res) {
      return res.json();
    });
  }
};
window.API = API;
module.exports = API;

/***/ }),

/***/ "./static/js/app.js":
/*!**************************!*\
  !*** ./static/js/app.js ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Things Gateway App.
 *
 * Front end main script.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */
 // eslint-disable-next-line prefer-const

__webpack_require__(/*! core-js/modules/es7.symbol.async-iterator */ "./node_modules/core-js/modules/es7.symbol.async-iterator.js");

__webpack_require__(/*! core-js/modules/es6.symbol */ "./node_modules/core-js/modules/es6.symbol.js");

__webpack_require__(/*! core-js/modules/web.dom.iterable */ "./node_modules/core-js/modules/web.dom.iterable.js");

__webpack_require__(/*! core-js/modules/es6.regexp.split */ "./node_modules/core-js/modules/es6.regexp.split.js");

__webpack_require__(/*! core-js/modules/es6.regexp.replace */ "./node_modules/core-js/modules/es6.regexp.replace.js");

var API; // eslint-disable-next-line prefer-const

var AssistantScreen; // eslint-disable-next-line prefer-const

var GatewayModel; // eslint-disable-next-line prefer-const

var ThingsScreen; // eslint-disable-next-line prefer-const

var AddThingScreen; // eslint-disable-next-line prefer-const

var Menu; // eslint-disable-next-line prefer-const

var ContextMenu; // eslint-disable-next-line prefer-const

var SettingsScreen; // eslint-disable-next-line prefer-const

var FloorplanScreen; // eslint-disable-next-line prefer-const

var Router; // eslint-disable-next-line prefer-const

var RulesScreen; // eslint-disable-next-line prefer-const

var RuleScreen; // eslint-disable-next-line prefer-const

var Speech;

var Notifications = __webpack_require__(/*! ./notifications */ "./static/js/notifications.js");

var App = {
  /**
   * Current server host.
   */
  HOST: window.location.host,

  /**
   * Current server origin.
   */
  ORIGIN: window.location.origin,

  /**
   * Maximum number of allowed ping failures.
   */
  MAX_PING_FAILURES: 3,

  /**
   * Interval at which to ping to check for connectivity.
   */
  PING_INTERVAL: 20 * 1000,

  /**
   * Start Things Gateway app.
   */
  init: function init() {
    AddThingScreen.init();
    ContextMenu.init();
    AssistantScreen.init();
    ThingsScreen.init();
    SettingsScreen.init();
    FloorplanScreen.init();
    Speech.init();
    RulesScreen.init();
    RuleScreen.init();
    this.views = [];
    this.views.things = document.getElementById('things-view');
    this.views.floorplan = document.getElementById('floorplan-view');
    this.views.settings = document.getElementById('settings-view');
    this.views.rules = document.getElementById('rules-view');
    this.views.rule = document.getElementById('rule-view');
    this.views.assistant = document.getElementById('assistant-view');
    this.currentView = 'things';
    this.menuButton = document.getElementById('menu-button');
    this.menuButton.addEventListener('click', Menu.toggle.bind(Menu));
    this.overflowButton = document.getElementById('overflow-button');
    this.overflowButton.addEventListener('click', this.toggleOverflowMenu.bind(this));
    this.overflowMenu = document.getElementById('overflow-menu');
    this.blockMessages = false;
    this.messageArea = document.getElementById('message-area');
    this.messageTimeout = null;
    this.connectivityOverlay = document.getElementById('connectivity-scrim');
    this.pingerInterval = null;
    this.pingerLastStatus = null;
    this.failedPings = 0;
    this.startPinger();
    this.gatewayModel = new GatewayModel();
    this.wsBackoff = 1000;
    this.initWebSocket();
    Menu.init();
    Router.init();
  },
  initWebSocket: function initWebSocket() {
    var _this = this;

    var path = `${this.ORIGIN.replace(/^http/, 'ws')}/logs?jwt=${API.jwt}`;
    this.messageSocket = new WebSocket(path);
    this.messageSocket.addEventListener('open', function () {
      // Reset the backoff period
      _this.wsBackoff = 1000;
    }, {
      once: true
    });

    var onMessage = function onMessage(msg) {
      var message = JSON.parse(msg.data);

      _this.showMessage(message.message, 5000);
    };

    var cleanup = function cleanup() {
      _this.messageSocket.removeEventListener('message', onMessage);

      _this.messageSocket.removeEventListener('close', cleanup);

      _this.messageSocket.removeEventListener('error', cleanup);

      _this.messageSocket.close();

      _this.messageSocket = null;
      setTimeout(function () {
        _this.wsBackoff *= 2;

        if (_this.wsBackoff > 30000) {
          _this.wsBackoff = 30000;
        }

        _this.initWebSocket();
      }, _this.wsBackoff);
    };

    this.messageSocket.addEventListener('message', onMessage);
    this.messageSocket.addEventListener('close', cleanup);
    this.messageSocket.addEventListener('error', cleanup);
  },
  startPinger: function startPinger() {
    var _this2 = this;

    fetch(`${this.ORIGIN}/ping`, {
      headers: {
        Accept: 'application/json'
      }
    }).then(function (res) {
      if (!res.ok) {
        throw new Error(`Bad return status: ${res.status}`);
      }

      if (_this2.pingerLastStatus === 'offline') {
        window.location.reload();
      } else {
        _this2.failedPings = 0;
        _this2.pingerLastStatus = 'online';

        _this2.connectivityOverlay.classList.add('hidden');

        _this2.messageArea.classList.remove('disconnected');

        if (_this2.messageArea.innerText === 'Gateway Unreachable') {
          _this2.hidePersistentMessage();
        }
      }
    }).catch(function (e) {
      console.error('Gateway unreachable:', e);

      if (++_this2.failedPings >= _this2.MAX_PING_FAILURES) {
        _this2.connectivityOverlay.classList.remove('hidden');

        _this2.messageArea.classList.add('disconnected');

        _this2.showPersistentMessage('Gateway Unreachable');

        _this2.pingerLastStatus = 'offline';
      }
    });

    if (!this.pingerInterval) {
      this.pingerInterval = setInterval(this.startPinger.bind(this), this.PING_INTERVAL);
    }
  },
  showAssistant: function showAssistant() {
    AssistantScreen.show();
    this.selectView('assistant');
  },
  showThings: function showThings(context) {
    var events = context.pathname.split('/').pop() === 'events';
    ThingsScreen.show(context.params.thingId || null, context.params.actionName || null, events, context.querystring);
    this.selectView('things');
  },
  showSettings: function showSettings(context) {
    SettingsScreen.show(context.params.section || null, context.params.subsection || null, context.params.id || null);
    this.selectView('settings');
  },
  showFloorplan: function showFloorplan() {
    FloorplanScreen.show();
    this.selectView('floorplan');
  },
  showRules: function showRules() {
    RulesScreen.show();
    this.selectView('rules');
  },
  showRule: function showRule(context) {
    RuleScreen.show(context.params.rule);
    this.selectView('rule');
  },
  selectView: function selectView(view) {
    if (!this.views[view]) {
      console.error('Tried to select view that didnt exist');
      return;
    }

    this.views[this.currentView].classList.remove('selected');
    this.views[view].classList.add('selected');
    Menu.selectItem(view);
    this.currentView = view;
  },
  showMenuButton: function showMenuButton() {
    this.menuButton.classList.remove('hidden');
  },
  hideMenuButton: function hideMenuButton() {
    this.menuButton.classList.add('hidden');
  },
  showOverflowButton: function showOverflowButton() {
    this.overflowButton.classList.remove('hidden');
  },
  hideOverflowButton: function hideOverflowButton() {
    this.overflowMenu.classList.add('hidden');
    this.overflowButton.classList.add('hidden');
  },
  buildOverflowMenu: function buildOverflowMenu(links) {
    var _this3 = this;

    this.overflowMenu.innerHTML = '';
    var _iteratorNormalCompletion = true;
    var _didIteratorError = false;
    var _iteratorError = undefined;

    try {
      var _loop = function _loop() {
        var link = _step.value;
        var element = document.createElement('a');
        element.innerText = link.name;

        if (link.listener) {
          element.href = '#';
          element.addEventListener('click', function (e) {
            e.preventDefault();

            _this3.toggleOverflowMenu();

            link.listener();
          });
        } else {
          element.href = link.href;
          element.addEventListener('click', function () {
            _this3.toggleOverflowMenu();
          });
        }

        if (link.icon) {
          var image = document.createElement('img');
          image.src = link.icon;
          image.alt = `${link.name} icon`;
          element.insertBefore(image, element.childNodes[0]);
        }

        _this3.overflowMenu.appendChild(element);
      };

      for (var _iterator = links[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        _loop();
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator.return != null) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }
  },
  toggleOverflowMenu: function toggleOverflowMenu() {
    if (this.overflowMenu.classList.contains('hidden')) {
      this.overflowMenu.classList.remove('hidden');
    } else {
      this.overflowMenu.classList.add('hidden');
    }
  },
  showPersistentMessage: function showPersistentMessage(message) {
    this.showMessage(message);
    this.blockMessages = true;
  },
  hidePersistentMessage: function hidePersistentMessage() {
    if (this.blockMessages) {
      this.hideMessageArea();
      this.blockMessages = false;
    }
  },
  showMessageArea: function showMessageArea() {
    this.messageArea.classList.remove('hidden');
  },
  hideMessageArea: function hideMessageArea() {
    this.messageArea.classList.add('hidden');
  },
  showMessage: function showMessage(message, duration) {
    var _this4 = this;

    if (this.messageTimeout !== null) {
      clearTimeout(this.messageTimeout);
      this.messageTimeout = null;
    }

    if (this.blockMessages) {
      return;
    }

    this.messageArea.innerHTML = message;
    this.showMessageArea();

    if (typeof duration === 'number') {
      this.messageTimeout = setTimeout(function () {
        _this4.messageTimeout = null;

        _this4.hideMessageArea();
      }, duration);
    }
  }
};
module.exports = App; // avoid circular dependency

API = __webpack_require__(/*! ./api */ "./static/js/api.js");
AssistantScreen = __webpack_require__(/*! ./assistant */ "./static/js/assistant.js");
GatewayModel = __webpack_require__(/*! ./models/gateway-model */ "./static/js/models/gateway-model.js");
ThingsScreen = __webpack_require__(/*! ./things */ "./static/js/things.js");
AddThingScreen = __webpack_require__(/*! ./add-thing */ "./static/js/add-thing.js");
Menu = __webpack_require__(/*! ./menu */ "./static/js/menu.js");
ContextMenu = __webpack_require__(/*! ./context-menu */ "./static/js/context-menu.js");
SettingsScreen = __webpack_require__(/*! ./settings */ "./static/js/settings.js");
FloorplanScreen = __webpack_require__(/*! ./floorplan */ "./static/js/floorplan.js");
Router = __webpack_require__(/*! ./router */ "./static/js/router.js");
RulesScreen = __webpack_require__(/*! ./rules-screen */ "./static/js/rules-screen.js");
RuleScreen = __webpack_require__(/*! ./rule-screen */ "./static/js/rule-screen.js");
Speech = __webpack_require__(/*! ./speech */ "./static/js/speech.js"); // load web components

__webpack_require__(/*! @webcomponents/webcomponentsjs/webcomponents-bundle */ "./node_modules/@webcomponents/webcomponentsjs/webcomponents-bundle.js");

__webpack_require__(/*! ./components/capability/binary-sensor */ "./static/js/components/capability/binary-sensor.js");

__webpack_require__(/*! ./components/capability/color-control */ "./static/js/components/capability/color-control.js");

__webpack_require__(/*! ./components/capability/custom */ "./static/js/components/capability/custom.js");

__webpack_require__(/*! ./components/capability/door-sensor */ "./static/js/components/capability/door-sensor.js");

__webpack_require__(/*! ./components/capability/energy-monitor */ "./static/js/components/capability/energy-monitor.js");

__webpack_require__(/*! ./components/capability/label */ "./static/js/components/capability/label.js");

__webpack_require__(/*! ./components/capability/light */ "./static/js/components/capability/light.js");

__webpack_require__(/*! ./components/capability/motion-sensor */ "./static/js/components/capability/motion-sensor.js");

__webpack_require__(/*! ./components/capability/multi-level-sensor */ "./static/js/components/capability/multi-level-sensor.js");

__webpack_require__(/*! ./components/capability/multi-level-switch */ "./static/js/components/capability/multi-level-switch.js");

__webpack_require__(/*! ./components/capability/on-off-switch */ "./static/js/components/capability/on-off-switch.js");

__webpack_require__(/*! ./components/capability/push-button */ "./static/js/components/capability/push-button.js");

__webpack_require__(/*! ./components/capability/smart-plug */ "./static/js/components/capability/smart-plug.js");

__webpack_require__(/*! ./components/icon/custom */ "./static/js/components/icon/custom.js");

__webpack_require__(/*! ./components/property/action */ "./static/js/components/property/action.js");

__webpack_require__(/*! ./components/property/boolean */ "./static/js/components/property/boolean.js");

__webpack_require__(/*! ./components/property/brightness */ "./static/js/components/property/brightness.js");

__webpack_require__(/*! ./components/property/color */ "./static/js/components/property/color.js");

__webpack_require__(/*! ./components/property/color-temperature */ "./static/js/components/property/color-temperature.js");

__webpack_require__(/*! ./components/property/current */ "./static/js/components/property/current.js");

__webpack_require__(/*! ./components/property/enum */ "./static/js/components/property/enum.js");

__webpack_require__(/*! ./components/property/frequency */ "./static/js/components/property/frequency.js");

__webpack_require__(/*! ./components/property/instantaneous-power */ "./static/js/components/property/instantaneous-power.js");

__webpack_require__(/*! ./components/property/level */ "./static/js/components/property/level.js");

__webpack_require__(/*! ./components/property/motion */ "./static/js/components/property/motion.js");

__webpack_require__(/*! ./components/property/number */ "./static/js/components/property/number.js");

__webpack_require__(/*! ./components/property/numeric-label */ "./static/js/components/property/numeric-label.js");

__webpack_require__(/*! ./components/property/on-off */ "./static/js/components/property/on-off.js");

__webpack_require__(/*! ./components/property/open */ "./static/js/components/property/open.js");

__webpack_require__(/*! ./components/property/pushed */ "./static/js/components/property/pushed.js");

__webpack_require__(/*! ./components/property/slider */ "./static/js/components/property/slider.js");

__webpack_require__(/*! ./components/property/string */ "./static/js/components/property/string.js");

__webpack_require__(/*! ./components/property/string-label */ "./static/js/components/property/string-label.js");

__webpack_require__(/*! ./components/property/switch */ "./static/js/components/property/switch.js");

__webpack_require__(/*! ./components/property/voltage */ "./static/js/components/property/voltage.js");

if (navigator.serviceWorker) {
  navigator.serviceWorker.register('/service-worker.js', {
    scope: '/'
  });
  navigator.serviceWorker.ready.then(Notifications.onReady);
}
/**
  * Start app on page load.
  */


window.addEventListener('load', function app_onLoad() {
  window.removeEventListener('load', app_onLoad);
  App.init();
});

/***/ }),

/***/ "./static/js/assistant.js":
/*!********************************!*\
  !*** ./static/js/assistant.js ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Smart Assistant.
 *
 * A chat-style UI to control things with spoken and written commands.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */


__webpack_require__(/*! core-js/modules/es6.promise */ "./node_modules/core-js/modules/es6.promise.js");

__webpack_require__(/*! core-js/modules/es7.symbol.async-iterator */ "./node_modules/core-js/modules/es7.symbol.async-iterator.js");

__webpack_require__(/*! core-js/modules/es6.symbol */ "./node_modules/core-js/modules/es6.symbol.js");

__webpack_require__(/*! core-js/modules/web.dom.iterable */ "./node_modules/core-js/modules/web.dom.iterable.js");

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }

function _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var API = __webpack_require__(/*! ./api */ "./static/js/api.js");

var App = __webpack_require__(/*! ./app */ "./static/js/app.js");

var Constants = __webpack_require__(/*! ./constants */ "./static/js/constants.js"); // eslint-disable-next-line no-unused-vars


var AssistantScreen = {
  /**
   * Initialise Assistant Screen.
   */
  init: function init() {
    this.messages = document.getElementById('assistant-messages');
    this.hint = document.getElementById('assistant-hint');
    this.avatar = document.getElementById('assistant-avatar');
    this.textInput = document.getElementById('assistant-text-input');
    this.textSubmit = document.getElementById('assistant-text-submit');
    this.textInput.addEventListener('keyup', this.handleInput.bind(this));
    this.textSubmit.addEventListener('click', this.handleSubmit.bind(this));
    this.avatar.addEventListener('click', this.handleAvatarClick.bind(this));
    this.refreshHint = this.refreshHint.bind(this);
  },

  /**
   * Show Assistant screen.
   */
  show: function show() {
    document.getElementById('speech-wrapper').classList.add('assistant');
    this.messages.scrollTop = this.messages.scrollHeight;

    if (this.messages.children.length === 0) {
      this.hint.classList.remove('hidden');
    } else {
      this.hint.classList.add('hidden');
    }

    App.gatewayModel.unsubscribe(Constants.REFRESH_THINGS, this.refreshHint);
    App.gatewayModel.subscribe(Constants.REFRESH_THINGS, this.refreshHint, true);
  },
  refreshHint: function refreshHint(things) {
    var commands = [];
    things.forEach(function (thingDescr) {
      var types = thingDescr['@type'];

      if (!types || types.length === 0) {
        types = [thingDescr.selectedCapability];
      }

      var _iteratorNormalCompletion = true;
      var _didIteratorError = false;
      var _iteratorError = undefined;

      try {
        for (var _iterator = types[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var type = _step.value;

          switch (type) {
            case 'OnOffSwitch':
              commands.push(`Turn the ${thingDescr.name} on`);
              break;

            case 'Light':
              if (thingDescr.properties.level) {
                commands.push(`Dim the ${thingDescr.name}`);
              }

              break;

            case 'ColorControl':
              commands.push(`Turn the ${thingDescr.name} red`);
              break;
          }
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return != null) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }
    });

    if (commands.length > 0) {
      var command = commands[Math.floor(Math.random() * commands.length)];
      this.hint.textContent = `Try commands like "${command}"`;
    }
  },
  submitCommand: function submitCommand(text) {
    var _this = this;

    var opts = {
      method: 'POST',
      cache: 'default',
      body: JSON.stringify({
        text: text
      }),
      headers: {
        Authorization: `Bearer ${API.jwt}`,
        Accept: 'application/json',
        'Content-Type': 'application/json'
      }
    };
    return fetch('/commands', opts).then(function (response) {
      return Promise.all([Promise.resolve(response.ok), response.json()]);
    }).then(function (values) {
      var _values = _slicedToArray(values, 2),
          ok = _values[0],
          body = _values[1];

      if (!ok) {
        var error = 'Sorry, something went wrong.';

        if (body.hasOwnProperty('message')) {
          error = body.message;
        }

        throw new Error(error);
      }

      var verb,
          preposition = '';

      switch (body.payload.keyword) {
        case 'make':
          verb = 'making';
          break;

        case 'change':
          verb = 'changing';
          break;

        case 'set':
          verb = 'setting';
          preposition = 'to ';
          break;

        case 'dim':
          verb = 'dimming';
          preposition = 'by ';
          break;

        case 'brighten':
          verb = 'brightening';
          preposition = 'by ';
          break;

        case 'turn':
        case 'switch':
        default:
          verb = `${body.payload.keyword}ing`;
          break;
      }

      var value = body.payload.value ? body.payload.value : '';
      var message = `OK, ${verb} the ${body.payload.thing} ${preposition}${value}.`;

      _this.displayMessage(message, 'incoming');

      return {
        message: message,
        success: true
      };
    }).catch(function (e) {
      var message = e.message || 'Sorry, something went wrong.';

      _this.displayMessage(message, 'incoming');

      return {
        message: message,
        success: false
      };
    });
  },
  displayMessage: function displayMessage(text, direction) {
    this.hint.classList.add('hidden');
    var cls = direction === 'incoming' ? 'assistant-message-incoming' : 'assistant-message-outgoing';
    var node = document.createElement('div');
    node.classList.add(cls);
    node.innerText = text;
    this.messages.appendChild(node);
    this.messages.scrollTop = this.messages.scrollHeight;
  },
  handleInput: function handleInput(e) {
    if (e.keyCode === 13) {
      var text = e.target.value;
      this.displayMessage(text, 'outgoing');
      this.submitCommand(text);
      e.target.value = '';
    }
  },
  handleSubmit: function handleSubmit() {
    var text = this.textInput.value;
    this.displayMessage(text, 'outgoing');
    this.submitCommand(text);
    this.textInput.value = '';
  },
  handleSpeech: function handleSpeech() {
    if (this.listening) {
      this.listening = false;
      this.stm.stop();
    } else {
      this.stm.listen();
      this.listening = true;
    }
  },
  handleAvatarClick: function handleAvatarClick() {
    this.messages.innerHTML = '';
    this.hint.classList.remove('hidden');
  }
};
module.exports = AssistantScreen;

/***/ }),

/***/ "./static/js/binary-sensor.js":
/*!************************************!*\
  !*** ./static/js/binary-sensor.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Binary Sensor.
 *
 * UI element representing a Binary Sensor.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */


__webpack_require__(/*! core-js/modules/es6.reflect.get */ "./node_modules/core-js/modules/es6.reflect.get.js");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (typeof call === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var Thing = __webpack_require__(/*! ./thing */ "./static/js/thing.js");

var BinarySensor =
/*#__PURE__*/
function (_Thing) {
  _inherits(BinarySensor, _Thing);

  /**
   * BinarySensor Constructor (extends Thing).
   *
   * @param {Object} description Thing description object.
   * @param {Number} format See Constants.ThingFormat
   */
  function BinarySensor(model, description, format) {
    _classCallCheck(this, BinarySensor);

    return _possibleConstructorReturn(this, _getPrototypeOf(BinarySensor).call(this, model, description, format, {
      baseIcon: '/optimized-images/thing-icons/binary_sensor.svg'
    }));
  }
  /**
   * Find any properties required for this view.
   */


  _createClass(BinarySensor, [{
    key: "findProperties",
    value: function findProperties() {
      this.onProperty = null; // Look for properties by type first.

      for (var name in this.displayedProperties) {
        var type = this.displayedProperties[name].property['@type'];

        if (type === 'BooleanProperty') {
          this.onProperty = name;
          break;
        }
      } // If necessary, match on name.


      if (this.onProperty === null && this.displayedProperties.hasOwnProperty('on')) {
        this.onProperty = 'on';
      }
    }
  }, {
    key: "updateProperty",

    /**
     * Update the display for the provided property.
     * @param {string} name - name of the property
     * @param {*} value - value of the property
     */
    value: function updateProperty(name, value) {
      _get(_getPrototypeOf(BinarySensor.prototype), "updateProperty", this).call(this, name, value);

      if (!this.displayedProperties.hasOwnProperty(name)) {
        return;
      }

      if (name === this.onProperty) {
        this.icon.on = !!value;
      }
    }
  }, {
    key: "iconView",
    value: function iconView() {
      return `
      <webthing-binary-sensor-capability>
      </webthing-binary-sensor-capability>`;
    }
  }, {
    key: "icon",
    get: function get() {
      return this.element.querySelector('webthing-binary-sensor-capability');
    }
  }]);

  return BinarySensor;
}(Thing);

module.exports = BinarySensor;

/***/ }),

/***/ "./static/js/check-user.js":
/*!*********************************!*\
  !*** ./static/js/check-user.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Show an appriopriate UI based on if we have any users yet.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */


__webpack_require__(/*! core-js/modules/es6.regexp.replace */ "./node_modules/core-js/modules/es6.regexp.replace.js");

__webpack_require__(/*! core-js/modules/es6.regexp.split */ "./node_modules/core-js/modules/es6.regexp.split.js");

__webpack_require__(/*! core-js/modules/es6.regexp.search */ "./node_modules/core-js/modules/es6.regexp.search.js");

var API = __webpack_require__(/*! ./api */ "./static/js/api.js");

if (API.isLoggedIn()) {
  API.verifyJWT().then(function (valid) {
    if (!valid) {
      redirectUnauthed();
    } else if (document.body) {
      document.body.classList.remove('hidden');
    } else {
      document.addEventListener('DOMContentLoaded', function () {
        document.body.classList.remove('hidden');
      });
    }
  }).catch(function () {
    document.body.classList.remove('hidden');
    document.getElementById('connectivity-scrim').classList.remove('hidden');
  });
} else {
  redirectUnauthed();
}

function redirectUnauthed() {
  API.userCount().then(function (count) {
    var url;

    if (count > 0) {
      var redirectPath = window.location.pathname + window.location.search;
      url = `/login/?url=${encodeURIComponent(redirectPath)}`;
    } else {
      url = '/signup/';
    }

    if (window.location.pathname !== url.split('?')[0]) {
      window.location.replace(url);
    }
  });
}

/***/ }),

/***/ "./static/js/color-control.js":
/*!************************************!*\
  !*** ./static/js/color-control.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * ColorControl
 *
 * UI element representing a device which can change color.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */


__webpack_require__(/*! core-js/modules/es6.reflect.get */ "./node_modules/core-js/modules/es6.reflect.get.js");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (typeof call === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var Thing = __webpack_require__(/*! ./thing */ "./static/js/thing.js");

var Utils = __webpack_require__(/*! ./utils */ "./static/js/utils.js");

var ColorControl =
/*#__PURE__*/
function (_Thing) {
  _inherits(ColorControl, _Thing);

  /**
   * ColorControl Constructor (extends Thing).
   *
   * @param {Object} description Thing description object.
   * @param {Number} format See Constants.ThingFormat
   */
  function ColorControl(model, description, format) {
    _classCallCheck(this, ColorControl);

    return _possibleConstructorReturn(this, _getPrototypeOf(ColorControl).call(this, model, description, format, {
      baseIcon: '/optimized-images/thing-icons/color_control.svg'
    }));
  }
  /**
   * Find any properties required for this view.
   */


  _createClass(ColorControl, [{
    key: "findProperties",
    value: function findProperties() {
      this.colorProperty = null;
      this.colorTemperatureProperty = null; // Look for properties by type first.

      for (var name in this.displayedProperties) {
        var type = this.displayedProperties[name].property['@type'];

        if (this.colorProperty === null && type === 'ColorProperty') {
          this.colorProperty = name;
        } else if (this.colorTemperatureProperty === null && type === 'ColorTemperatureProperty') {
          this.colorTemperatureProperty = name;
        }
      } // If necessary, match on name.


      if (this.colorProperty === null && this.displayedProperties.hasOwnProperty('color')) {
        this.colorProperty = 'color';
      }

      if (this.colorTemperatureProperty === null && this.displayedProperties.hasOwnProperty('colorTemperature')) {
        this.colorTemperatureProperty = 'colorTemperature';
      }
    }
  }, {
    key: "updateProperty",

    /**
     * Update the display for the provided property.
     * @param {string} name - name of the property
     * @param {*} value - value of the property
     */
    value: function updateProperty(name, value) {
      _get(_getPrototypeOf(ColorControl.prototype), "updateProperty", this).call(this, name, value);

      if (!this.displayedProperties.hasOwnProperty(name)) {
        return;
      }

      if (name === this.colorProperty) {
        this.icon.color = value;
      } else if (name === this.colorTemperatureProperty) {
        value = parseInt(value, 10);
        this.icon.color = Utils.colorTemperatureToRGB(value);
      }
    }
  }, {
    key: "iconView",
    value: function iconView() {
      return `
      <webthing-color-control-capability>
      </webthing-color-control-capability>`;
    }
  }, {
    key: "icon",
    get: function get() {
      return this.element.querySelector('webthing-color-control-capability');
    }
  }]);

  return ColorControl;
}(Thing);

module.exports = ColorControl;

/***/ }),

/***/ "./static/js/components/base-component.js":
/*!************************************************!*\
  !*** ./static/js/components/base-component.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * BaseComponent
 *
 * A base webcomponent class.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */


__webpack_require__(/*! core-js/modules/es6.map */ "./node_modules/core-js/modules/es6.map.js");

__webpack_require__(/*! core-js/modules/es6.regexp.to-string */ "./node_modules/core-js/modules/es6.regexp.to-string.js");

__webpack_require__(/*! core-js/modules/es6.reflect.construct */ "./node_modules/core-js/modules/es6.reflect.construct.js");

__webpack_require__(/*! core-js/modules/es6.regexp.replace */ "./node_modules/core-js/modules/es6.regexp.replace.js");

__webpack_require__(/*! core-js/modules/web.dom.iterable */ "./node_modules/core-js/modules/web.dom.iterable.js");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (typeof call === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _wrapNativeSuper(Class) { var _cache = typeof Map === "function" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null) return null; if (typeof Class !== "function") { throw new TypeError("Super expression must either be null or a function"); } if (typeof _cache !== "undefined") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }

function isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function _construct(Parent, args, Class) { if (isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var BaseComponent =
/*#__PURE__*/
function (_HTMLElement) {
  _inherits(BaseComponent, _HTMLElement);

  function BaseComponent(template) {
    var _this;

    _classCallCheck(this, BaseComponent);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(BaseComponent).call(this));

    _this.attachShadow({
      mode: 'open'
    });

    var templateClone = template.content.cloneNode(true); // Detect whether ShadowRoot has been polyfilled on this browser

    if (ShadowRoot.name !== 'ShadowRoot') {
      var tagName = _this.shadowRoot.host.tagName;
      templateClone.querySelectorAll('style').forEach(function (style) {
        style.innerHTML = style.innerHTML.replace(/:host/g, tagName);
      });
    }

    _this.shadowRoot.appendChild(templateClone);

    BaseComponent.count++;
    return _this;
  }

  _createClass(BaseComponent, [{
    key: "connectedCallback",
    value: function connectedCallback() {}
  }, {
    key: "disconnectedCallback",
    value: function disconnectedCallback() {}
  }, {
    key: "_upgradeProperty",
    value: function _upgradeProperty(prop) {
      if (this.hasOwnProperty(prop)) {
        var value = this[prop];
        delete this[prop];
        this[prop] = value;
      }

      if (this.hasAttribute(prop)) {
        this[prop] = this.getAttribute(prop);
      }
    }
  }]);

  return BaseComponent;
}(_wrapNativeSuper(HTMLElement));

BaseComponent.count = 0;
module.exports = BaseComponent;

/***/ }),

/***/ "./static/js/components/capability/binary-sensor.js":
/*!**********************************************************!*\
  !*** ./static/js/components/capability/binary-sensor.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * BinarySensorCapability
 *
 * A bubble showing a binary sensor icon.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */


function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (typeof call === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var BaseComponent = __webpack_require__(/*! ../base-component */ "./static/js/components/base-component.js");

var template = document.createElement('template');
template.innerHTML = `
  <style>
    :host {
      display: block;
      contain: content;
      text-align: center;
      color: white;
      font-size: 1.6rem;
    }

    .webthing-binary-sensor-capability-icon {
      width: 12.8rem;
      height: 12.8rem;
      border-radius: 6.4rem;
      background-size: 12.8rem;
      background-repeat: no-repeat;
      transform: translate(0);
      background-color: #5d9bc7;
      background-image: url('/optimized-images/component-icons/binary-sensor.png');
    }

    .webthing-binary-sensor-capability-icon.on {
      background-image: url('/optimized-images/component-icons/binary-sensor-on.png');
    }

    .webthing-binary-sensor-capability-icon.off {
      background-image: url('/optimized-images/component-icons/binary-sensor-off.png');
    }
  </style>
  <div id="icon" class="webthing-binary-sensor-capability-icon"></div>
`;

var BinarySensorCapability =
/*#__PURE__*/
function (_BaseComponent) {
  _inherits(BinarySensorCapability, _BaseComponent);

  function BinarySensorCapability() {
    var _this;

    _classCallCheck(this, BinarySensorCapability);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(BinarySensorCapability).call(this, template));
    _this._icon = _this.shadowRoot.querySelector('#icon');
    _this._on = false;
    return _this;
  }

  _createClass(BinarySensorCapability, [{
    key: "connectedCallback",
    value: function connectedCallback() {
      this.on = typeof this.dataset.on !== 'undefined' ? this.dataset.on : null;
    }
  }, {
    key: "on",
    get: function get() {
      return this._icon.classList.contains('on');
    },
    set: function set(value) {
      this._on = Boolean(value);

      if (value === null) {
        this._icon.classList.remove('on');

        this._icon.classList.remove('off');
      } else if (this._on) {
        this._icon.classList.remove('off');

        this._icon.classList.add('on');
      } else {
        this._icon.classList.remove('on');

        this._icon.classList.add('off');
      }
    }
  }]);

  return BinarySensorCapability;
}(BaseComponent);

window.customElements.define('webthing-binary-sensor-capability', BinarySensorCapability);
module.exports = BinarySensorCapability;

/***/ }),

/***/ "./static/js/components/capability/color-control.js":
/*!**********************************************************!*\
  !*** ./static/js/components/capability/color-control.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * ColorControlCapability
 *
 * A bubble showing a color icon.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */


function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (typeof call === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var BaseComponent = __webpack_require__(/*! ../base-component */ "./static/js/components/base-component.js");

var template = document.createElement('template');
template.innerHTML = `
  <style>
    :host {
      display: block;
      contain: content;
      text-align: center;
      color: white;
      font-size: 1.6rem;
    }

    .webthing-color-control-capability-container {
      box-sizing: border-box;
      width: 12.8rem;
      height: 12.8rem;
      border-radius: 6.4rem;
      border: 0.2rem solid white;
      transform: translate(0);
      background-color: #89b6d6;
    }

    .webthing-color-control-capability-info {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      height: 5rem;
      width: 5rem;
      border-radius: 0.5rem;
      border: 0.2rem solid white;
    }
  </style>
  <div id="container" class="webthing-color-control-capability-container">
    <div id="info" class="webthing-color-control-capability-info"></div>
  </div>
`;

var ColorControlCapability =
/*#__PURE__*/
function (_BaseComponent) {
  _inherits(ColorControlCapability, _BaseComponent);

  function ColorControlCapability() {
    var _this;

    _classCallCheck(this, ColorControlCapability);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(ColorControlCapability).call(this, template));
    _this._info = _this.shadowRoot.querySelector('#info');
    _this._color = '#ffffff';
    return _this;
  }

  _createClass(ColorControlCapability, [{
    key: "connectedCallback",
    value: function connectedCallback() {
      this.color = this.dataset.color || '#ffffff';
    }
  }, {
    key: "color",
    get: function get() {
      return this._color;
    },
    set: function set(value) {
      this._color = value;
      this._info.style.backgroundColor = value;
    }
  }]);

  return ColorControlCapability;
}(BaseComponent);

window.customElements.define('webthing-color-control-capability', ColorControlCapability);
module.exports = ColorControlCapability;

/***/ }),

/***/ "./static/js/components/capability/custom.js":
/*!***************************************************!*\
  !*** ./static/js/components/capability/custom.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * CustomCapability
 *
 * A bubble showing a generic (or custom) icon.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */


function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (typeof call === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var BaseComponent = __webpack_require__(/*! ../base-component */ "./static/js/components/base-component.js");

var template = document.createElement('template');
template.innerHTML = `
  <style>
    :host {
      display: block;
      contain: content;
      text-align: center;
      color: white;
      font-size: 1.6rem;
    }

    .webthing-custom-capability-icon {
      width: 12.8rem;
      height: 12.8rem;
      border-radius: 6.4rem;
      background-size: 12.8rem;
      background-repeat: no-repeat;
      transform: translate(0);
      background-color: #5d9bc7;
    }

    .webthing-custom-capability-icon.custom-icon {
      width: 12.4rem;
      height: 12.4rem;
      border: 0.2rem solid white;
      background-size: 6.4rem;
      background-position: center;
      background-color: #89b6d6;
    }
  </style>
  <div id="icon" class="webthing-custom-capability-icon"></div>
`;

var CustomCapability =
/*#__PURE__*/
function (_BaseComponent) {
  _inherits(CustomCapability, _BaseComponent);

  function CustomCapability() {
    var _this;

    _classCallCheck(this, CustomCapability);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(CustomCapability).call(this, template));
    _this._icon = _this.shadowRoot.querySelector('#icon');
    _this._iconHref = '';
    return _this;
  }

  _createClass(CustomCapability, [{
    key: "connectedCallback",
    value: function connectedCallback() {
      this.iconHref = typeof this.dataset.iconHref !== 'undefined' ? this.dataset.iconHref : '';
    }
  }, {
    key: "iconHref",
    get: function get() {
      return this._iconHref;
    },
    set: function set(value) {
      if (!value) {
        this._iconHref = '/optimized-images/component-icons/custom.png';

        this._icon.classList.remove('custom-icon');
      } else {
        this._iconHref = value;

        this._icon.classList.add('custom-icon');
      }

      this._icon.style.backgroundImage = `url("${this._iconHref}")`;
    }
  }]);

  return CustomCapability;
}(BaseComponent);

window.customElements.define('webthing-custom-capability', CustomCapability);
module.exports = CustomCapability;

/***/ }),

/***/ "./static/js/components/capability/door-sensor.js":
/*!********************************************************!*\
  !*** ./static/js/components/capability/door-sensor.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * DoorSensorCapability
 *
 * A bubble showing a door sensor icon.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */


function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (typeof call === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var BaseComponent = __webpack_require__(/*! ../base-component */ "./static/js/components/base-component.js");

var template = document.createElement('template');
template.innerHTML = `
  <style>
    :host {
      display: block;
      contain: content;
      text-align: center;
      color: white;
      font-size: 1.6rem;
    }

    .webthing-door-sensor-capability-icon {
      width: 12.4rem;
      height: 12.4rem;
      border-radius: 6.4rem;
      border: 0.2rem solid white;
      background-size: 6.4rem;
      background-repeat: no-repeat;
      transform: translate(0);
      background-color: #89b6d6;
      background-image: url('/optimized-images/component-icons/door-sensor-closed.svg');
      background-position: center 2rem;
    }

    .webthing-door-sensor-capability-icon.open {
      background-color: white;
      background-image: url('/optimized-images/component-icons/door-sensor-open.svg');
    }

    .webthing-door-sensor-capability-label {
      font-weight: bold;
      text-transform: uppercase;
      padding-top: 8.75rem;
      font-size: 1.4rem;
    }

    .webthing-door-sensor-capability-icon.open
    .webthing-door-sensor-capability-label {
      color: #5d9bc7;
    }
  </style>
  <div id="icon" class="webthing-door-sensor-capability-icon">
    <div id="label" class="webthing-door-sensor-capability-label">--</div>
  </div>
`;

var DoorSensorCapability =
/*#__PURE__*/
function (_BaseComponent) {
  _inherits(DoorSensorCapability, _BaseComponent);

  function DoorSensorCapability() {
    var _this;

    _classCallCheck(this, DoorSensorCapability);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(DoorSensorCapability).call(this, template));
    _this._icon = _this.shadowRoot.querySelector('#icon');
    _this._label = _this.shadowRoot.querySelector('#label');
    _this._open = false;
    return _this;
  }

  _createClass(DoorSensorCapability, [{
    key: "connectedCallback",
    value: function connectedCallback() {
      this.open = typeof this.dataset.open !== 'undefined' ? this.dataset.open : null;
    }
  }, {
    key: "open",
    get: function get() {
      return this._open;
    },
    set: function set(value) {
      this._open = Boolean(value);

      if (value === null) {
        this._icon.classList.remove('open');

        this._label.innerText = '...';
      } else if (this._open) {
        this._icon.classList.add('open');

        this._label.innerText = 'OPEN';
      } else {
        this._icon.classList.remove('open');

        this._label.innerText = 'CLOSED';
      }
    }
  }]);

  return DoorSensorCapability;
}(BaseComponent);

window.customElements.define('webthing-door-sensor-capability', DoorSensorCapability);
module.exports = DoorSensorCapability;

/***/ }),

/***/ "./static/js/components/capability/energy-monitor.js":
/*!***********************************************************!*\
  !*** ./static/js/components/capability/energy-monitor.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * EnergyMonitorCapability
 *
 * A bubble showing an energy monitor icon.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */


__webpack_require__(/*! core-js/modules/es6.reflect.get */ "./node_modules/core-js/modules/es6.reflect.get.js");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (typeof call === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var LabelCapability = __webpack_require__(/*! ./label */ "./static/js/components/capability/label.js");

var EnergyMonitorCapability =
/*#__PURE__*/
function (_LabelCapability) {
  _inherits(EnergyMonitorCapability, _LabelCapability);

  function EnergyMonitorCapability() {
    _classCallCheck(this, EnergyMonitorCapability);

    return _possibleConstructorReturn(this, _getPrototypeOf(EnergyMonitorCapability).apply(this, arguments));
  }

  _createClass(EnergyMonitorCapability, [{
    key: "connectedCallback",
    value: function connectedCallback() {
      this.unit = 'W';
      this.precision = 0;

      _get(_getPrototypeOf(EnergyMonitorCapability.prototype), "connectedCallback", this).call(this);
    }
  }, {
    key: "power",
    get: function get() {
      return this.level;
    },
    set: function set(value) {
      this.level = value;
    }
  }]);

  return EnergyMonitorCapability;
}(LabelCapability);

window.customElements.define('webthing-energy-monitor-capability', EnergyMonitorCapability);
module.exports = EnergyMonitorCapability;

/***/ }),

/***/ "./static/js/components/capability/label.js":
/*!**************************************************!*\
  !*** ./static/js/components/capability/label.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * LabelCapability
 *
 * A bubble showing an icon with a label.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */


function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (typeof call === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var BaseComponent = __webpack_require__(/*! ../base-component */ "./static/js/components/base-component.js");

var template = document.createElement('template');
template.innerHTML = `
  <style>
    :host {
      display: block;
      contain: content;
      text-align: center;
      color: white;
      font-size: 1.6rem;
    }

    .webthing-label-capability-container {
      box-sizing: border-box;
      width: 12.8rem;
      height: 12.8rem;
      border-radius: 6.4rem;
      border: 0.2rem solid white;
      transform: translate(0);
      background-color: #89b6d6;
    }

    .webthing-label-capability-contents {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      font-size: 2.8rem;
      font-weight: bold;
      width: 12.8rem;
    }
  </style>
  <div id="container" class="webthing-label-capability-container">
    <div id="contents" class="webthing-label-capability-contents">
      <span id="value" class="webthing-label-capability-value">
      </span><span id="unit" class="webthing-label-capability-unit"></span>
    </div>
  </div>
`;

var LabelCapability =
/*#__PURE__*/
function (_BaseComponent) {
  _inherits(LabelCapability, _BaseComponent);

  function LabelCapability() {
    var _this;

    _classCallCheck(this, LabelCapability);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(LabelCapability).call(this, template));
    _this._value = _this.shadowRoot.querySelector('.webthing-label-capability-value');
    _this._unit = _this.shadowRoot.querySelector('.webthing-label-capability-unit');
    _this._precision = 0;
    _this._level = 0;
    return _this;
  }

  _createClass(LabelCapability, [{
    key: "connectedCallback",
    value: function connectedCallback() {
      if (!this.level) {
        this.level = typeof this.dataset.level !== 'undefined' ? this.dataset.level : 0;
      }

      if (!this.unit) {
        this.unit = typeof this.dataset.unit !== 'undefined' ? this.dataset.unit : '';
      }

      if (!this.precision) {
        this.precision = typeof this.dataset.precision !== 'undefined' ? this.dataset.precision : 0;
      }
    }
  }, {
    key: "level",
    get: function get() {
      return this._level;
    },
    set: function set(value) {
      this._level = Number(value);
      this._value.innerText = this._level.toFixed(this.precision);
    }
  }, {
    key: "unit",
    get: function get() {
      return this._unit.innerText;
    },
    set: function set(value) {
      this._unit.innerText = value;
    }
  }, {
    key: "precision",
    get: function get() {
      return this._precision;
    },
    set: function set(value) {
      this._precision = parseInt(value, 10);
    }
  }]);

  return LabelCapability;
}(BaseComponent);

window.customElements.define('webthing-label-capability', LabelCapability);
module.exports = LabelCapability;

/***/ }),

/***/ "./static/js/components/capability/light.js":
/*!**************************************************!*\
  !*** ./static/js/components/capability/light.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * LightCapability
 *
 * A bubble showing a light bulb icon.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */


function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (typeof call === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

var BaseComponent = __webpack_require__(/*! ../base-component */ "./static/js/components/base-component.js");

var Utils = __webpack_require__(/*! ../../utils */ "./static/js/utils.js");

var template = document.createElement('template');
template.innerHTML = `
  <style>
    :host {
      display: block;
      contain: content;
      text-align: center;
      color: white;
      font-size: 1.6rem;
    }

    .webthing-light-capability-container {
      box-sizing: border-box;
      width: 12.8rem;
      height: 12.8rem;
      border-radius: 6.4rem;
      border: 0.2rem solid white;
      transform: translate(0);
      background-color: #89b6d6;
    }

    .webthing-light-capability-container.on {
      background-color: white;
      color: #5d9bc7;
    }

    .webthing-light-capability-info {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
    }

    .webthing-light-capability-icon {
      fill: white;
    }

    .webthing-light-capability-icon.bright {
      stroke: #666;
    }

    .webthing-light-capability-label {
      padding-top: 0.2rem;
      font-weight: bold;
    }
  </style>
  <div id="container" class="webthing-light-capability-container">
    <div id="info" class="webthing-light-capability-info">
      <svg id="icon" class="webthing-light-capability-icon"
        xmlns="http://www.w3.org/2000/svg" height="68" width="64">
        <g transform="translate(0,-987.36216)">
          <path
             d="m 41.6997,1041.6985 c 0,1.0723 -0.8727,1.9367 -1.9366,1.9367 l
             -15.5179,0 c -1.0722,0 -1.9366,-0.8727 -1.9366,-1.9367 0,-1.0722
             0.8727,-1.9366 1.9366,-1.9366 l 15.5179,0 c 1.0639,-0.01
             1.9366,0.8644 1.9366,1.9366 z m -1.9449,2.9091 -15.5096,0 c
             -1.28,0 -2.2608,1.2302 -1.8369,2.5683 0.2577,0.8063 1.0722,1.305
             1.92,1.305 l 0.033,0 c 1.1221,0 2.1444,0.6317 2.6431,1.6374 l
             0.017,0.041 c 0.6732,1.3465 2.053,2.2026 3.5657,2.2026 l 2.826,0 c
             1.5127,0 2.8925,-0.8561 3.5657,-2.2026 l 0.017,-0.041 c
             0.4987,-1.0057 1.5294,-1.6374 2.6432,-1.6374 l 0.033,0 c 0.8478,0
             1.6623,-0.4987 1.92,-1.305 0.4322,-1.3381 -0.5569,-2.5683
             -1.8369,-2.5683 z m 1.9449,-7.7631 c 0,1.0722 -0.8727,1.9366
             -1.9366,1.9366 l -15.5179,0 c -1.0722,0 -1.9366,-0.8727
             -1.9366,-1.9366 0,-1.0306 0.8062,-1.8701 1.8285,-1.9283
             -1.2135,-10.9132 -12.5008,-13.3403 -12.5008,-26.19 0,-11.24577
             9.118,-20.36377 20.3637,-20.36377 11.2457,0 20.3637,9.118
             20.3637,20.36377 0,12.8497 -11.2873,15.2768 -12.4925,26.19
             1.014,0.058 1.8285,0.8977 1.8285,1.9283 z" />
        </g>
      </svg>
      <div id="label" class="webthing-light-capability-label">OFF</div>
    </div>
  </div>
`;
var OFF_FILL = '#ffffff';
var ON_FILL = '#5d9bc7';

var LightCapability =
/*#__PURE__*/
function (_BaseComponent) {
  _inherits(LightCapability, _BaseComponent);

  function LightCapability() {
    var _this;

    _classCallCheck(this, LightCapability);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(LightCapability).call(this, template));
    _this._container = _this.shadowRoot.querySelector('#container');
    _this._icon = _this.shadowRoot.querySelector('#icon');
    _this._label = _this.shadowRoot.querySelector('#label');
    _this._haveBrightness = false;
    _this._haveColor = false;
    _this._haveColorTemperature = false;
    _this._on = false;
    _this._brightness = 0;
    _this._color = OFF_FILL;
    _this._colorTemperature = 2700;
    _this._onClick = _this.__onClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));
    return _this;
  }

  _createClass(LightCapability, [{
    key: "connectedCallback",
    value: function connectedCallback() {
      this._haveBrightness = typeof this.dataset.haveBrightness !== 'undefined' ? this.dataset.haveBrightness === 'true' : false;
      this._haveColor = typeof this.dataset.haveColor !== 'undefined' ? this.dataset.haveColor === 'true' : false;
      this._haveColorTemperature = typeof this.dataset.haveColorTemperature !== 'undefined' ? this.dataset.haveColorTemperature === 'true' : false;
      this.on = typeof this.dataset.on !== 'undefined' ? this.dataset.on : false;
      this.brightness = typeof this.dataset.brightness !== 'undefined' ? this.dataset.brightness : false;
      this.color = this.dataset.color || OFF_FILL;
      this.colorTemperature = typeof this.dataset.colorTemperature !== 'undefined' ? this.dataset.colorTemperature : 2700;

      this._container.addEventListener('click', this._onClick);
    }
  }, {
    key: "disconnectedCallback",
    value: function disconnectedCallback() {
      this._container.removeEventListener('click', this._onClick);
    }
  }, {
    key: "_updateIconColor",
    value: function _updateIconColor(value) {
      this._icon.style.fill = value;
      var r = parseInt(value.substr(1, 2), 16);
      var g = parseInt(value.substr(3, 2), 16);
      var b = parseInt(value.substr(5, 2), 16); // From https://stackoverflow.com/questions/3942878

      if (r * 0.299 + g * 0.587 + b * 0.114 > 186) {
        this._icon.classList.add('bright');
      } else {
        this._icon.classList.remove('bright');
      }
    }
  }, {
    key: "__onClick",
    value: function __onClick(e) {
      e.preventDefault();
      e.stopPropagation();
      this.dispatchEvent(new CustomEvent('click', {
        bubbles: true
      }));
    }
  }, {
    key: "on",
    get: function get() {
      return this._on;
    },
    set: function set(value) {
      this._on = Boolean(value);

      if (this._on) {
        this._container.classList.add('on');
      } else {
        this._container.classList.remove('on');
      }

      if (this._haveBrightness) {
        this.brightness = this._brightness;
      } else if (this._on) {
        this._label.innerText = 'ON';
      } else {
        this._label.innerText = 'OFF';
      }

      if (this._haveColor) {
        this.color = this._color;
      } else if (this._haveColorTemperature) {
        this.colorTemperature = this._colorTemperature;
      } else if (this._on) {
        this._icon.style.fill = ON_FILL;
      } else {
        this._icon.style.fill = OFF_FILL;
      }
    }
  }, {
    key: "brightness",
    get: function get() {
      return this._brightness;
    },
    set: function set(value) {
      if (!this._haveBrightness) {
        return;
      }

      this._brightness = Number(value);

      if (this._on) {
        this._label.innerText = `${Math.round(this._brightness)}%`;
      } else {
        this._label.innerText = 'OFF';
      }
    }
  }, {
    key: "color",
    get: function get() {
      return this._color;
    },
    set: function set(value) {
      if (!this._haveColor) {
        return;
      }

      this._color = value;

      this._updateIconColor(value);
    }
  }, {
    key: "colorTemperature",
    get: function get() {
      return this._colorTemperature;
    },
    set: function set(value) {
      if (!this._haveColorTemperature) {
        return;
      }

      this._colorTemperature = Number(value);

      this._updateIconColor(Utils.colorTemperatureToRGB(this._colorTemperature));
    }
  }]);

  return LightCapability;
}(BaseComponent);

window.customElements.define('webthing-light-capability', LightCapability);
module.exports = LightCapability;

/***/ }),

/***/ "./static/js/components/capability/motion-sensor.js":
/*!**********************************************************!*\
  !*** ./static/js/components/capability/motion-sensor.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * MotionSensorCapability
 *
 * A bubble showing a motion sensor icon.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */


function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (typeof call === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var BaseComponent = __webpack_require__(/*! ../base-component */ "./static/js/components/base-component.js");

var template = document.createElement('template');
template.innerHTML = `
  <style>
    :host {
      display: block;
      contain: content;
      text-align: center;
      color: white;
      font-size: 1.6rem;
    }

    .webthing-motion-sensor-capability-icon {
      width: 12.4rem;
      height: 12.4rem;
      border-radius: 6.4rem;
      border: 0.2rem solid white;
      background-size: 6.4rem;
      background-repeat: no-repeat;
      transform: translate(0);
      background-color: #89b6d6;
      background-image: url('/optimized-images/component-icons/motion-sensor-no-motion.svg');
      background-position: center 2rem;
    }

    .webthing-motion-sensor-capability-icon.motion {
      background-color: white;
      background-image: url('/optimized-images/component-icons/motion-sensor-motion.svg');
    }

    .webthing-motion-sensor-capability-label {
      font-weight: bold;
      text-transform: uppercase;
      padding-top: 8.75rem;
      font-size: 1.2rem;
    }

    .webthing-motion-sensor-capability-icon.motion
    .webthing-motion-sensor-capability-label {
      color: #5d9bc7;
      font-size: 1.4rem;
    }
  </style>
  <div id="icon" class="webthing-motion-sensor-capability-icon">
    <div id="label" class="webthing-motion-sensor-capability-label">--</div>
  </div>
`;

var MotionSensorCapability =
/*#__PURE__*/
function (_BaseComponent) {
  _inherits(MotionSensorCapability, _BaseComponent);

  function MotionSensorCapability() {
    var _this;

    _classCallCheck(this, MotionSensorCapability);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(MotionSensorCapability).call(this, template));
    _this._icon = _this.shadowRoot.querySelector('#icon');
    _this._label = _this.shadowRoot.querySelector('#label');
    _this._motion = false;
    return _this;
  }

  _createClass(MotionSensorCapability, [{
    key: "connectedCallback",
    value: function connectedCallback() {
      this.motion = typeof this.dataset.motion !== 'undefined' ? this.dataset.motion : null;
    }
  }, {
    key: "motion",
    get: function get() {
      return this._motion;
    },
    set: function set(value) {
      this._motion = Boolean(value);

      if (value === null) {
        this._icon.classList.remove('motion');

        this._label.innerText = '...';
      } else if (this._motion) {
        this._icon.classList.add('motion');

        this._label.innerText = 'MOTION';
      } else {
        this._icon.classList.remove('motion');

        this._label.innerText = 'NO MOTION';
      }
    }
  }]);

  return MotionSensorCapability;
}(BaseComponent);

window.customElements.define('webthing-motion-sensor-capability', MotionSensorCapability);
module.exports = MotionSensorCapability;

/***/ }),

/***/ "./static/js/components/capability/multi-level-sensor.js":
/*!***************************************************************!*\
  !*** ./static/js/components/capability/multi-level-sensor.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * MultiLevelSensorCapability
 *
 * A bubble showing a multi-level sensor icon.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */


function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (call && (typeof call === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var LabelCapability = __webpack_require__(/*! ./label */ "./static/js/components/capability/label.js");

var MultiLevelSensorCapability =
/*#__PURE__*/
function (_LabelCapability) {
  _inherits(MultiLevelSensorCapability, _LabelCapability);

  function MultiLevelSensorCapability() {
    _classCallCheck(this, MultiLevelSensorCapability);

    return _possibleConstructorReturn(this, _getPrototypeOf(MultiLevelSensorCapability).apply(this, arguments));
  }

  return MultiLevelSensorCapability;
}(LabelCapability);

window.customElements.define('webthing-multi-level-sensor-capability', MultiLevelSensorCapability);
module.exports = MultiLevelSensorCapability;

/***/ }),

/***/ "./static/js/components/capability/multi-level-switch.js":
/*!***************************************************************!*\
  !*** ./static/js/components/capability/multi-level-switch.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * MultiLevelSwitchCapability
 *
 * A bubble showing a multi-level switch icon.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */


function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (typeof call === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

var BaseComponent = __webpack_require__(/*! ../base-component */ "./static/js/components/base-component.js");

var template = document.createElement('template');
template.innerHTML = `
  <style>
    :host {
      display: block;
      contain: content;
      text-align: center;
      color: white;
      font-size: 1.6rem;
    }

    .webthing-multi-level-switch-capability-container {
      box-sizing: border-box;
      width: 12.8rem;
      height: 12.8rem;
      border-radius: 6.4rem;
      border: 0.2rem solid white;
      transform: translate(0);
      background-color: #89b6d6;
    }

    .webthing-multi-level-switch-capability-container.on {
      background-color: white;
      color: #5d9bc7;
    }

    .webthing-multi-level-switch-capability-container.on
    .webthing-multi-level-switch-capability-bar {
      border-color: #5d9bc7;
    }

    .webthing-multi-level-switch-capability-info {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
    }

    .webthing-multi-level-switch-capability-bar {
      width: 1rem;
      height: 8rem;
      border-radius: 0.5rem;
      border: 0.2rem solid white;
      margin: 0 auto;
    }

    .webthing-multi-level-switch-capability-label {
      padding-top: 0.2rem;
      font-weight: bold;
    }
  </style>
  <div id="container" class="webthing-multi-level-switch-capability-container">
    <div id="info" class="webthing-multi-level-switch-capability-info">
      <div id="bar" class="webthing-multi-level-switch-capability-bar"></div>
      <div id="label" class="webthing-multi-level-switch-capability-label">
      </div>
    </div>
  </div>
`;
var OFF_BAR = 'white';
var OFF_BLANK = '#89b6d6';
var ON_BAR = '#5d9bc7';
var ON_BLANK = 'white';

var MultiLevelSwitchCapability =
/*#__PURE__*/
function (_BaseComponent) {
  _inherits(MultiLevelSwitchCapability, _BaseComponent);

  function MultiLevelSwitchCapability() {
    var _this;

    _classCallCheck(this, MultiLevelSwitchCapability);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(MultiLevelSwitchCapability).call(this, template));
    _this._container = _this.shadowRoot.querySelector('.webthing-multi-level-switch-capability-container');
    _this._bar = _this.shadowRoot.querySelector('.webthing-multi-level-switch-capability-bar');
    _this._label = _this.shadowRoot.querySelector('.webthing-multi-level-switch-capability-label');
    _this._on = false;
    _this._level = 0;
    _this._onClick = _this.__onClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));
    return _this;
  }

  _createClass(MultiLevelSwitchCapability, [{
    key: "connectedCallback",
    value: function connectedCallback() {
      // Default to on=true to display level
      this.on = typeof this.dataset.on !== 'undefined' ? this.dataset.on : true;
      this.level = typeof this.dataset.level !== 'undefined' ? this.dataset.level : false;

      this._container.addEventListener('click', this._onClick);
    }
  }, {
    key: "disconnectedCallback",
    value: function disconnectedCallback() {
      this._container.removeEventListener('click', this._onClick);
    }
  }, {
    key: "__onClick",
    value: function __onClick(e) {
      e.preventDefault();
      e.stopPropagation();
      this.dispatchEvent(new CustomEvent('click', {
        bubbles: true
      }));
    }
  }, {
    key: "on",
    get: function get() {
      return this._on;
    },
    set: function set(value) {
      this._on = Boolean(value);

      if (this._on) {
        this._container.classList.add('on');
      } else {
        this._label.innerText = 'OFF';

        this._container.classList.remove('on');
      }

      this.level = this._level;
    }
  }, {
    key: "level",
    get: function get() {
      return this._level;
    },
    set: function set(value) {
      this._level = Number(value);
      var bar, blank;

      if (this._on) {
        bar = ON_BAR;
        blank = ON_BLANK;
        this._label.innerText = `${Math.round(this._level)}%`;
      } else {
        bar = OFF_BAR;
        blank = OFF_BLANK;
      }

      this._bar.style.background = `linear-gradient(${blank}, ${blank} ${100 - this._level}%, ` + `${bar} ${100 - this._level}%, ${bar})`;
    }
  }]);

  return MultiLevelSwitchCapability;
}(BaseComponent);

window.customElements.define('webthing-multi-level-switch-capability', MultiLevelSwitchCapability);
module.exports = MultiLevelSwitchCapability;

/***/ }),

/***/ "./static/js/components/capability/on-off-switch.js":
/*!**********************************************************!*\
  !*** ./static/js/components/capability/on-off-switch.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * OnOffSwitchCapability
 *
 * A bubble showing an on/off switch icon.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */


function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (typeof call === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

var BaseComponent = __webpack_require__(/*! ../base-component */ "./static/js/components/base-component.js");

var template = document.createElement('template');
template.innerHTML = `
  <style>
    :host {
      display: block;
      contain: content;
      text-align: center;
      color: white;
      font-size: 1.6rem;
    }

    .webthing-on-off-switch-capability-icon {
      width: 12.8rem;
      height: 12.8rem;
      border-radius: 6.4rem;
      background-size: 12.8rem;
      background-repeat: no-repeat;
      transform: translate(0);
      background-color: #5d9bc7;
      background-image: url('/optimized-images/component-icons/on-off-switch.png');
    }

    .webthing-on-off-switch-capability-icon.on {
      background-image: url('/optimized-images/component-icons/on-off-switch-on.png');
    }

    .webthing-on-off-switch-capability-icon.off {
      background-image: url('/optimized-images/component-icons/on-off-switch-off.png');
    }
  </style>
  <div id="icon" class="webthing-on-off-switch-capability-icon"></div>
`;

var OnOffSwitchCapability =
/*#__PURE__*/
function (_BaseComponent) {
  _inherits(OnOffSwitchCapability, _BaseComponent);

  function OnOffSwitchCapability() {
    var _this;

    _classCallCheck(this, OnOffSwitchCapability);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(OnOffSwitchCapability).call(this, template));
    _this._icon = _this.shadowRoot.querySelector('#icon');
    _this._on = false;
    _this._onClick = _this.__onClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));
    return _this;
  }

  _createClass(OnOffSwitchCapability, [{
    key: "connectedCallback",
    value: function connectedCallback() {
      this.on = typeof this.dataset.on !== 'undefined' ? this.dataset.on : null;

      this._icon.addEventListener('click', this._onClick);
    }
  }, {
    key: "disconnectedCallback",
    value: function disconnectedCallback() {
      this._icon.removeEventListener('click', this._onClick);
    }
  }, {
    key: "__onClick",
    value: function __onClick(e) {
      e.preventDefault();
      e.stopPropagation();
      this.dispatchEvent(new CustomEvent('click', {
        bubbles: true
      }));
    }
  }, {
    key: "on",
    get: function get() {
      return this._on;
    },
    set: function set(value) {
      this._on = Boolean(value);

      if (value === true) {
        this._icon.classList.remove('off');

        this._icon.classList.add('on');
      } else if (value === false) {
        this._icon.classList.remove('on');

        this._icon.classList.add('off');
      } else {
        this._icon.classList.remove('on');

        this._icon.classList.remove('off');
      }
    }
  }]);

  return OnOffSwitchCapability;
}(BaseComponent);

window.customElements.define('webthing-on-off-switch-capability', OnOffSwitchCapability);
module.exports = OnOffSwitchCapability;

/***/ }),

/***/ "./static/js/components/capability/push-button.js":
/*!********************************************************!*\
  !*** ./static/js/components/capability/push-button.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * PushButtonCapability
 *
 * A bubble showing a push button icon.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */


function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (typeof call === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

var BaseComponent = __webpack_require__(/*! ../base-component */ "./static/js/components/base-component.js");

var template = document.createElement('template');
template.innerHTML = `
  <style>
    :host {
      display: block;
      contain: content;
      text-align: center;
      color: white;
      font-size: 1.6rem;
    }

    .webthing-push-button-capability-icon {
      width: 12.4rem;
      height: 12.4rem;
      border-radius: 6.4rem;
      border: 0.2rem solid white;
      background-size: 6.4rem;
      background-repeat: no-repeat;
      transform: translate(0);
      background-color: #89b6d6;
      background-image: url('/optimized-images/component-icons/push-button-not-pushed.svg');
      background-position: center 2rem;
    }

    .webthing-push-button-capability-icon.pushed {
      background-color: white;
      background-image: url('/optimized-images/component-icons/push-button-pushed.svg');
    }

    .webthing-push-button-capability-label {
      font-weight: bold;
      text-transform: uppercase;
      padding-top: 8.75rem;
      font-size: 1.2rem;
    }

    .webthing-push-button-capability-icon.pushed
    .webthing-push-button-capability-label {
      color: #5d9bc7;
      font-size: 1.4rem;
    }
  </style>
  <div id="icon" class="webthing-push-button-capability-icon">
    <div id="label" class="webthing-push-button-capability-label">--</div>
  </div>
`;

var PushButtonCapability =
/*#__PURE__*/
function (_BaseComponent) {
  _inherits(PushButtonCapability, _BaseComponent);

  function PushButtonCapability() {
    var _this;

    _classCallCheck(this, PushButtonCapability);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(PushButtonCapability).call(this, template));
    _this._icon = _this.shadowRoot.querySelector('#icon');
    _this._label = _this.shadowRoot.querySelector('#label');
    _this._pushed = false;
    _this._pressTimeout = null;

    _this.addEventListener('press', _this._onPress.bind(_assertThisInitialized(_assertThisInitialized(_this))));

    return _this;
  }

  _createClass(PushButtonCapability, [{
    key: "connectedCallback",
    value: function connectedCallback() {
      this.pushed = typeof this.dataset.pushed !== 'undefined' ? this.dataset.pushed : null;
    }
  }, {
    key: "_onPress",
    value: function _onPress(e) {
      switch (e.detail) {
        case 'single':
          this._fireSinglePress();

          break;

        case 'double':
          this._fireDoublePress();

          break;

        case 'long':
          this._fireLongPress();

          break;
      }
    }
  }, {
    key: "_fireSinglePress",
    value: function _fireSinglePress() {
      var _this2 = this;

      if (this._pressTimeout !== null) {
        clearTimeout(this._pressTimeout);
        this._pressTimeout = null;
      }

      this.pushed = true;
      this._pressTimeout = setTimeout(function () {
        _this2.pushed = false;
        _this2._pressTimeout = null;
      }, 300);
    }
  }, {
    key: "_fireDoublePress",
    value: function _fireDoublePress() {
      var _this3 = this;

      if (this._pressTimeout !== null) {
        clearTimeout(this._pressTimeout);
        this._pressTimeout = null;
      }

      this.pushed = true;
      this._pressTimeout = setTimeout(function () {
        _this3.pushed = false;
        _this3._pressTimeout = setTimeout(function () {
          _this3.pushed = true;
          _this3._pressTimeout = setTimeout(function () {
            _this3.pushed = false;
            _this3._pressTimeout = null;
          }, 300);
        }, 300);
      }, 300);
    }
  }, {
    key: "_fireLongPress",
    value: function _fireLongPress() {
      var _this4 = this;

      if (this._pressTimeout !== null) {
        clearTimeout(this._pressTimeout);
        this._pressTimeout = null;
      }

      this.pushed = true;
      this._pressTimeout = setTimeout(function () {
        _this4.pushed = false;
        _this4._pressTimeout = null;
      }, 1500);
    }
  }, {
    key: "pushed",
    get: function get() {
      return this._pushed;
    },
    set: function set(value) {
      this._pushed = Boolean(value);

      if (value === null) {
        this._icon.classList.remove('pushed');

        this._label.innerText = '...';
      } else if (this._pushed) {
        this._icon.classList.add('pushed');

        this._label.innerText = 'PUSHED';
      } else {
        this._icon.classList.remove('pushed');

        this._label.innerText = 'NOT PUSHED';
      }
    }
  }]);

  return PushButtonCapability;
}(BaseComponent);

window.customElements.define('webthing-push-button-capability', PushButtonCapability);
module.exports = PushButtonCapability;

/***/ }),

/***/ "./static/js/components/capability/smart-plug.js":
/*!*******************************************************!*\
  !*** ./static/js/components/capability/smart-plug.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * SmartPlugCapability
 *
 * A bubble showing a smart plug icon.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */


function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (typeof call === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

var BaseComponent = __webpack_require__(/*! ../base-component */ "./static/js/components/base-component.js");

var template = document.createElement('template');
template.innerHTML = `
  <style>
    :host {
      display: block;
      contain: content;
      text-align: center;
      color: white;
      font-size: 1.6rem;
    }

    .webthing-smart-plug-capability-icon {
      width: 12.4rem;
      height: 12.4rem;
      border-radius: 6.4rem;
      border: 0.2rem solid white;
      background-size: 6.4rem;
      background-repeat: no-repeat;
      transform: translate(0);
      background-color: #89b6d6;
      background-image: url('/optimized-images/component-icons/smart-plug-off.svg');
      background-position: center 2rem;
    }

    .webthing-smart-plug-capability-icon.on {
      background-color: white;
      background-image: url('/optimized-images/component-icons/smart-plug-on.svg');
    }

    .webthing-smart-plug-capability-label {
      font-weight: bold;
      text-transform: uppercase;
      padding-top: 8.75rem;
    }

    .webthing-smart-plug-capability-icon.on
    .webthing-smart-plug-capability-label {
      color: #5d9bc7;
    }
  </style>
  <div id="icon" class="webthing-smart-plug-capability-icon">
    <div id="label" class="webthing-smart-plug-capability-label">--</div>
  </div>
`;

var SmartPlugCapability =
/*#__PURE__*/
function (_BaseComponent) {
  _inherits(SmartPlugCapability, _BaseComponent);

  function SmartPlugCapability() {
    var _this;

    _classCallCheck(this, SmartPlugCapability);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(SmartPlugCapability).call(this, template));
    _this._icon = _this.shadowRoot.querySelector('#icon');
    _this._label = _this.shadowRoot.querySelector('#label');
    _this._havePower = false;
    _this._on = false;
    _this._power = 0;
    _this._onClick = _this.__onClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));
    return _this;
  }

  _createClass(SmartPlugCapability, [{
    key: "connectedCallback",
    value: function connectedCallback() {
      this._havePower = typeof this.dataset.havePower !== 'undefined' ? this.dataset.havePower === 'true' : false;
      this.on = typeof this.dataset.on !== 'undefined' ? this.dataset.on : null;
      this.power = typeof this.dataset.power !== 'undefined' ? this.dataset.power : false;

      this._icon.addEventListener('click', this._onClick);
    }
  }, {
    key: "disconnectedCallback",
    value: function disconnectedCallback() {
      this._icon.removeEventListener('click', this._onClick);
    }
  }, {
    key: "__onClick",
    value: function __onClick(e) {
      e.preventDefault();
      e.stopPropagation();
      this.dispatchEvent(new CustomEvent('click', {
        bubbles: true
      }));
    }
  }, {
    key: "on",
    get: function get() {
      return this._on;
    },
    set: function set(value) {
      this._on = Boolean(value);

      if (value === null) {
        this._icon.classList.remove('on');

        this._label.innerText = '...';
      } else if (this._on) {
        this._icon.classList.add('on');

        if (this._havePower) {
          this.power = this._power;
        } else {
          this._label.innerText = 'ON';
        }
      } else {
        this._icon.classList.remove('on');

        this._label.innerText = 'OFF';
      }
    }
  }, {
    key: "power",
    get: function get() {
      return this._power;
    },
    set: function set(value) {
      this._power = Number(value);

      if (this._on) {
        this._label.innerText = `${Math.round(this._power)} W`;
      }
    }
  }]);

  return SmartPlugCapability;
}(BaseComponent);

window.customElements.define('webthing-smart-plug-capability', SmartPlugCapability);
module.exports = SmartPlugCapability;

/***/ }),

/***/ "./static/js/components/icon/custom.js":
/*!*********************************************!*\
  !*** ./static/js/components/icon/custom.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * CustomIcon
 *
 * A bubble showing a generic (or custom) icon.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */


function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (typeof call === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var BaseComponent = __webpack_require__(/*! ../base-component */ "./static/js/components/base-component.js");

var template = document.createElement('template');
template.innerHTML = `
  <style>
    :host {
      display: block;
      contain: content;
      text-align: center;
      color: white;
      font-size: 1.6rem;
    }

    .webthing-custom-icon-icon {
      width: 6.4rem;
      height: 6.4rem;
      background-size: 6.4rem;
      background-repeat: no-repeat;
      transform: translate(0);
    }

    .webthing-custom-icon-icon.custom-icon {
      width: 6.2rem;
      height: 6.2rem;
      border-radius: 3.2rem;
      border: 0.1rem solid white;
      background-size: 3.2rem;
      background-position: center;
      background-color: #ffffff64;
    }
  </style>
  <div id="icon" class="webthing-custom-icon-icon"></div>
`;

var CustomIcon =
/*#__PURE__*/
function (_BaseComponent) {
  _inherits(CustomIcon, _BaseComponent);

  function CustomIcon() {
    var _this;

    _classCallCheck(this, CustomIcon);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(CustomIcon).call(this, template));
    _this._icon = _this.shadowRoot.querySelector('#icon');
    _this._iconHref = '';
    return _this;
  }

  _createClass(CustomIcon, [{
    key: "connectedCallback",
    value: function connectedCallback() {
      this.iconHref = typeof this.dataset.iconHref !== 'undefined' ? this.dataset.iconHref : '';
    }
  }, {
    key: "iconHref",
    get: function get() {
      return this._iconHref;
    },
    set: function set(value) {
      if (!value) {
        this._iconHref = '/optimized-images/thing-icons/thing.svg';

        this._icon.classList.remove('custom-icon');
      } else {
        this._iconHref = value;

        this._icon.classList.add('custom-icon');
      }

      this._icon.style.backgroundImage = `url("${this._iconHref}")`;
    }
  }]);

  return CustomIcon;
}(BaseComponent);

window.customElements.define('webthing-custom-icon', CustomIcon);
module.exports = CustomIcon;

/***/ }),

/***/ "./static/js/components/property/action.js":
/*!*************************************************!*\
  !*** ./static/js/components/property/action.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Action
 *
 * A bubble showing an action button.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */


function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (typeof call === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

var BaseComponent = __webpack_require__(/*! ../base-component */ "./static/js/components/base-component.js");

var Action =
/*#__PURE__*/
function (_BaseComponent) {
  _inherits(Action, _BaseComponent);

  function Action() {
    var _this;

    _classCallCheck(this, Action);

    var template = document.createElement('template');
    template.innerHTML = `
  <style>
    :host {
      display: inline-block;
      contain: content;
      text-align: center;
      color: white;
      font-size: 1.6rem;
    }

    .webthing-action-container {
      width: 10rem;
      height: 10rem;
      border-radius: 5rem;
      border: 0.2rem solid white;
      background-color: #89b6d6;
      position: relative;
    }

    .webthing-action-contents {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
    }

    .webthing-action-button {
      background-color: #698ba4;
      text-transform: uppercase;
      height: 4rem;
      width: 8rem;
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
      border: none;
      border-radius: 0.5rem;
      padding: 1rem;
      color: #fff;
      z-index: 10;
    }

    .webthing-action-button:hover {
      background-color: #59768a;
    }

    .webthing-action-button:active {
      background-color: #496071;
    }

    .webthing-action-button:disabled {
      background-color: #79a1bd;
    }

    .webthing-action-button::-moz-focus-inner {
      border: 0;
    }

    .webthing-action-name {
      text-align: center;
      max-width: 10rem;
      overflow-wrap: break-word;
      background-color: #5d9bc7;
      display: inline-block;
    }
  </style>
  <div id="container-${BaseComponent.count}" class="webthing-action-container">
    <div id="contents-${BaseComponent.count}" class="webthing-action-contents">
      <button id="button-${BaseComponent.count}" type="button" class="webthing-action-button"></button>
    </div>
  </div>
  <div id="name-${BaseComponent.count}" class="webthing-action-name"></div>
`;
    _this = _possibleConstructorReturn(this, _getPrototypeOf(Action).call(this, template));
    _this._button = _this.shadowRoot.querySelector('.webthing-action-button');
    _this._name = _this.shadowRoot.querySelector('.webthing-action-name');
    _this._href = null;
    _this._onClick = _this.__onClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));
    return _this;
  }

  _createClass(Action, [{
    key: "connectedCallback",
    value: function connectedCallback() {
      this.name = this.dataset.name;

      this._upgradeProperty('href');

      this._button.addEventListener('click', this._onClick);
    }
  }, {
    key: "disconnectedCallback",
    value: function disconnectedCallback() {
      this._button.removeEventListener('click', this._onClick);
    }
  }, {
    key: "__onClick",
    value: function __onClick(e) {
      e.preventDefault();
      e.stopPropagation();

      if (this._href) {
        window.location.href = this._href;
      } else {
        this.value = e.target.value;
        this.dispatchEvent(new CustomEvent('click', {
          bubbles: true
        }));
      }
    }
  }, {
    key: "href",
    get: function get() {
      return this._href;
    },
    set: function set(value) {
      this._href = value;
    }
  }, {
    key: "name",
    get: function get() {
      return this._name.innerText;
    },
    set: function set(value) {
      this._button.innerText = value;
      this._name.innerText = value;
    }
  }]);

  return Action;
}(BaseComponent);

window.customElements.define('webthing-action', Action);
module.exports = Action;

/***/ }),

/***/ "./static/js/components/property/boolean.js":
/*!**************************************************!*\
  !*** ./static/js/components/property/boolean.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * BooleanProperty
 *
 * A bubble showing a checkbox.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */


function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (typeof call === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

var BaseComponent = __webpack_require__(/*! ../base-component */ "./static/js/components/base-component.js");

var BooleanProperty =
/*#__PURE__*/
function (_BaseComponent) {
  _inherits(BooleanProperty, _BaseComponent);

  function BooleanProperty() {
    var _this;

    _classCallCheck(this, BooleanProperty);

    var template = document.createElement('template');
    template.innerHTML = `
  <style>
    :host {
      display: inline-block;
      contain: content;
      text-align: center;
      color: white;
      font-size: 1.6rem;
    }

    .webthing-boolean-property-container {
      width: 10rem;
      height: 10rem;
      border-radius: 5rem;
      border: 0.2rem solid white;
      background-color: #89b6d6;
      position: relative;
    }

    .webthing-boolean-property-contents {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
    }

    .webthing-boolean-property-checkbox {
      display: none;
    }

    .webthing-boolean-property-checkbox + label {
      display: block;
      width: 3rem;
      height: 3rem;
      background: url("/optimized-images/checkbox-sprite.png") no-repeat 0 0;
      background-size: 3rem auto;
    }

    .webthing-boolean-property-checkbox:checked + label {
      background-position: 0 -3rem;
    }

    .webthing-boolean-property-checkbox:disabled + label {
      background-position: 0 -6rem;
    }

    .webthing-boolean-property-checkbox:checked:disabled + label {
      background-position: 0 -9rem;
    }

    .webthing-boolean-property-name {
      text-align: center;
      max-width: 10rem;
      overflow-wrap: break-word;
      background-color: #5d9bc7;
      display: inline-block;
    }
  </style>
  <div id="container-${BaseComponent.count}" class="webthing-boolean-property-container">
    <div id="contents-${BaseComponent.count}" class="webthing-boolean-property-contents">
      <form id="form-${BaseComponent.count}" class="webthing-boolean-property-form">
         <input type="checkbox" id="checkbox-${BaseComponent.count}"
            class="webthing-boolean-property-checkbox"/>
          <label class="webthing-boolean-property-label" for='checkbox-${BaseComponent.count}'>
        </label>
      </form>
    </div>
  </div>
  <div id="name-${BaseComponent.count}" class="webthing-boolean-property-name"></div>
`;
    _this = _possibleConstructorReturn(this, _getPrototypeOf(BooleanProperty).call(this, template));
    _this._input = _this.shadowRoot.querySelector('.webthing-boolean-property-checkbox');
    _this._name = _this.shadowRoot.querySelector('.webthing-boolean-property-name');
    _this._onClick = _this.__onClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));
    _this._onKeyUp = _this.__onKeyUp.bind(_assertThisInitialized(_assertThisInitialized(_this)));
    return _this;
  }

  _createClass(BooleanProperty, [{
    key: "connectedCallback",
    value: function connectedCallback() {
      this.name = this.dataset.name;
      this.readOnly = typeof this.dataset.readOnly !== 'undefined' ? this.dataset.readOnly === 'true' : false;

      this._upgradeProperty('checked');

      this._input.addEventListener('click', this._onClick);

      this._input.addEventListener('keyup', this._onKeyUp);
    }
  }, {
    key: "disconnectedCallback",
    value: function disconnectedCallback() {
      this._input.removeEventListener('click', this._onClick);

      this._input.removeEventListener('keyup', this._onKeyUp);
    }
  }, {
    key: "__onKeyUp",
    value: function __onKeyUp(e) {
      if (e.altKey) {
        return;
      }

      if (e.keyCode === 32) {
        e.preventDefault();

        this._toggleChecked();
      }
    }
  }, {
    key: "__onClick",
    value: function __onClick() {
      this._toggleChecked();
    }
  }, {
    key: "_toggleChecked",
    value: function _toggleChecked() {
      if (this.readOnly) {
        return;
      }

      this.checked = !this.checked;
      this.dispatchEvent(new CustomEvent('change', {
        detail: {
          checked: this.checked
        },
        bubbles: true
      }));
    }
  }, {
    key: "checked",
    get: function get() {
      return this._input.hasAttribute('checked');
    },
    set: function set(value) {
      var isChecked = Boolean(value);

      if (isChecked) {
        this._input.setAttribute('checked', '');
      } else {
        this._input.removeAttribute('checked');
      }

      this._input.checked = isChecked;
    }
  }, {
    key: "readOnly",
    get: function get() {
      return this._input.hasAttribute('disabled');
    },
    set: function set(value) {
      var isDisabled = Boolean(value);

      if (isDisabled) {
        this._input.setAttribute('disabled', '');
      } else {
        this._input.removeAttribute('disabled');
      }

      this._input.disabled = isDisabled;
    }
  }, {
    key: "value",
    get: function get() {
      return this.checked;
    },
    set: function set(value) {
      this.checked = value;
    }
  }, {
    key: "name",
    get: function get() {
      return this._name.innerText;
    },
    set: function set(value) {
      this._name.innerText = value;
    }
  }]);

  return BooleanProperty;
}(BaseComponent);

window.customElements.define('webthing-boolean-property', BooleanProperty);
module.exports = BooleanProperty;

/***/ }),

/***/ "./static/js/components/property/brightness.js":
/*!*****************************************************!*\
  !*** ./static/js/components/property/brightness.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * BrightnessProperty
 *
 * A bubble showing a brightness slider.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */


function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (call && (typeof call === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var SliderProperty = __webpack_require__(/*! ./slider */ "./static/js/components/property/slider.js");

var BrightnessProperty =
/*#__PURE__*/
function (_SliderProperty) {
  _inherits(BrightnessProperty, _SliderProperty);

  function BrightnessProperty() {
    _classCallCheck(this, BrightnessProperty);

    return _possibleConstructorReturn(this, _getPrototypeOf(BrightnessProperty).apply(this, arguments));
  }

  return BrightnessProperty;
}(SliderProperty);

window.customElements.define('webthing-brightness-property', BrightnessProperty);
module.exports = BrightnessProperty;

/***/ }),

/***/ "./static/js/components/property/color-temperature.js":
/*!************************************************************!*\
  !*** ./static/js/components/property/color-temperature.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * ColorTemperatureProperty
 *
 * A bubble showing a color temperature slider and input.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */


__webpack_require__(/*! core-js/modules/es6.reflect.get */ "./node_modules/core-js/modules/es6.reflect.get.js");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (typeof call === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var LevelProperty = __webpack_require__(/*! ./level */ "./static/js/components/property/level.js");

var ColorTemperatureProperty =
/*#__PURE__*/
function (_LevelProperty) {
  _inherits(ColorTemperatureProperty, _LevelProperty);

  function ColorTemperatureProperty() {
    _classCallCheck(this, ColorTemperatureProperty);

    return _possibleConstructorReturn(this, _getPrototypeOf(ColorTemperatureProperty).apply(this, arguments));
  }

  _createClass(ColorTemperatureProperty, [{
    key: "connectedCallback",
    value: function connectedCallback() {
      this.unit = 'K';

      _get(_getPrototypeOf(ColorTemperatureProperty.prototype), "connectedCallback", this).call(this);
    }
  }]);

  return ColorTemperatureProperty;
}(LevelProperty);

window.customElements.define('webthing-color-temperature-property', ColorTemperatureProperty);
module.exports = ColorTemperatureProperty;

/***/ }),

/***/ "./static/js/components/property/color.js":
/*!************************************************!*\
  !*** ./static/js/components/property/color.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * ColorProperty
 *
 * A bubble showing a color input.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */


function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (typeof call === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

var BaseComponent = __webpack_require__(/*! ../base-component */ "./static/js/components/base-component.js");

var ColorProperty =
/*#__PURE__*/
function (_BaseComponent) {
  _inherits(ColorProperty, _BaseComponent);

  function ColorProperty() {
    var _this;

    _classCallCheck(this, ColorProperty);

    var template = document.createElement('template');
    template.innerHTML = `
  <style>
    :host {
      display: inline-block;
      contain: content;
      text-align: center;
      color: white;
      font-size: 1.6rem;
    }

    .webthing-color-property-container {
      width: 10rem;
      height: 10rem;
      border-radius: 5rem;
      border: 0.2rem solid white;
      background-color: #89b6d6;
      position: relative;
    }

    .webthing-color-property-contents {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
    }

    .webthing-color-property-name {
      text-align: center;
      max-width: 10rem;
      overflow-wrap: break-word;
      background-color: #5d9bc7;
      display: inline-block;
    }
  </style>
  <div id="container-${BaseComponent.count}" class="webthing-color-property-container">
    <div id="contents-${BaseComponent.count}" class="webthing-color-property-contents">
      <input type="color" id="color-${BaseComponent.count}" class="webthing-color-property-color">
    </div>
  </div>
  <div id="name-${BaseComponent.count}" class="webthing-color-property-name"></div>
`;
    _this = _possibleConstructorReturn(this, _getPrototypeOf(ColorProperty).call(this, template));
    _this._input = _this.shadowRoot.querySelector('.webthing-color-property-color');
    _this._name = _this.shadowRoot.querySelector('.webthing-color-property-name');
    _this._onChange = _this.__onChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));
    return _this;
  }

  _createClass(ColorProperty, [{
    key: "connectedCallback",
    value: function connectedCallback() {
      this.name = this.dataset.name;
      this.readOnly = typeof this.dataset.readOnly !== 'undefined' ? this.dataset.readOnly === 'true' : false;

      this._upgradeProperty('value');

      this._input.addEventListener('change', this._onChange);
    }
  }, {
    key: "disconnectedCallback",
    value: function disconnectedCallback() {
      this._input.removeEventListener('change', this._onChange);
    }
  }, {
    key: "__onChange",
    value: function __onChange(e) {
      e.preventDefault();
      this.value = e.target.value;
      this.dispatchEvent(new CustomEvent('change', {
        detail: {
          value: this.value
        },
        bubbles: true
      }));
    }
  }, {
    key: "value",
    get: function get() {
      return this._input.value;
    },
    set: function set(value) {
      this._input.value = value;
    }
  }, {
    key: "readOnly",
    get: function get() {
      return this._input.hasAttribute('disabled');
    },
    set: function set(value) {
      var isDisabled = Boolean(value);

      if (isDisabled) {
        this._input.setAttribute('disabled', '');
      } else {
        this._input.removeAttribute('disabled');
      }

      this._input.disabled = isDisabled;
    }
  }, {
    key: "name",
    get: function get() {
      return this._name.innerText;
    },
    set: function set(value) {
      this._name.innerText = value;
    }
  }]);

  return ColorProperty;
}(BaseComponent);

window.customElements.define('webthing-color-property', ColorProperty);
module.exports = ColorProperty;

/***/ }),

/***/ "./static/js/components/property/current.js":
/*!**************************************************!*\
  !*** ./static/js/components/property/current.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * CurrentProperty
 *
 * A bubble showing a current label.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */


__webpack_require__(/*! core-js/modules/es6.reflect.get */ "./node_modules/core-js/modules/es6.reflect.get.js");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (typeof call === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var NumericLabelProperty = __webpack_require__(/*! ./numeric-label */ "./static/js/components/property/numeric-label.js");

var CurrentProperty =
/*#__PURE__*/
function (_NumericLabelProperty) {
  _inherits(CurrentProperty, _NumericLabelProperty);

  function CurrentProperty() {
    _classCallCheck(this, CurrentProperty);

    return _possibleConstructorReturn(this, _getPrototypeOf(CurrentProperty).apply(this, arguments));
  }

  _createClass(CurrentProperty, [{
    key: "connectedCallback",
    value: function connectedCallback() {
      this.unit = 'A';
      this.precision = 1;

      _get(_getPrototypeOf(CurrentProperty.prototype), "connectedCallback", this).call(this);
    }
  }]);

  return CurrentProperty;
}(NumericLabelProperty);

window.customElements.define('webthing-current-property', CurrentProperty);
module.exports = CurrentProperty;

/***/ }),

/***/ "./static/js/components/property/enum.js":
/*!***********************************************!*\
  !*** ./static/js/components/property/enum.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * EnumProperty
 *
 * A bubble showing an enum selector.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */


__webpack_require__(/*! core-js/modules/es7.symbol.async-iterator */ "./node_modules/core-js/modules/es7.symbol.async-iterator.js");

__webpack_require__(/*! core-js/modules/es6.symbol */ "./node_modules/core-js/modules/es6.symbol.js");

__webpack_require__(/*! core-js/modules/web.dom.iterable */ "./node_modules/core-js/modules/web.dom.iterable.js");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (typeof call === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

var BaseComponent = __webpack_require__(/*! ../base-component */ "./static/js/components/base-component.js");

var EnumProperty =
/*#__PURE__*/
function (_BaseComponent) {
  _inherits(EnumProperty, _BaseComponent);

  function EnumProperty() {
    var _this;

    _classCallCheck(this, EnumProperty);

    var template = document.createElement('template');
    template.innerHTML = `
  <style>
    :host {
      display: inline-block;
      contain: content;
      text-align: center;
      color: white;
      font-size: 1.6rem;
    }

    .webthing-enum-property-container {
      width: 10rem;
      height: 10rem;
      border-radius: 5rem;
      border: 0.2rem solid white;
      background-color: #89b6d6;
      position: relative;
    }

    .webthing-enum-property-contents {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
    }

    .webthing-enum-property-select {
      height: 3rem;
      width: 7rem;
      text-align: center;
      text-align-last: center;
      background-color: #d2d9de;
      color: #333;
      border: none;
      border-radius: 0.5rem;
      padding: 0.5rem;
      margin: 0.5rem 0;
      font-size: 1.6rem;
    }

    .webthing-enum-property-unit.hidden {
      display: none;
    }

    .webthing-enum-property-name {
      text-align: center;
      max-width: 10rem;
      overflow-wrap: break-word;
      background-color: #5d9bc7;
      display: inline-block;
    }
  </style>
  <div id="container-${BaseComponent.count}" class="webthing-enum-property-container">
    <div id="contents-${BaseComponent.count}" class="webthing-enum-property-contents">
      <select id="select-${BaseComponent.count}" class="webthing-enum-property-select"></select>
      <div id="unit-${BaseComponent.count}" class="webthing-enum-property-unit"></div>
    </div>
  </div>
  <div id="name-${BaseComponent.count}" class="webthing-enum-property-name"></div>
`;
    _this = _possibleConstructorReturn(this, _getPrototypeOf(EnumProperty).call(this, template));
    _this._select = _this.shadowRoot.querySelector('.webthing-enum-property-select');
    _this._unit = _this.shadowRoot.querySelector('.webthing-enum-property-unit');
    _this._name = _this.shadowRoot.querySelector('.webthing-enum-property-name');
    _this._type = 'string';
    _this._onChange = _this.__onChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));
    return _this;
  }

  _createClass(EnumProperty, [{
    key: "connectedCallback",
    value: function connectedCallback() {
      this.name = this.dataset.name;
      this.value = typeof this.dataset.value !== 'undefined' ? this.dataset.value : '';
      this.unit = typeof this.dataset.unit !== 'undefined' ? this.dataset.unit : '';
      this.type = typeof this.dataset.type !== 'undefined' ? this.dataset.type : 'string';
      this.choices = typeof this.dataset.choices !== 'undefined' ? JSON.parse(atob(this.dataset.choices)) : [];
      this.readOnly = typeof this.dataset.readOnly !== 'undefined' ? this.dataset.readOnly === 'true' : false;

      this._upgradeProperty('value');

      this._select.addEventListener('change', this._onChange);
    }
  }, {
    key: "disconnectedCallback",
    value: function disconnectedCallback() {
      this._select.removeEventListener('change', this._onChange);
    }
  }, {
    key: "_setUnitClass",
    value: function _setUnitClass() {
      if (this.unit) {
        this._unit.classList.remove('hidden');
      } else {
        this._unit.classList.add('hidden');
      }
    }
  }, {
    key: "__onChange",
    value: function __onChange(e) {
      e.preventDefault();
      this.value = e.target.options[e.target.selectedIndex].value;
      this.dispatchEvent(new CustomEvent('change', {
        detail: {
          value: this.value
        },
        bubbles: true
      }));
    }
  }, {
    key: "value",
    get: function get() {
      if (this._select.options.length === 0) {
        return '';
      }

      var val = this._select.options[this._select.selectedIndex].value;

      switch (this.type) {
        case 'integer':
          return parseInt(val, 10);

        case 'number':
          return parseFloat(val);

        case 'string':
        default:
          return val;
      }
    },
    set: function set(value) {
      value = `${value}`;
      this._select.value = value;
    }
  }, {
    key: "readOnly",
    get: function get() {
      return this._select.hasAttribute('disabled');
    },
    set: function set(value) {
      var isDisabled = Boolean(value);

      if (isDisabled) {
        this._select.setAttribute('disabled', '');
      } else {
        this._select.removeAttribute('disabled');
      }

      this._select.disabled = isDisabled;
    }
  }, {
    key: "name",
    get: function get() {
      return this._name.innerText;
    },
    set: function set(value) {
      this._name.innerText = value;
    }
  }, {
    key: "unit",
    get: function get() {
      return this._unit.innerText;
    },
    set: function set(value) {
      this._unit.innerText = value;

      this._setUnitClass();
    }
  }, {
    key: "type",
    get: function get() {
      return this._type;
    },
    set: function set(value) {
      this._type = value;
    }
  }, {
    key: "choices",
    get: function get() {
      return this._select.options;
    },
    set: function set(value) {
      this._select.innerHTML = '';
      var _iteratorNormalCompletion = true;
      var _didIteratorError = false;
      var _iteratorError = undefined;

      try {
        for (var _iterator = value[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var choice = _step.value;
          var option = document.createElement('option');
          option.value = choice;
          option.innerText = choice;

          this._select.appendChild(option);
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return != null) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }
    }
  }]);

  return EnumProperty;
}(BaseComponent);

window.customElements.define('webthing-enum-property', EnumProperty);
module.exports = EnumProperty;

/***/ }),

/***/ "./static/js/components/property/frequency.js":
/*!****************************************************!*\
  !*** ./static/js/components/property/frequency.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * FrequencyProperty
 *
 * A bubble showing a frequency label.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */


__webpack_require__(/*! core-js/modules/es6.reflect.get */ "./node_modules/core-js/modules/es6.reflect.get.js");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (typeof call === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var NumericLabelProperty = __webpack_require__(/*! ./numeric-label */ "./static/js/components/property/numeric-label.js");

var FrequencyProperty =
/*#__PURE__*/
function (_NumericLabelProperty) {
  _inherits(FrequencyProperty, _NumericLabelProperty);

  function FrequencyProperty() {
    _classCallCheck(this, FrequencyProperty);

    return _possibleConstructorReturn(this, _getPrototypeOf(FrequencyProperty).apply(this, arguments));
  }

  _createClass(FrequencyProperty, [{
    key: "connectedCallback",
    value: function connectedCallback() {
      this.unit = 'Hz';
      this.precision = 0;

      _get(_getPrototypeOf(FrequencyProperty.prototype), "connectedCallback", this).call(this);
    }
  }]);

  return FrequencyProperty;
}(NumericLabelProperty);

window.customElements.define('webthing-frequency-property', FrequencyProperty);
module.exports = FrequencyProperty;

/***/ }),

/***/ "./static/js/components/property/instantaneous-power.js":
/*!**************************************************************!*\
  !*** ./static/js/components/property/instantaneous-power.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * InstantaneousPowerProperty
 *
 * A bubble showing an instantaneous power label.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */


__webpack_require__(/*! core-js/modules/es6.reflect.get */ "./node_modules/core-js/modules/es6.reflect.get.js");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (typeof call === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var NumericLabelProperty = __webpack_require__(/*! ./numeric-label */ "./static/js/components/property/numeric-label.js");

var InstantaneousPowerProperty =
/*#__PURE__*/
function (_NumericLabelProperty) {
  _inherits(InstantaneousPowerProperty, _NumericLabelProperty);

  function InstantaneousPowerProperty() {
    _classCallCheck(this, InstantaneousPowerProperty);

    return _possibleConstructorReturn(this, _getPrototypeOf(InstantaneousPowerProperty).apply(this, arguments));
  }

  _createClass(InstantaneousPowerProperty, [{
    key: "connectedCallback",
    value: function connectedCallback() {
      this.unit = 'W';
      this.precision = 0;

      _get(_getPrototypeOf(InstantaneousPowerProperty.prototype), "connectedCallback", this).call(this);
    }
  }]);

  return InstantaneousPowerProperty;
}(NumericLabelProperty);

window.customElements.define('webthing-instantaneous-power-property', InstantaneousPowerProperty);
module.exports = InstantaneousPowerProperty;

/***/ }),

/***/ "./static/js/components/property/level.js":
/*!************************************************!*\
  !*** ./static/js/components/property/level.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * LevelProperty
 *
 * A bubble showing a level slider and input.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */


function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (typeof call === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

var BaseComponent = __webpack_require__(/*! ../base-component */ "./static/js/components/base-component.js");

var LevelProperty =
/*#__PURE__*/
function (_BaseComponent) {
  _inherits(LevelProperty, _BaseComponent);

  function LevelProperty() {
    var _this;

    _classCallCheck(this, LevelProperty);

    var template = document.createElement('template');
    template.innerHTML = `
  <style>
    :host {
      display: inline-block;
      contain: content;
      text-align: center;
      color: white;
      font-size: 1.6rem;
    }

    .webthing-level-property-container {
      width: 10rem;
      height: 10rem;
      border-radius: 5rem;
      border: 0.2rem solid white;
      background-color: #89b6d6;
      position: relative;
    }

    .webthing-level-property-contents {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
    }

    .webthing-level-property-bar-container {
      width: 8rem;
      height: 1rem;
      border-radius: 0.6rem;
      border: 0.2rem solid white;
      margin: 0 auto;
    }

    .webthing-level-property-bar {
      height: 1rem;
      background-color: white;
      position: absolute;
      left: 0.2rem;
      max-width: calc(100% - 0.4rem);
    }

    .webthing-level-property-form {
      width: 8rem;
    }

    .webthing-level-property-number {
      height: 1.75rem;
      width: 5.6rem;
      text-align: center;
      background-color: #d2d9de;
      color: #333;
      border: none;
      border-radius: 0.5rem;
      margin: 0.5rem 0;
      font-size: 1.6rem;
    }

    .webthing-level-property-slider {
      width: 8rem;
      margin: 0;
    }

    .webthing-level-property-text.hidden,
    .webthing-level-property-bar-container.hidden,
    .webthing-level-property-form.hidden {
      display: none;
    }

    .webthing-level-property-unit.hidden {
      visibility: hidden;
    }

    .webthing-level-property-name {
      text-align: center;
      max-width: 10rem;
      overflow-wrap: break-word;
      background-color: #5d9bc7;
      display: inline-block;
    }
  </style>
  <div id="container-${BaseComponent.count}" class="webthing-level-property-container">
    <div id="contents-${BaseComponent.count}" class="webthing-level-property-contents">
      <div id="text-${BaseComponent.count}" class="webthing-level-property-text hidden"></div>
      <div id="bar-container-${BaseComponent.count}"
        class="webthing-level-property-bar-container hidden">
        <span id="bar-${BaseComponent.count}" class="webthing-level-property-bar"></span>
      </div>
      <form id="form-${BaseComponent.count}" class="webthing-level-property-form">
        <input type="number" id="number-${BaseComponent.count}" class="webthing-level-property-number">
        <input type="range" id="slider-level-${BaseComponent.count}" class="webthing-level-property-slider">
      </form>
      <div id="unit-${BaseComponent.count}" class="webthing-level-property-unit"></div>
    </div>
  </div>
  <div id="name-${BaseComponent.count}" class="webthing-level-property-name"></div>
`;
    _this = _possibleConstructorReturn(this, _getPrototypeOf(LevelProperty).call(this, template));
    _this._text = _this.shadowRoot.querySelector('.webthing-level-property-text');
    _this._barContainer = _this.shadowRoot.querySelector('.webthing-level-property-bar-container');
    _this._bar = _this.shadowRoot.querySelector('.webthing-level-property-bar');
    _this._form = _this.shadowRoot.querySelector('.webthing-level-property-form');
    _this._number = _this.shadowRoot.querySelector('.webthing-level-property-number');
    _this._slider = _this.shadowRoot.querySelector('.webthing-level-property-slider');
    _this._unit = _this.shadowRoot.querySelector('.webthing-level-property-unit');
    _this._name = _this.shadowRoot.querySelector('.webthing-level-property-name');
    _this._onChange = _this.__onChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));
    _this._onClick = _this.__onClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));
    _this._onBlur = _this.__onBlur.bind(_assertThisInitialized(_assertThisInitialized(_this)));
    _this._onSubmit = _this.__onSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));
    return _this;
  }

  _createClass(LevelProperty, [{
    key: "connectedCallback",
    value: function connectedCallback() {
      if (!this.name) {
        this.name = this.dataset.name;
      }

      if (!this.unit) {
        this.unit = typeof this.dataset.unit !== 'undefined' ? this.dataset.unit : '';
      }

      this.readOnly = typeof this.dataset.readOnly !== 'undefined' ? this.dataset.readOnly === 'true' : false;

      this._upgradeProperty('min');

      this._upgradeProperty('max');

      this._upgradeProperty('step');

      this._upgradeProperty('value'); // Set the initial number input value so that both inputs are set properly.


      this._number.value = this.value;

      this._slider.addEventListener('change', this._onChange);

      this._form.addEventListener('submit', this._onSubmit);

      this._number.addEventListener('blur', this._onBlur);

      this._number.addEventListener('click', this._onClick);
    }
  }, {
    key: "disconnectedCallback",
    value: function disconnectedCallback() {
      this._slider.removeEventListener('change', this._onChange);

      this._form.removeEventListener('submit', this._onSubmit);

      this._number.removeEventListener('blur', this._onBlur);

      this._number.removeEventListener('click', this._onClick);
    }
  }, {
    key: "_setUnitClass",
    value: function _setUnitClass() {
      if (this.unit) {
        this._unit.classList.remove('hidden');
      } else {
        this._unit.classList.add('hidden');
      }
    }
  }, {
    key: "__onChange",
    value: function __onChange(e) {
      e.preventDefault();
      var value = e.target.value;
      var step = this.step;

      if (step !== '' && step !== 'any') {
        step = parseFloat(step);
        value = Math.round(value / step) * step;
      }

      var min = this.min;

      if (min !== '') {
        min = parseFloat(min);
        value = Math.max(min, value);
      }

      var max = this.max;

      if (max !== '') {
        max = parseFloat(max);
        value = Math.min(max, value);
      }

      this.value = value;
      this.dispatchEvent(new CustomEvent('change', {
        detail: {
          value: this.value
        },
        bubbles: true
      }));
    }
  }, {
    key: "__onBlur",
    value: function __onBlur(e) {
      this.__onChange(e);
    }
  }, {
    key: "__onClick",
    value: function __onClick(e) {
      this.__onChange(e);
    }
  }, {
    key: "__onSubmit",
    value: function __onSubmit(e) {
      e.preventDefault();

      this._input.blur();

      return false;
    }
  }, {
    key: "min",
    get: function get() {
      return this._slider.min;
    },
    set: function set(value) {
      this._slider.min = value;
      this._number.min = value;
    }
  }, {
    key: "max",
    get: function get() {
      return this._slider.max;
    },
    set: function set(value) {
      this._slider.max = value;
      this._number.max = value;
    }
  }, {
    key: "step",
    get: function get() {
      return this._slider.step;
    },
    set: function set(value) {
      this._slider.step = value;
      this._number.step = value;
    }
  }, {
    key: "value",
    get: function get() {
      return this._slider.value;
    },
    set: function set(value) {
      var min = parseInt(this.min, 10);
      var max = parseInt(this.max, 10) - min;
      var percent = Math.max(0, value - min) / max * 100;
      this._bar.style.width = `calc(${percent}% - 0.2rem)`;
      this._text.innerText = value;
      this._slider.value = value;
      this._number.value = value;
    }
  }, {
    key: "readOnly",
    get: function get() {
      return this._slider.hasAttribute('disabled');
    },
    set: function set(value) {
      var isDisabled = Boolean(value);

      if (isDisabled) {
        this._form.classList.add('hidden');

        this._barContainer.classList.remove('hidden');

        this._text.classList.remove('hidden');

        this._slider.setAttribute('disabled', '');

        this._number.setAttribute('disabled', '');
      } else {
        this._slider.removeAttribute('disabled');

        this._number.removeAttribute('disabled');

        this._form.classList.remove('hidden');

        this._barContainer.classList.add('hidden');

        this._text.classList.add('hidden');
      }

      this._slider.disabled = isDisabled;
      this._number.disabled = isDisabled;
    }
  }, {
    key: "name",
    get: function get() {
      return this._name.innerText;
    },
    set: function set(value) {
      this._name.innerText = value;
    }
  }, {
    key: "unit",
    get: function get() {
      return this._unit.dataset.actual;
    },
    set: function set(value) {
      this._unit.dataset.actual = value;

      if (value) {
        this._unit.innerText = value;
      } else {
        this._unit.innerHTML = '&nbsp;';
      }

      this._setUnitClass();
    }
  }]);

  return LevelProperty;
}(BaseComponent);

window.customElements.define('webthing-level-property', LevelProperty);
module.exports = LevelProperty;

/***/ }),

/***/ "./static/js/components/property/motion.js":
/*!*************************************************!*\
  !*** ./static/js/components/property/motion.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * MotionProperty
 *
 * A bubble showing a motion label.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */


function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (call && (typeof call === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var StringLabelProperty = __webpack_require__(/*! ./string-label */ "./static/js/components/property/string-label.js");

var MotionProperty =
/*#__PURE__*/
function (_StringLabelProperty) {
  _inherits(MotionProperty, _StringLabelProperty);

  function MotionProperty() {
    _classCallCheck(this, MotionProperty);

    return _possibleConstructorReturn(this, _getPrototypeOf(MotionProperty).apply(this, arguments));
  }

  return MotionProperty;
}(StringLabelProperty);

window.customElements.define('webthing-motion-property', MotionProperty);
module.exports = MotionProperty;

/***/ }),

/***/ "./static/js/components/property/number.js":
/*!*************************************************!*\
  !*** ./static/js/components/property/number.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * NumberProperty
 *
 * A bubble showing a number input.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */


function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (typeof call === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

var BaseComponent = __webpack_require__(/*! ../base-component */ "./static/js/components/base-component.js");

var NumberProperty =
/*#__PURE__*/
function (_BaseComponent) {
  _inherits(NumberProperty, _BaseComponent);

  function NumberProperty() {
    var _this;

    _classCallCheck(this, NumberProperty);

    var template = document.createElement('template');
    template.innerHTML = `
  <style>
    :host {
      display: inline-block;
      contain: content;
      text-align: center;
      color: white;
      font-size: 1.6rem;
    }

    .webthing-number-property-container {
      width: 10rem;
      height: 10rem;
      border-radius: 5rem;
      border: 0.2rem solid white;
      background-color: #89b6d6;
      position: relative;
    }

    .webthing-number-property-contents {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
    }

    .webthing-number-property-input {
      height: 1.75rem;
      width: 6rem;
      text-align: center;
      background-color: #d2d9de;
      color: #333;
      border: none;
      border-radius: 0.5rem;
      padding: 0.5rem;
      margin: 0.5rem 0;
      font-size: 1.6rem;
    }

    .webthing-number-property-input.hide-spinner::-webkit-inner-spin-button,
    .webthing-number-property-input.hide-spinner::-webkit-outer-spin-button {
      -webkit-appearance: textfield;
    }

    .webthing-number-property-input.hide-spinner {
      -moz-appearance: textfield;
    }

    .webthing-number-property-unit.hidden {
      display: none;
    }

    .webthing-number-property-name {
      text-align: center;
      max-width: 10rem;
      overflow-wrap: break-word;
      background-color: #5d9bc7;
      display: inline-block;
    }
  </style>
  <div id="container-${BaseComponent.count}" class="webthing-number-property-container">
    <div id="contents-${BaseComponent.count}" class="webthing-number-property-contents">
      <form id="form-${BaseComponent.count}" class="webthing-number-property-form">
        <input type="number" id="input-${BaseComponent.count}"
          class="webthing-number-property-input hide-spinner">
      </form>
      <div id="unit-${BaseComponent.count}" class="webthing-number-property-unit"></div>
    </div>
  </div>
  <div id="name-${BaseComponent.count}" class="webthing-number-property-name"></div>
`;
    _this = _possibleConstructorReturn(this, _getPrototypeOf(NumberProperty).call(this, template));
    _this._form = _this.shadowRoot.querySelector('.webthing-number-property-form');
    _this._input = _this.shadowRoot.querySelector('.webthing-number-property-input');
    _this._unit = _this.shadowRoot.querySelector('.webthing-number-property-unit');
    _this._name = _this.shadowRoot.querySelector('.webthing-number-property-name');
    _this._onClick = _this.__onClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));
    _this._onSubmit = _this.__onSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));
    _this._onBlur = _this.__onBlur.bind(_assertThisInitialized(_assertThisInitialized(_this)));
    _this._haveClickListener = false;
    return _this;
  }

  _createClass(NumberProperty, [{
    key: "connectedCallback",
    value: function connectedCallback() {
      this.name = this.dataset.name;
      this.value = typeof this.dataset.value !== 'undefined' ? this.dataset.value : '';
      this.unit = typeof this.dataset.unit !== 'undefined' ? this.dataset.unit : '';
      this.readOnly = typeof this.dataset.readOnly !== 'undefined' ? this.dataset.readOnly === 'true' : false;

      this._upgradeProperty('min');

      this._upgradeProperty('max');

      this._upgradeProperty('step');

      this._upgradeProperty('value');

      this._form.addEventListener('submit', this._onSubmit);

      this._input.addEventListener('blur', this._onBlur);
    }
  }, {
    key: "disconnectedCallback",
    value: function disconnectedCallback() {
      if (this._haveClickListener) {
        this._input.removeEventListener('click', this._onClick);
      }

      this._form.removeEventListener('submit', this._onSubmit);

      this._input.removeEventListener('blur', this._onBlur);
    }
  }, {
    key: "_setInputClass",
    value: function _setInputClass() {
      var min = parseInt(this.min, 10);
      var max = parseInt(this.max, 10);

      if (isNaN(min) || min === null || isNaN(max) || max === null) {
        this._input.classList.add('hide-spinner');

        if (this._haveClickListener) {
          this._input.removeEventListener('click', this._onClick);

          this._haveClickListener = false;
        }
      } else {
        this._input.classList.remove('hide-spinner');

        if (!this._haveClickListener) {
          this._input.addEventListener('click', this._onClick);

          this._haveClickListener = true;
        }
      }
    }
  }, {
    key: "_setUnitClass",
    value: function _setUnitClass() {
      if (this.unit) {
        this._unit.classList.remove('hidden');
      } else {
        this._unit.classList.add('hidden');
      }
    }
  }, {
    key: "__onClick",
    value: function __onClick(e) {
      this.__onBlur(e);
    }
  }, {
    key: "__onSubmit",
    value: function __onSubmit(e) {
      e.preventDefault();

      this._input.blur();

      return false;
    }
  }, {
    key: "__onBlur",
    value: function __onBlur(e) {
      e.preventDefault();
      var value = e.target.value;
      var step = this.step;

      if (step !== '' && step !== 'any') {
        step = parseFloat(step);
        value = Math.round(value / step) * step;
      }

      var min = this.min;

      if (min !== '') {
        min = parseFloat(min);
        value = Math.max(min, value);
      }

      var max = this.max;

      if (max !== '') {
        max = parseFloat(max);
        value = Math.min(max, value);
      }

      this.value = value;
      this.dispatchEvent(new CustomEvent('change', {
        detail: {
          value: this.value
        },
        bubbles: true
      }));
    }
  }, {
    key: "min",
    get: function get() {
      return this._input.min;
    },
    set: function set(value) {
      this._input.min = value;

      this._setInputClass();
    }
  }, {
    key: "max",
    get: function get() {
      return this._input.max;
    },
    set: function set(value) {
      this._input.max = value;

      this._setInputClass();
    }
  }, {
    key: "step",
    get: function get() {
      return this._input.step;
    },
    set: function set(value) {
      this._input.step = value;
    }
  }, {
    key: "value",
    get: function get() {
      return this._input.value;
    },
    set: function set(value) {
      this._input.value = value;
    }
  }, {
    key: "readOnly",
    get: function get() {
      return this._input.hasAttribute('disabled');
    },
    set: function set(value) {
      var isDisabled = Boolean(value);

      if (isDisabled) {
        this._input.setAttribute('disabled', '');
      } else {
        this._input.removeAttribute('disabled');
      }

      this._input.disabled = isDisabled;
    }
  }, {
    key: "name",
    get: function get() {
      return this._name.innerText;
    },
    set: function set(value) {
      this._name.innerText = value;
    }
  }, {
    key: "unit",
    get: function get() {
      return this._unit.innerText;
    },
    set: function set(value) {
      this._unit.innerText = value;

      this._setUnitClass();
    }
  }]);

  return NumberProperty;
}(BaseComponent);

window.customElements.define('webthing-number-property', NumberProperty);
module.exports = NumberProperty;

/***/ }),

/***/ "./static/js/components/property/numeric-label.js":
/*!********************************************************!*\
  !*** ./static/js/components/property/numeric-label.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * NumericLabelProperty
 *
 * A bubble showing a numeric label.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */


function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (typeof call === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var BaseComponent = __webpack_require__(/*! ../base-component */ "./static/js/components/base-component.js");

var NumericLabelProperty =
/*#__PURE__*/
function (_BaseComponent) {
  _inherits(NumericLabelProperty, _BaseComponent);

  function NumericLabelProperty() {
    var _this;

    _classCallCheck(this, NumericLabelProperty);

    var template = document.createElement('template');
    template.innerHTML = `
  <style>
    :host {
      display: inline-block;
      contain: content;
      text-align: center;
      color: white;
      font-size: 1.6rem;
    }

    .webthing-numeric-label-property-container {
      width: 10rem;
      height: 10rem;
      border-radius: 5rem;
      border: 0.2rem solid white;
      background-color: #89b6d6;
      position: relative;
    }

    .webthing-numeric-label-property-contents {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
    }

    .webthing-numeric-label-property-value,
    .webthing-numeric-label-property-unit {
      font-weight: bold;
    }

    .webthing-numeric-label-property-name {
      text-align: center;
      max-width: 10rem;
      overflow-wrap: break-word;
      background-color: #5d9bc7;
      display: inline-block;
    }
  </style>
  <div id="container-${BaseComponent.count}" class="webthing-numeric-label-property-container">
    <div id="contents-${BaseComponent.count}" class="webthing-numeric-label-property-contents">
      <span id="value-${BaseComponent.count}" class="webthing-numeric-label-property-value">
      </span><span id="unit-${BaseComponent.count}" class="webthing-numeric-label-property-unit"></span>
    </div>
  </div>
  <div id="name-${BaseComponent.count}" class="webthing-numeric-label-property-name"></div>
`;
    _this = _possibleConstructorReturn(this, _getPrototypeOf(NumericLabelProperty).call(this, template));
    _this._name = _this.shadowRoot.querySelector('.webthing-numeric-label-property-name');
    _this._value = _this.shadowRoot.querySelector('.webthing-numeric-label-property-value');
    _this._unit = _this.shadowRoot.querySelector('.webthing-numeric-label-property-unit');
    _this._precision = 0;
    return _this;
  }

  _createClass(NumericLabelProperty, [{
    key: "connectedCallback",
    value: function connectedCallback() {
      if (!this.name) {
        this.name = this.dataset.name;
      }

      if (!this.value) {
        this.value = typeof this.dataset.value !== 'undefined' ? this.dataset.value : '';
      }

      if (!this.unit) {
        this.unit = typeof this.dataset.unit !== 'undefined' ? this.dataset.unit : '';
      }

      if (!this.precision) {
        this.precision = typeof this.dataset.precision !== 'undefined' ? this.dataset.precision : 0;
      }
    }
  }, {
    key: "name",
    get: function get() {
      return this._name.innerText;
    },
    set: function set(value) {
      this._name.innerText = value;
    }
  }, {
    key: "value",
    get: function get() {
      return this._value.innerText;
    },
    set: function set(value) {
      value = Number(value);
      this._value.innerText = value.toFixed(this.precision);
    }
  }, {
    key: "unit",
    get: function get() {
      return this._unit.innerText;
    },
    set: function set(value) {
      this._unit.innerText = value;
    }
  }, {
    key: "precision",
    get: function get() {
      return this._precision;
    },
    set: function set(value) {
      this._precision = parseInt(value, 10);
    }
  }]);

  return NumericLabelProperty;
}(BaseComponent);

window.customElements.define('webthing-numeric-label-property', NumericLabelProperty);
module.exports = NumericLabelProperty;

/***/ }),

/***/ "./static/js/components/property/on-off.js":
/*!*************************************************!*\
  !*** ./static/js/components/property/on-off.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * OnOffProperty
 *
 * A bubble showing an on/off switch.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */


__webpack_require__(/*! core-js/modules/es6.reflect.get */ "./node_modules/core-js/modules/es6.reflect.get.js");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (typeof call === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var SwitchProperty = __webpack_require__(/*! ./switch */ "./static/js/components/property/switch.js");

var OnOffProperty =
/*#__PURE__*/
function (_SwitchProperty) {
  _inherits(OnOffProperty, _SwitchProperty);

  function OnOffProperty() {
    _classCallCheck(this, OnOffProperty);

    return _possibleConstructorReturn(this, _getPrototypeOf(OnOffProperty).apply(this, arguments));
  }

  _createClass(OnOffProperty, [{
    key: "connectedCallback",
    value: function connectedCallback() {
      this.onLabel = 'On';
      this.offLabel = 'Off';

      _get(_getPrototypeOf(OnOffProperty.prototype), "connectedCallback", this).call(this);
    }
  }]);

  return OnOffProperty;
}(SwitchProperty);

window.customElements.define('webthing-on-off-property', OnOffProperty);
module.exports = OnOffProperty;

/***/ }),

/***/ "./static/js/components/property/open.js":
/*!***********************************************!*\
  !*** ./static/js/components/property/open.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * OpenProperty
 *
 * A bubble showing an open label.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */


function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (call && (typeof call === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var StringLabelProperty = __webpack_require__(/*! ./string-label */ "./static/js/components/property/string-label.js");

var OpenProperty =
/*#__PURE__*/
function (_StringLabelProperty) {
  _inherits(OpenProperty, _StringLabelProperty);

  function OpenProperty() {
    _classCallCheck(this, OpenProperty);

    return _possibleConstructorReturn(this, _getPrototypeOf(OpenProperty).apply(this, arguments));
  }

  return OpenProperty;
}(StringLabelProperty);

window.customElements.define('webthing-open-property', OpenProperty);
module.exports = OpenProperty;

/***/ }),

/***/ "./static/js/components/property/pushed.js":
/*!*************************************************!*\
  !*** ./static/js/components/property/pushed.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * PushedProperty
 *
 * A bubble showing a pushed label.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */


function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (call && (typeof call === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var StringLabelProperty = __webpack_require__(/*! ./string-label */ "./static/js/components/property/string-label.js");

var PushedProperty =
/*#__PURE__*/
function (_StringLabelProperty) {
  _inherits(PushedProperty, _StringLabelProperty);

  function PushedProperty() {
    _classCallCheck(this, PushedProperty);

    return _possibleConstructorReturn(this, _getPrototypeOf(PushedProperty).apply(this, arguments));
  }

  return PushedProperty;
}(StringLabelProperty);

window.customElements.define('webthing-pushed-property', PushedProperty);
module.exports = PushedProperty;

/***/ }),

/***/ "./static/js/components/property/slider.js":
/*!*************************************************!*\
  !*** ./static/js/components/property/slider.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * SliderProperty
 *
 * A bubble showing a slider.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */


function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (typeof call === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

var BaseComponent = __webpack_require__(/*! ../base-component */ "./static/js/components/base-component.js");

var SliderProperty =
/*#__PURE__*/
function (_BaseComponent) {
  _inherits(SliderProperty, _BaseComponent);

  function SliderProperty() {
    var _this;

    _classCallCheck(this, SliderProperty);

    var template = document.createElement('template');
    template.innerHTML = `
  <style>
    :host {
      display: inline-block;
      contain: content;
      text-align: center;
      color: white;
      font-size: 1.6rem;
    }

    .webthing-slider-property-container {
      width: 10rem;
      height: 10rem;
      border-radius: 5rem;
      border: 0.2rem solid white;
      background-color: #89b6d6;
      position: relative;
    }

    .webthing-slider-property-contents {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
    }

    .webthing-slider-property-form {
      width: 8rem;
      height: 8rem;
    }

    .webthing-slider-property-slider {
      width: 8rem;
      margin: 0;
      transform: rotate(-90deg) translate(-3rem, 0);
    }

    .webthing-slider-property-name {
      text-align: center;
      max-width: 10rem;
      overflow-wrap: break-word;
      background-color: #5d9bc7;
      display: inline-block;
    }
  </style>
  <div id="container-${BaseComponent.count}" class="webthing-slider-property-container">
    <div id="contents-${BaseComponent.count}" class="webthing-slider-property-contents">
      <form id="form-${BaseComponent.count}" class="webthing-slider-property-form">
        <input type="range" id="slider-${BaseComponent.count}" class="webthing-slider-property-slider">
      </form>
    </div>
  </div>
  <div id="name-${BaseComponent.count}" class="webthing-slider-property-name"></div>
`;
    _this = _possibleConstructorReturn(this, _getPrototypeOf(SliderProperty).call(this, template));
    _this._input = _this.shadowRoot.querySelector('.webthing-slider-property-slider');
    _this._name = _this.shadowRoot.querySelector('.webthing-slider-property-name');
    _this._onChange = _this.__onChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));
    return _this;
  }

  _createClass(SliderProperty, [{
    key: "connectedCallback",
    value: function connectedCallback() {
      if (!this.name) {
        this.name = this.dataset.name;
      }

      this.readOnly = typeof this.dataset.readOnly !== 'undefined' ? this.dataset.readOnly === 'true' : false;

      this._upgradeProperty('min');

      this._upgradeProperty('max');

      this._upgradeProperty('step');

      this._upgradeProperty('value');

      this._input.addEventListener('change', this._onChange);
    }
  }, {
    key: "disconnectedCallback",
    value: function disconnectedCallback() {
      this._input.removeEventListener('change', this._onChange);
    }
  }, {
    key: "__onChange",
    value: function __onChange(e) {
      e.preventDefault();
      this.value = e.target.value;
      this.dispatchEvent(new CustomEvent('change', {
        detail: {
          value: this.value
        },
        bubbles: true
      }));
    }
  }, {
    key: "min",
    get: function get() {
      return this._input.min;
    },
    set: function set(value) {
      this._input.min = value;
    }
  }, {
    key: "max",
    get: function get() {
      return this._input.max;
    },
    set: function set(value) {
      this._input.max = value;
    }
  }, {
    key: "step",
    get: function get() {
      return this._input.step;
    },
    set: function set(value) {
      this._input.step = value;
    }
  }, {
    key: "value",
    get: function get() {
      return this._input.value;
    },
    set: function set(value) {
      this._input.value = value;
    }
  }, {
    key: "readOnly",
    get: function get() {
      return this._input.hasAttribute('disabled');
    },
    set: function set(value) {
      var isDisabled = Boolean(value);

      if (isDisabled) {
        this._input.setAttribute('disabled', '');
      } else {
        this._input.removeAttribute('disabled');
      }

      this._input.disabled = isDisabled;
    }
  }, {
    key: "name",
    get: function get() {
      return this._name.innerText;
    },
    set: function set(value) {
      this._name.innerText = value;
    }
  }]);

  return SliderProperty;
}(BaseComponent);

window.customElements.define('webthing-slider-property', SliderProperty);
module.exports = SliderProperty;

/***/ }),

/***/ "./static/js/components/property/string-label.js":
/*!*******************************************************!*\
  !*** ./static/js/components/property/string-label.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * StringLabelProperty
 *
 * A bubble showing a string label.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */


function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (typeof call === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var BaseComponent = __webpack_require__(/*! ../base-component */ "./static/js/components/base-component.js");

var StringLabelProperty =
/*#__PURE__*/
function (_BaseComponent) {
  _inherits(StringLabelProperty, _BaseComponent);

  function StringLabelProperty() {
    var _this;

    _classCallCheck(this, StringLabelProperty);

    var template = document.createElement('template');
    template.innerHTML = `
  <style>
    :host {
      display: inline-block;
      contain: content;
      text-align: center;
      color: white;
      font-size: 1.6rem;
    }

    .webthing-string-label-property-container {
      width: 10rem;
      height: 10rem;
      border-radius: 5rem;
      border: 0.2rem solid white;
      background-color: #89b6d6;
      position: relative;
    }

    .webthing-string-label-property-container.inverted {
      color: #5d9bc7;
      background-color: white;
    }

    .webthing-string-label-property-value {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      font-weight: bold;
      width: 100%;
      font-size: 1.4rem;
    }

    .webthing-string-label-property-name {
      text-align: center;
      max-width: 10rem;
      overflow-wrap: break-word;
      background-color: #5d9bc7;
      display: inline-block;
    }
  </style>
  <div id="container-${BaseComponent.count}" class="webthing-string-label-property-container">
    <div id="value-${BaseComponent.count}" class="webthing-string-label-property-value"></div>
  </div>
  <div id="name-${BaseComponent.count}" class="webthing-string-label-property-name"></div>
`;
    _this = _possibleConstructorReturn(this, _getPrototypeOf(StringLabelProperty).call(this, template));
    _this._name = _this.shadowRoot.querySelector('.webthing-string-label-property-name');
    _this._container = _this.shadowRoot.querySelector('.webthing-string-label-property-container');
    _this._value = _this.shadowRoot.querySelector('.webthing-string-label-property-value');
    _this._inverted = false;
    return _this;
  }

  _createClass(StringLabelProperty, [{
    key: "connectedCallback",
    value: function connectedCallback() {
      if (!this.name) {
        this.name = this.dataset.name;
      }

      if (!this.value) {
        this.value = typeof this.dataset.value !== 'undefined' ? this.dataset.value : '';
      }

      this.inverted = typeof this.dataset.inverted !== 'undefined' ? this.dataset.inverted === 'true' : false;
    }
  }, {
    key: "name",
    get: function get() {
      return this._name.innerText;
    },
    set: function set(value) {
      this._name.innerText = value;
    }
  }, {
    key: "value",
    get: function get() {
      return this._value.innerText;
    },
    set: function set(value) {
      this._value.innerText = value;
    }
  }, {
    key: "inverted",
    get: function get() {
      return this._inverted;
    },
    set: function set(value) {
      this._inverted = !!value;

      if (this._inverted) {
        this._container.classList.add('inverted');
      } else {
        this._container.classList.remove('inverted');
      }
    }
  }]);

  return StringLabelProperty;
}(BaseComponent);

window.customElements.define('webthing-string-label-property', StringLabelProperty);
module.exports = StringLabelProperty;

/***/ }),

/***/ "./static/js/components/property/string.js":
/*!*************************************************!*\
  !*** ./static/js/components/property/string.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * StringProperty
 *
 * A bubble showing a text input.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */


function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (typeof call === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

var BaseComponent = __webpack_require__(/*! ../base-component */ "./static/js/components/base-component.js");

var StringProperty =
/*#__PURE__*/
function (_BaseComponent) {
  _inherits(StringProperty, _BaseComponent);

  function StringProperty() {
    var _this;

    _classCallCheck(this, StringProperty);

    var template = document.createElement('template');
    template.innerHTML = `
  <style>
    :host {
      display: inline-block;
      contain: content;
      text-align: center;
      color: white;
      font-size: 1.6rem;
    }

    .webthing-string-property-container {
      width: 10rem;
      height: 10rem;
      border-radius: 5rem;
      border: 0.2rem solid white;
      background-color: #89b6d6;
      position: relative;
    }

    .webthing-string-property-contents {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
    }

    .webthing-string-property-input {
      height: 1.75rem;
      width: 6rem;
      text-align: center;
      background-color: #d2d9de;
      color: #333;
      border: none;
      border-radius: 0.5rem;
      padding: 0.5rem;
      margin: 0.5rem 0;
      font-size: 1.6rem;
    }

    .webthing-string-property-name {
      text-align: center;
      max-width: 10rem;
      overflow-wrap: break-word;
      background-color: #5d9bc7;
      display: inline-block;
    }
  </style>
  <div id="container-${BaseComponent.count}" class="webthing-string-property-container">
    <div id="contents-${BaseComponent.count}" class="webthing-string-property-contents">
      <form id="form-${BaseComponent.count}" class="webthing-string-property-form">
        <input type="text" id="input-${BaseComponent.count}" class="webthing-string-property-input">
      </form>
    </div>
  </div>
  <div id="name-${BaseComponent.count}" class="webthing-string-property-name"></div>
`;
    _this = _possibleConstructorReturn(this, _getPrototypeOf(StringProperty).call(this, template));
    _this._form = _this.shadowRoot.querySelector('.webthing-string-property-form');
    _this._input = _this.shadowRoot.querySelector('.webthing-string-property-input');
    _this._name = _this.shadowRoot.querySelector('.webthing-string-property-name');
    _this._onSubmit = _this.__onSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));
    _this._onBlur = _this.__onBlur.bind(_assertThisInitialized(_assertThisInitialized(_this)));
    return _this;
  }

  _createClass(StringProperty, [{
    key: "connectedCallback",
    value: function connectedCallback() {
      this.name = this.dataset.name;
      this.readOnly = typeof this.dataset.readOnly !== 'undefined' ? this.dataset.readOnly === 'true' : false;

      this._upgradeProperty('value');

      this._form.addEventListener('submit', this._onSubmit);

      this._input.addEventListener('blur', this._onBlur);
    }
  }, {
    key: "disconnectedCallback",
    value: function disconnectedCallback() {
      this._form.removeEventListener('submit', this._onSubmit);

      this._input.removeEventListener('blur', this._onBlur);
    }
  }, {
    key: "__onSubmit",
    value: function __onSubmit(e) {
      e.preventDefault();

      this._input.blur();

      return false;
    }
  }, {
    key: "__onBlur",
    value: function __onBlur(e) {
      e.preventDefault();
      this.value = e.target.value;
      this.dispatchEvent(new CustomEvent('change', {
        detail: {
          value: this.value
        },
        bubbles: true
      }));
    }
  }, {
    key: "value",
    get: function get() {
      return this._input.value;
    },
    set: function set(value) {
      this._input.value = value;
    }
  }, {
    key: "readOnly",
    get: function get() {
      return this._input.hasAttribute('disabled');
    },
    set: function set(value) {
      var isDisabled = Boolean(value);

      if (isDisabled) {
        this._input.setAttribute('disabled', '');
      } else {
        this._input.removeAttribute('disabled');
      }

      this._input.disabled = isDisabled;
    }
  }, {
    key: "name",
    get: function get() {
      return this._name.innerText;
    },
    set: function set(value) {
      this._name.innerText = value;
    }
  }]);

  return StringProperty;
}(BaseComponent);

window.customElements.define('webthing-string-property', StringProperty);
module.exports = StringProperty;

/***/ }),

/***/ "./static/js/components/property/switch.js":
/*!*************************************************!*\
  !*** ./static/js/components/property/switch.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * SwitchProperty
 *
 * A bubble showing a switch.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */


function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (typeof call === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

var BaseComponent = __webpack_require__(/*! ../base-component */ "./static/js/components/base-component.js");

var SwitchProperty =
/*#__PURE__*/
function (_BaseComponent) {
  _inherits(SwitchProperty, _BaseComponent);

  function SwitchProperty() {
    var _this;

    _classCallCheck(this, SwitchProperty);

    var template = document.createElement('template');
    template.innerHTML = `
  <style>
    :host {
      display: inline-block;
      contain: content;
      text-align: center;
      color: white;
      font-size: 1.6rem;
    }

    .webthing-switch-property-container {
      width: 10rem;
      height: 10rem;
      border-radius: 5rem;
      border: 0.2rem solid white;
      background-color: #89b6d6;
      position: relative;
    }

    .webthing-switch-property-contents {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
    }

    .webthing-switch-property-switch {
      display: none;
    }

    .webthing-switch-property-slider {
      display: block;
      width: 5.5rem;
      height: 2.2rem;
      border-radius: 1.1rem;
      background-color: #5d9bc7;
      transition: 0.1s;
    }

    .webthing-switch-property-slider::after {
      content: "";
      display: block;
      width: 1.5rem;
      height: 1.5rem;
      border-radius: 50%;
      background-color: white;
      transform: translate(0.35rem, 0.35rem);
      transition: 0.1s;
    }

    .webthing-switch-property-switch:checked + .webthing-switch-property-slider::after {
      transform: translate(3.65rem, 0.35rem);
    }

    .webthing-switch-property-label {
      padding-top: 0.5rem;
      text-transform: uppercase;
      font-weight: bold;
    }

    .webthing-switch-property-name {
      text-align: center;
      max-width: 10rem;
      overflow-wrap: break-word;
      background-color: #5d9bc7;
      display: inline-block;
    }
  </style>
  <div id="container-${BaseComponent.count}" class="webthing-switch-property-container">
    <div id="contents-${BaseComponent.count}" class="webthing-switch-property-contents">
      <form>
        <input type="checkbox" id="switch-${BaseComponent.count}"
          class="webthing-switch-property-switch">
        <label id="slider-${BaseComponent.count}" for="switch-${BaseComponent.count}" class="webthing-switch-property-slider">
        </label>
      </form>
      <div id="label-${BaseComponent.count}" class="webthing-switch-property-label"></div>
    </div>
  </div>
  <div id="name-${BaseComponent.count}" class="webthing-switch-property-name"></div>
`;
    _this = _possibleConstructorReturn(this, _getPrototypeOf(SwitchProperty).call(this, template));
    _this._input = _this.shadowRoot.querySelector('.webthing-switch-property-switch');
    _this._name = _this.shadowRoot.querySelector('.webthing-switch-property-name');
    _this._label = _this.shadowRoot.querySelector('.webthing-switch-property-label');
    _this._onClick = _this.__onClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));
    _this._onKeyUp = _this.__onKeyUp.bind(_assertThisInitialized(_assertThisInitialized(_this)));
    return _this;
  }

  _createClass(SwitchProperty, [{
    key: "connectedCallback",
    value: function connectedCallback() {
      if (!this.name) {
        this.name = this.dataset.name;
      }

      if (!this.label) {
        this.label = this.dataset.offLabel;
      }

      this.readOnly = typeof this.dataset.readOnly !== 'undefined' ? this.dataset.readOnly === 'true' : false;

      this._upgradeProperty('checked');

      this._input.addEventListener('click', this._onClick);

      this._input.addEventListener('keyup', this._onKeyUp);
    }
  }, {
    key: "disconnectedCallback",
    value: function disconnectedCallback() {
      this._input.removeEventListener('click', this._onClick);

      this._input.removeEventListener('keyup', this._onKeyUp);
    }
  }, {
    key: "__onKeyUp",
    value: function __onKeyUp(e) {
      if (e.altKey) {
        return;
      }

      if (e.keyCode === 32) {
        e.preventDefault();

        this._toggleChecked();
      }
    }
  }, {
    key: "__onClick",
    value: function __onClick() {
      this._toggleChecked();
    }
  }, {
    key: "_toggleChecked",
    value: function _toggleChecked() {
      if (this.readOnly) {
        return;
      }

      this.checked = !this.checked;
      this.dispatchEvent(new CustomEvent('change', {
        detail: {
          checked: this.checked
        },
        bubbles: true
      }));
    }
  }, {
    key: "checked",
    get: function get() {
      return this._input.hasAttribute('checked');
    },
    set: function set(value) {
      var isChecked = Boolean(value);

      if (isChecked) {
        this._input.setAttribute('checked', '');
      } else {
        this._input.removeAttribute('checked');
      }

      this._input.checked = isChecked;
      this._label.innerText = isChecked ? this.onLabel : this.offLabel;
    }
  }, {
    key: "readOnly",
    get: function get() {
      return this._input.hasAttribute('disabled');
    },
    set: function set(value) {
      var isDisabled = Boolean(value);

      if (isDisabled) {
        this._input.setAttribute('disabled', '');
      } else {
        this._input.removeAttribute('disabled');
      }

      this._input.disabled = isDisabled;
    }
  }, {
    key: "value",
    get: function get() {
      return this.checked;
    },
    set: function set(value) {
      this.checked = value;
    }
  }, {
    key: "name",
    get: function get() {
      return this._name.innerText;
    },
    set: function set(value) {
      this._name.innerText = value;
    }
  }, {
    key: "label",
    get: function get() {
      return this._label.innerText;
    },
    set: function set(value) {
      this._label.innerText = value;
    }
  }, {
    key: "onLabel",
    get: function get() {
      return this.dataset.onLabel;
    },
    set: function set(label) {
      this.dataset.onLabel = label;
    }
  }, {
    key: "offLabel",
    get: function get() {
      return this.dataset.offLabel;
    },
    set: function set(label) {
      this.dataset.offLabel = label;
    }
  }]);

  return SwitchProperty;
}(BaseComponent);

window.customElements.define('webthing-switch-property', SwitchProperty);
module.exports = SwitchProperty;

/***/ }),

/***/ "./static/js/components/property/voltage.js":
/*!**************************************************!*\
  !*** ./static/js/components/property/voltage.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * VoltageProperty
 *
 * A bubble showing a voltage label.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */


__webpack_require__(/*! core-js/modules/es6.reflect.get */ "./node_modules/core-js/modules/es6.reflect.get.js");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (typeof call === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var NumericLabelProperty = __webpack_require__(/*! ./numeric-label */ "./static/js/components/property/numeric-label.js");

var VoltageProperty =
/*#__PURE__*/
function (_NumericLabelProperty) {
  _inherits(VoltageProperty, _NumericLabelProperty);

  function VoltageProperty() {
    _classCallCheck(this, VoltageProperty);

    return _possibleConstructorReturn(this, _getPrototypeOf(VoltageProperty).apply(this, arguments));
  }

  _createClass(VoltageProperty, [{
    key: "connectedCallback",
    value: function connectedCallback() {
      this.unit = 'V';
      this.precision = 0;

      _get(_getPrototypeOf(VoltageProperty.prototype), "connectedCallback", this).call(this);
    }
  }]);

  return VoltageProperty;
}(NumericLabelProperty);

window.customElements.define('webthing-voltage-property', VoltageProperty);
module.exports = VoltageProperty;

/***/ }),

/***/ "./static/js/constants.js":
/*!********************************!*\
  !*** ./static/js/constants.js ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.CONNECTED = 'connected';
exports.DELETE_THING = 'deleteThing';
exports.DELETE_THINGS = 'deleteThings';
exports.EVENT_OCCURRED = 'eventOccurred';
exports.PROPERTY_STATUS = 'propertyStatus';
exports.REFRESH_THINGS = 'refreshThings';
exports.ThingFormat = {
  INTERACTIVE: 0,
  EXPANDED: 1,
  LINK_ICON: 2
};

/***/ }),

/***/ "./static/js/context-menu.js":
/*!***********************************!*\
  !*** ./static/js/context-menu.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Context Menu.
 *
 * A menu of functions to perform on a Thing.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */


__webpack_require__(/*! core-js/modules/es7.array.includes */ "./node_modules/core-js/modules/es7.array.includes.js");

__webpack_require__(/*! core-js/modules/es7.symbol.async-iterator */ "./node_modules/core-js/modules/es7.symbol.async-iterator.js");

__webpack_require__(/*! core-js/modules/es6.symbol */ "./node_modules/core-js/modules/es6.symbol.js");

__webpack_require__(/*! core-js/modules/web.dom.iterable */ "./node_modules/core-js/modules/web.dom.iterable.js");

var API = __webpack_require__(/*! ./api */ "./static/js/api.js");

var App = __webpack_require__(/*! ./app */ "./static/js/app.js");

var page = __webpack_require__(/*! page */ "./node_modules/page/page.js");

var Utils = __webpack_require__(/*! ./utils */ "./static/js/utils.js"); // eslint-disable-next-line no-unused-vars


var ContextMenu = {
  /**
   * Initialise Add Thing Screen.
   */
  init: function init() {
    this.element = document.getElementById('context-menu');
    this.editContent = document.getElementById('context-menu-content-edit');
    this.removeContent = document.getElementById('context-menu-content-remove');
    this.backButton = document.getElementById('context-menu-back-button');
    this.headingIcon = document.getElementById('context-menu-heading-icon');
    this.headingCustomIcon = document.getElementById('context-menu-heading-custom-icon');
    this.headingText = document.getElementById('context-menu-heading-text');
    this.saveButton = document.getElementById('edit-thing-save-button');
    this.thingIcon = document.getElementById('edit-thing-icon');
    this.nameInput = document.getElementById('edit-thing-name');
    this.thingType = document.getElementById('edit-thing-type');
    this.customIcon = document.getElementById('edit-thing-custom-icon');
    this.customIconInput = document.getElementById('edit-thing-custom-icon-input');
    this.customIconLabel = document.getElementById('edit-thing-custom-icon-label');
    this.label = document.getElementById('edit-thing-label');
    this.removeButton = document.getElementById('remove-thing-button');
    this.logoutForm = document.getElementById('logout');
    this.thingId = ''; // Add event listeners

    window.addEventListener('_contextmenu', this.show.bind(this));
    this.backButton.addEventListener('click', this.hide.bind(this));
    this.saveButton.addEventListener('click', this.handleEdit.bind(this));
    this.removeButton.addEventListener('click', this.handleRemove.bind(this));
    this.logoutForm.addEventListener('submit', function (e) {
      e.preventDefault();
      API.logout().then(function () {
        window.location.href = '/login';
      });
    });
    this.thingType.addEventListener('change', this.handleTypeChange.bind(this));
    this.customIconInput.addEventListener('change', this.handleIconUpload.bind(this));
  },

  /**
   * Show Context Menu.
   */
  show: function show(e) {
    this.iconData = null;
    this.customIcon.iconHref = '';

    if (e.detail.iconHref) {
      this.headingCustomIcon.classList.remove('hidden');
      this.headingCustomIcon.iconHref = e.detail.iconHref;
      this.headingIcon.classList.add('hidden');
      this.customIcon.iconHref = e.detail.iconHref;
    } else {
      this.headingCustomIcon.classList.add('hidden');
      this.headingIcon.classList.remove('hidden');
      this.headingIcon.src = e.detail.thingIcon;
      this.customIcon.iconHref = '';
    }

    this.headingText.textContent = e.detail.thingName;
    this.thingId = e.detail.thingId;
    this.element.classList.remove('hidden');
    this.editContent.classList.add('hidden');
    this.removeContent.classList.add('hidden');

    switch (e.detail.action) {
      case 'edit':
        {
          this.thingType.disabled = false;
          this.nameInput.disabled = false;
          this.saveButton.disabled = false;
          this.customIconInput.disabled = false;
          this.nameInput.value = e.detail.thingName;
          this.thingType.innerHTML = '';

          if (e.detail.selectedCapability === 'Custom') {
            this.thingIcon.style.backgroundImage = '';
            this.customIconLabel.classList.remove('hidden');
            this.customIcon.classList.remove('hidden');
          } else {
            this.thingIcon.style.backgroundImage = `url("${e.detail.thingIcon}")`;
            this.customIconLabel.classList.add('hidden');
            this.customIcon.classList.add('hidden');
          }

          var capabilities = Utils.sortCapabilities(e.detail.capabilities);
          capabilities.push('Custom');
          var _iteratorNormalCompletion = true;
          var _didIteratorError = false;
          var _iteratorError = undefined;

          try {
            for (var _iterator = capabilities[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var capability = _step.value;
              var option = document.createElement('option');
              option.value = capability;

              if (e.detail.selectedCapability === capability) {
                option.selected = true;
              }

              switch (capability) {
                case 'OnOffSwitch':
                  option.innerText = 'On/Off Switch';
                  break;

                case 'MultiLevelSwitch':
                  option.innerText = 'Multi Level Switch';
                  break;

                case 'ColorControl':
                  option.innerText = 'Color Control';
                  break;

                case 'EnergyMonitor':
                  option.innerText = 'Energy Monitor';
                  break;

                case 'BinarySensor':
                  option.innerText = 'Binary Sensor';
                  break;

                case 'MultiLevelSensor':
                  option.innerText = 'Multi Level Sensor';
                  break;

                case 'SmartPlug':
                  option.innerText = 'Smart Plug';
                  break;

                case 'Light':
                  option.innerText = 'Light';
                  break;

                case 'DoorSensor':
                  option.innerText = 'Door Sensor';
                  break;

                case 'MotionSensor':
                  option.innerText = 'Motion Sensor';
                  break;

                case 'PushButton':
                  option.innerText = 'Push Button';
                  break;

                case 'Custom':
                  option.innerText = 'Custom Thing';
                  break;

                default:
                  option.innerText = capability;
                  break;
              }

              this.thingType.appendChild(option);
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }

          this.editContent.classList.remove('hidden');
          break;
        }

      case 'remove':
        this.removeContent.classList.remove('hidden');
        break;
    }
  },

  /**
   * Hide Context Menu.
   */
  hide: function hide() {
    this.element.classList.add('hidden');
    this.headingIcon.classList.remove('hidden');
    this.headingIcon.src = '#';
    this.headingCustomIcon.classList.add('hidden');
    this.headingText.textContent = '';
    this.thingId = '';
  },
  handleTypeChange: function handleTypeChange() {
    var capability = this.thingType.options[this.thingType.selectedIndex].value;
    this.customIconLabel.classList.add('hidden');
    this.customIcon.classList.add('hidden');
    var image = '';

    switch (capability) {
      case 'OnOffSwitch':
        image = '/optimized-images/thing-icons/on_off_switch.svg';
        break;

      case 'MultiLevelSwitch':
        image = '/optimized-images/thing-icons/multi_level_switch.svg';
        break;

      case 'ColorControl':
        image = '/optimized-images/thing-icons/color_control.svg';
        break;

      case 'EnergyMonitor':
        image = '/optimized-images/thing-icons/energy_monitor.svg';
        break;

      case 'BinarySensor':
        image = '/optimized-images/thing-icons/binary_sensor.svg';
        break;

      case 'MultiLevelSensor':
        image = '/optimized-images/thing-icons/multi_level_sensor.svg';
        break;

      case 'SmartPlug':
        image = '/optimized-images/thing-icons/smart_plug.svg';
        break;

      case 'Light':
        image = '/optimized-images/thing-icons/light.svg';
        break;

      case 'DoorSensor':
        image = '/optimized-images/thing-icons/door_sensor.svg';
        break;

      case 'MotionSensor':
        image = '/optimized-images/thing-icons/motion_sensor.svg';
        break;

      case 'PushButton':
        image = '/optimized-images/thing-icons/push_button.svg';
        break;

      case 'Custom':
        this.customIconLabel.classList.remove('hidden');
        this.customIcon.classList.remove('hidden');
        break;

      default:
        break;
    }

    if (image) {
      this.thingIcon.style.backgroundImage = `url("${image}")`;
    } else {
      this.thingIcon.style.backgroundImage = '';
    }
  },
  handleIconUpload: function handleIconUpload() {
    var _this = this;

    this.label.classList.add('hidden');

    if (this.customIconInput.files.length === 0) {
      return;
    }

    var file = this.customIconInput.files[0];

    if (!['image/jpeg', 'image/png', 'image/svg+xml'].includes(file.type)) {
      this.label.innerText = 'Invalid file.';
      this.label.classList.add('error');
      this.label.classList.remove('hidden');
      return;
    }

    var reader = new FileReader();

    reader.onloadend = function (e) {
      if (e.target.error) {
        console.error(e.target.error);
        _this.label.innerText = 'Failed to read file.';

        _this.label.classList.add('error');

        _this.label.classList.remove('hidden');

        _this.saveButton.disabled = false;
        return;
      }

      _this.iconData = {
        mime: file.type,
        data: btoa(e.target.result)
      };
      _this.saveButton.disabled = false;
      _this.customIcon.iconHref = URL.createObjectURL(file);

      _this.customIcon.classList.remove('hidden');
    };

    this.saveButton.disabled = true;
    reader.readAsBinaryString(file);
  },

  /**
   * Handle click on edit option.
   */
  handleEdit: function handleEdit() {
    var _this2 = this;

    this.thingType.disabled = true;
    this.nameInput.disabled = true;
    this.saveButton.disabled = true;
    this.customIconInput.disabled = true;
    var name = this.nameInput.value.trim();

    if (name.length === 0) {
      return;
    }

    var capability;

    if (this.thingType.options.length > 0) {
      capability = this.thingType.options[this.thingType.selectedIndex].value;
    }

    var body = {
      name: name,
      selectedCapability: capability
    };

    if (capability === 'Custom' && this.iconData) {
      body.iconData = this.iconData;
    }

    App.gatewayModel.updateThing(this.thingId, body).then(function () {
      _this2.hide();

      _this2.saveButton.disabled = false;
    }).catch(function (error) {
      console.error(`Error updating thing: ${error}`);
      _this2.label.innerText = 'Failed to save.';

      _this2.label.classList.add('error');

      _this2.label.classList.remove('hidden');

      _this2.thingType.disabled = false;
      _this2.nameInput.disabled = false;
      _this2.saveButton.disabled = false;
      _this2.customIconInput.disabled = false;
    });
  },

  /**
   * Handle click on remove option.
   */
  handleRemove: function handleRemove() {
    var _this3 = this;

    App.gatewayModel.removeThing(this.thingId).then(function () {
      page('/things');

      _this3.hide();
    }).catch(function (error) {
      console.error(`Error removing thing: ${error}`);

      _this3.hide();
    });
  }
};
module.exports = ContextMenu;

/***/ }),

/***/ "./static/js/discovered-addon.js":
/*!***************************************!*\
  !*** ./static/js/discovered-addon.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * DiscoveredAddon.
 *
 * Represents an add-on available to be installed.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */


var API = __webpack_require__(/*! ./api */ "./static/js/api.js");

var Utils = __webpack_require__(/*! ./utils */ "./static/js/utils.js");
/**
 * DiscoveredAddon constructor.
 *
 * @param Object description DiscoveredAddon metadata object.
 */


var DiscoveredAddon = function DiscoveredAddon(metadata, installedAddonsMap, availableAddonsMap) {
  this.name = metadata.name;
  this.displayName = metadata.displayName;
  this.description = metadata.description;
  this.author = metadata.author;
  this.homepage = metadata.homepage;
  this.version = metadata.version;
  this.url = metadata.url;
  this.checksum = metadata.checksum;
  this.installed = metadata.installed;
  this.installedAddonsMap = installedAddonsMap;
  this.availableAddonsMap = availableAddonsMap;
  this.container = document.getElementById('discovered-addons-list');
  this.render();
};
/**
 * HTML view for DiscoveredAddon.
 */


DiscoveredAddon.prototype.view = function () {
  var el;

  if (this.installed) {
    el = '<span class="addon-discovery-settings-added">Added</span>';
  } else {
    el = `
      <button id="addon-install-${Utils.escapeHtmlForIdClass(this.name)}"
        class="text-button addon-discovery-settings-add">
        Add
      </button>`;
  }

  return `
    <li class="discovered-addon-item">
      <div class="addon-settings-header">
        <span class="addon-settings-name">
          ${Utils.escapeHtml(this.displayName)}
        </span>
        <span class="addon-settings-version">
          ${Utils.escapeHtml(this.version)}
        </span>
        <span class="addon-settings-description">
          ${Utils.escapeHtml(this.description)}
        </span>
        <span class="addon-settings-author">
          by <a href="${this.homepage}" target="_blank" rel="noopener">
            ${Utils.escapeHtml(this.author)}
          </a>
        </span>
      </div>
      <div class="addon-settings-controls">
        ${el}
      </div>
    </li>`;
};
/**
 * Render DiscoveredAddon view and add to DOM.
 */


DiscoveredAddon.prototype.render = function () {
  this.container.insertAdjacentHTML('beforeend', this.view());

  if (!this.installed) {
    var button = document.getElementById(`addon-install-${Utils.escapeHtmlForIdClass(this.name)}`);
    button.addEventListener('click', this.handleInstall.bind(this));
  }
};
/**
 * Handle a click on the install button.
 */


DiscoveredAddon.prototype.handleInstall = function (e) {
  var _this = this;

  var controlDiv = e.target.parentNode;
  var installing = '<span class="addon-discovery-settings-installing">Installing...</span>';
  controlDiv.innerHTML = installing;
  API.installAddon(this.name, this.url, this.checksum).then(function (settings) {
    var el = '<span class="addon-discovery-settings-added">Added</span>';
    controlDiv.innerHTML = el;

    var addon = _this.availableAddonsMap.get(_this.name);

    if (addon) {
      addon.installed = true;
    }

    _this.installedAddonsMap.set(_this.name, settings);
  }).catch(function (err) {
    console.error(`Failed to install add-on: ${_this.name}\n${err}`);
    var el = '<span class="addon-discovery-settings-install-failed">Failed</span>';
    controlDiv.innerHTML = el;
  });
};

module.exports = DiscoveredAddon;

/***/ }),

/***/ "./static/js/door-sensor.js":
/*!**********************************!*\
  !*** ./static/js/door-sensor.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Door Sensor.
 *
 * UI element representing a Door Sensor.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */


__webpack_require__(/*! core-js/modules/es6.reflect.get */ "./node_modules/core-js/modules/es6.reflect.get.js");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (typeof call === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var Thing = __webpack_require__(/*! ./thing */ "./static/js/thing.js");

var DoorSensor =
/*#__PURE__*/
function (_Thing) {
  _inherits(DoorSensor, _Thing);

  /**
   * DoorSensor Constructor (extends Thing).
   *
   * @param {Object} description Thing description object.
   * @param {Number} format See Constants.ThingFormat
   */
  function DoorSensor(model, description, format) {
    _classCallCheck(this, DoorSensor);

    return _possibleConstructorReturn(this, _getPrototypeOf(DoorSensor).call(this, model, description, format, {
      baseIcon: '/optimized-images/thing-icons/door_sensor.svg'
    }));
  }
  /**
   * Find any properties required for this view.
   */


  _createClass(DoorSensor, [{
    key: "findProperties",
    value: function findProperties() {
      this.openProperty = null; // Look for properties by type first.

      for (var name in this.displayedProperties) {
        var type = this.displayedProperties[name].property['@type'];

        if (type === 'OpenProperty') {
          this.openProperty = name;
          break;
        }
      }
    }
  }, {
    key: "updateProperty",

    /**
     * Update the display for the provided property.
     * @param {string} name - name of the property
     * @param {*} value - value of the property
     */
    value: function updateProperty(name, value) {
      _get(_getPrototypeOf(DoorSensor.prototype), "updateProperty", this).call(this, name, value);

      if (!this.displayedProperties.hasOwnProperty(name)) {
        return;
      }

      if (name === this.openProperty) {
        this.icon.open = !!value;
      }
    }
  }, {
    key: "iconView",
    value: function iconView() {
      return `
      <webthing-door-sensor-capability>
      </webthing-door-sensor-capability>`;
    }
  }, {
    key: "icon",
    get: function get() {
      return this.element.querySelector('webthing-door-sensor-capability');
    }
  }]);

  return DoorSensor;
}(Thing);

module.exports = DoorSensor;

/***/ }),

/***/ "./static/js/energy-monitor.js":
/*!*************************************!*\
  !*** ./static/js/energy-monitor.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * EnergyMonitor
 *
 * UI element representing a device which can monitor power usage.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */


__webpack_require__(/*! core-js/modules/es6.reflect.get */ "./node_modules/core-js/modules/es6.reflect.get.js");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (typeof call === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var Thing = __webpack_require__(/*! ./thing */ "./static/js/thing.js");

var EnergyMonitor =
/*#__PURE__*/
function (_Thing) {
  _inherits(EnergyMonitor, _Thing);

  /**
   * EnergyMonitor Constructor (extends Thing).
   *
   * @param {Object} description Thing description object.
   * @param {Number} format See Constants.ThingFormat
   */
  function EnergyMonitor(model, description, format) {
    _classCallCheck(this, EnergyMonitor);

    return _possibleConstructorReturn(this, _getPrototypeOf(EnergyMonitor).call(this, model, description, format, {
      baseIcon: '/optimized-images/thing-icons/energy_monitor.svg'
    }));
  }
  /**
   * Find any properties required for this view.
   */


  _createClass(EnergyMonitor, [{
    key: "findProperties",
    value: function findProperties() {
      this.powerProperty = null; // Look for properties by type first.

      for (var name in this.displayedProperties) {
        var type = this.displayedProperties[name].property['@type'];

        if (type === 'InstantaneousPowerProperty') {
          this.powerProperty = name;
          break;
        }
      } // If necessary, match on name.


      if (this.powerProperty === null && this.displayedProperties.hasOwnProperty('instantaneousPower')) {
        this.powerProperty = 'instantaneousPower';
      }
    }
  }, {
    key: "updateProperty",

    /**
     * Update the display for the provided property.
     * @param {string} name - name of the property
     * @param {*} value - value of the property
     */
    value: function updateProperty(name, value) {
      _get(_getPrototypeOf(EnergyMonitor.prototype), "updateProperty", this).call(this, name, value);

      if (!this.displayedProperties.hasOwnProperty(name)) {
        return;
      }

      if (name === this.powerProperty) {
        value = parseFloat(value);
        this.icon.power = value;
      }
    }
  }, {
    key: "iconView",
    value: function iconView() {
      return `
      <webthing-energy-monitor-capability>
      </webthing-energy-monitor-capability>`;
    }
  }, {
    key: "icon",
    get: function get() {
      return this.element.querySelector('webthing-energy-monitor-capability');
    }
  }]);

  return EnergyMonitor;
}(Thing);

module.exports = EnergyMonitor;

/***/ }),

/***/ "./static/js/event-list.js":
/*!*********************************!*\
  !*** ./static/js/event-list.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * EventList.
 *
 * Represents a list of events for a thing.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */


__webpack_require__(/*! core-js/modules/es7.symbol.async-iterator */ "./node_modules/core-js/modules/es7.symbol.async-iterator.js");

__webpack_require__(/*! core-js/modules/es6.symbol */ "./node_modules/core-js/modules/es6.symbol.js");

__webpack_require__(/*! core-js/modules/es6.object.assign */ "./node_modules/core-js/modules/es6.object.assign.js");

__webpack_require__(/*! core-js/modules/es6.array.sort */ "./node_modules/core-js/modules/es6.array.sort.js");

__webpack_require__(/*! core-js/modules/web.dom.iterable */ "./node_modules/core-js/modules/web.dom.iterable.js");

__webpack_require__(/*! core-js/modules/es6.array.from */ "./node_modules/core-js/modules/es6.array.from.js");

var App = __webpack_require__(/*! ./app */ "./static/js/app.js");

var Constants = __webpack_require__(/*! ./constants */ "./static/js/constants.js");

var Utils = __webpack_require__(/*! ./utils */ "./static/js/utils.js");

var EventList = function EventList(model, description) {
  var _this = this;

  this.limit = 100;
  this.href = new URL(description.href, App.ORIGIN);
  this.model = model; // Build up the event schema now. This is used later when building list items.

  this.schema = {};

  for (var eventName in description.events) {
    this.schema[eventName] = {};
    var schema = description.events[eventName];

    if (schema.type === 'object') {
      var keys = Array.from(Object.keys(schema.properties));

      for (var _i = 0; _i < keys.length; _i++) {
        var name = keys[_i];
        this.schema[eventName][name] = schema.properties[name];
      }
    } else {
      // If there is a single, non-object data item, use the generic name
      // 'data'.
      this.schema[eventName].data = schema;
    }
  }

  this.container = document.getElementById('things');
  this.element = this.render();
  var events = model.events; // Get the list in a more friendly format.

  events = events.map(function (e) {
    var name = Object.keys(e)[0];
    var timestamp = new Date(e[name].timestamp);
    return Object.assign(e[name], {
      name: name,
      timestamp: timestamp
    });
  }).sort(function (a, b) {
    return b.timestamp - a.timestamp;
  }).slice(0, this.limit).reverse(); // Build the list in descending order by date.

  var _iteratorNormalCompletion = true;
  var _didIteratorError = false;
  var _iteratorError = undefined;

  try {
    for (var _iterator = events[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
      var event = _step.value;
      this.prependEvent(event);
    }
  } catch (err) {
    _didIteratorError = true;
    _iteratorError = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion && _iterator.return != null) {
        _iterator.return();
      }
    } finally {
      if (_didIteratorError) {
        throw _iteratorError;
      }
    }
  }

  this.onEvent = this.onEvent.bind(this);
  this.model.subscribe(Constants.EVENT_OCCURRED, this.onEvent); // Update event timestamps every 10 seconds.

  setInterval(function () {
    return _this.updateTimestamps();
  }, 10000);
};

EventList.prototype.onEvent = function (data) {
  var events = Object.keys(data).map(function (name) {
    var timestamp = new Date(data[name].timestamp);
    return Object.assign(data[name], {
      name: name,
      timestamp: timestamp
    });
  }).sort(function (a, b) {
    return a.timestamp - b.timestamp;
  });
  var _iteratorNormalCompletion2 = true;
  var _didIteratorError2 = false;
  var _iteratorError2 = undefined;

  try {
    for (var _iterator2 = events[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
      var event = _step2.value;
      this.prependEvent(event);
    }
  } catch (err) {
    _didIteratorError2 = true;
    _iteratorError2 = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion2 && _iterator2.return != null) {
        _iterator2.return();
      }
    } finally {
      if (_didIteratorError2) {
        throw _iteratorError2;
      }
    }
  }
};

EventList.prototype.cleanup = function () {
  this.model.unsubscribe(Constants.EVENT_OCCURRED, this.onEvent);
};

EventList.prototype.render = function () {
  var element = document.createElement('div');
  var list = '<ul class="event-list"></ul>';
  element.innerHTML = list;
  return this.container.appendChild(element.firstChild);
};

EventList.prototype.prependEvent = function (event) {
  if (!this.schema.hasOwnProperty(event.name)) {
    return;
  }

  var schema = this.schema[event.name];
  var body = '';
  var data = event.data;

  if (data !== null) {
    if (typeof data !== 'object' || Array.isArray(data)) {
      data = {
        data: data
      };
    }

    var _iteratorNormalCompletion3 = true;
    var _didIteratorError3 = false;
    var _iteratorError3 = undefined;

    try {
      for (var _iterator3 = Array.from(Object.keys(data)).sort()[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
        var name = _step3.value;

        if (!schema.hasOwnProperty(name)) {
          continue;
        }

        var value = data[name];

        switch (schema[name].type) {
          case 'number':
          case 'integer':
            body += `${Utils.escapeHtml(name)}: ${Utils.escapeHtml(value)}`;

            if (schema[name].hasOwnProperty('unit')) {
              body += ` ${Utils.unitNameToAbbreviation(schema[name].unit)}`;
            }

            break;

          case 'object':
          case 'array':
            value = JSON.stringify(value);
          // eslint-ignore-next-line no-fallthrough

          case 'boolean':
          case 'string':
          default:
            body += `${Utils.escapeHtml(name)}: ${Utils.escapeHtml(value)}`;
            break;
        }

        body += '<br>';
      } // Trim off the final '<br>'

    } catch (err) {
      _didIteratorError3 = true;
      _iteratorError3 = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion3 && _iterator3.return != null) {
          _iterator3.return();
        }
      } finally {
        if (_didIteratorError3) {
          throw _iteratorError3;
        }
      }
    }

    body = body.substring(0, body.length - 4);
  }

  var el = document.createElement('div');
  var item = `<li class="event-item">
    <div class="event-header">
      <span class="event-name">${Utils.escapeHtml(event.name)}</span>
      <span class="event-time" data-original="${event.timestamp.toISOString()}"
            title="${event.timestamp.toLocaleString()}">
        ${Utils.fuzzyTime(event.timestamp)}
      </span>
    </div>
    <div class="event-body">${body}</div>
  </li>`;
  el.innerHTML = item;

  while (this.element.childNodes.length >= this.limit) {
    this.element.removeChild(this.element.lastChild);
  }

  this.element.insertBefore(el.firstChild, this.element.firstChild);
};

EventList.prototype.updateTimestamps = function () {
  var _iteratorNormalCompletion4 = true;
  var _didIteratorError4 = false;
  var _iteratorError4 = undefined;

  try {
    for (var _iterator4 = this.element.querySelectorAll('.event-time')[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {
      var el = _step4.value;
      el.innerText = Utils.fuzzyTime(new Date(el.dataset.original));
    }
  } catch (err) {
    _didIteratorError4 = true;
    _iteratorError4 = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion4 && _iterator4.return != null) {
        _iterator4.return();
      }
    } finally {
      if (_didIteratorError4) {
        throw _iteratorError4;
      }
    }
  }
};

module.exports = EventList;

/***/ }),

/***/ "./static/js/floorplan.js":
/*!********************************!*\
  !*** ./static/js/floorplan.js ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Floorplan Screen.
 *
 * Represents things on a floorplan of your home.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */


__webpack_require__(/*! core-js/modules/web.dom.iterable */ "./node_modules/core-js/modules/web.dom.iterable.js");

var page = __webpack_require__(/*! page */ "./node_modules/page/page.js");

var API = __webpack_require__(/*! ./api */ "./static/js/api.js");

var App = __webpack_require__(/*! ./app */ "./static/js/app.js");

var Constants = __webpack_require__(/*! ./constants */ "./static/js/constants.js");

var BinarySensor = __webpack_require__(/*! ./binary-sensor */ "./static/js/binary-sensor.js");

var ColorControl = __webpack_require__(/*! ./color-control */ "./static/js/color-control.js");

var DoorSensor = __webpack_require__(/*! ./door-sensor */ "./static/js/door-sensor.js");

var EnergyMonitor = __webpack_require__(/*! ./energy-monitor */ "./static/js/energy-monitor.js");

var Light = __webpack_require__(/*! ./light */ "./static/js/light.js");

var MotionSensor = __webpack_require__(/*! ./motion-sensor */ "./static/js/motion-sensor.js");

var MultiLevelSensor = __webpack_require__(/*! ./multi-level-sensor */ "./static/js/multi-level-sensor.js");

var MultiLevelSwitch = __webpack_require__(/*! ./multi-level-switch */ "./static/js/multi-level-switch.js");

var OnOffSwitch = __webpack_require__(/*! ./on-off-switch */ "./static/js/on-off-switch.js");

var PushButton = __webpack_require__(/*! ./push-button */ "./static/js/push-button.js");

var SmartPlug = __webpack_require__(/*! ./smart-plug */ "./static/js/smart-plug.js");

var Thing = __webpack_require__(/*! ./thing */ "./static/js/thing.js"); // eslint-disable-next-line no-unused-vars


var FloorplanScreen = {
  ORIGIN_X: 6,
  // X co-ordinate to start placing un-positioned things from.
  ORIGIN_Y: 7,
  // Y co-ordinate to start placing un-positioned things from.
  MAX_X: 100,
  // Max X range.
  MAX_Y: 100,
  // Max Y range.
  THING_GAP: 11,
  // Gap between unpositioned things along x axis.

  /**
  * Initialise Floorplan Screen.
  */
  init: function init() {
    // A list of Things on the floorplan
    this.things = [];
    this.view = document.getElementById('floorplan-view');
    this.floorplan = document.getElementById('floorplan');
    this.backButton = document.getElementById('back-button');
    this.menuButton = document.getElementById('menu-button');
    this.editButton = document.getElementById('floorplan-edit-button');
    this.doneButton = document.getElementById('floorplan-done-button');
    this.floorplanBackButton = document.getElementById('floorplan-back-button');
    this.uploadForm = document.getElementById('floorplan-upload-form');
    this.uploadButton = document.getElementById('floorplan-upload-button');
    this.fileInput = document.getElementById('floorplan-file-input');
    this.thingsElement = this.floorplan;
    this.updateVminRequest = null;
    this.vmin = 1;
    this.onResize = this.onResize.bind(this);
    this.updateVmin = this.updateVmin.bind(this);
    this.interactTimeout = null;
    this.onPointerDown = this.onPointerDown.bind(this);
    this.onPointerUp = this.onPointerUp.bind(this);
    this.editButton.addEventListener('click', this.edit.bind(this));
    this.doneButton.addEventListener('click', this.done.bind(this));
    this.floorplanBackButton.addEventListener('click', this.done.bind(this));
    this.uploadButton.addEventListener('click', this.requestFile.bind(this));
    this.uploadForm.addEventListener('submit', this.blackHole);
    this.fileInput.addEventListener('change', this.upload.bind(this));
    this.refreshThings = this.refreshThings.bind(this);
    this.things = [];
  },
  refreshThings: function refreshThings(things) {
    var _this = this;

    var thing;

    while (typeof (thing = this.things.pop()) !== 'undefined') {
      this.removeInteract(thing);
      thing.cleanup();
    }

    this.thingsElement.innerHTML = '';

    if (things.length === 0) {
      return;
    }

    var x = this.ORIGIN_X;
    var y = this.ORIGIN_Y;
    things.forEach(function (description, thingId) {
      App.gatewayModel.getThingModel(thingId).then(function (thingModel) {
        if (!description.floorplanX || !description.floorplanY) {
          description.floorplanX = x;
          description.floorplanY = y;
          x += _this.THING_GAP; // increment x co-ordinate.

          if (x > _this.MAX_X) {
            x = _this.ORIGIN_X;
            y += _this.THING_GAP;
          }

          if (y > _this.MAX_Y) {
            y = _this.ORIGIN_Y;
          }
        }

        var format = Constants.ThingFormat.LINK_ICON;
        var thing;

        if (description.selectedCapability) {
          switch (description.selectedCapability) {
            case 'OnOffSwitch':
              thing = new OnOffSwitch(thingModel, description, format);
              break;

            case 'MultiLevelSwitch':
              thing = new MultiLevelSwitch(thingModel, description, format);
              break;

            case 'ColorControl':
              thing = new ColorControl(thingModel, description, format);
              break;

            case 'EnergyMonitor':
              thing = new EnergyMonitor(thingModel, description, format);
              break;

            case 'BinarySensor':
              thing = new BinarySensor(thingModel, description, format);
              break;

            case 'MultiLevelSensor':
              thing = new MultiLevelSensor(thingModel, description, format);
              break;

            case 'SmartPlug':
              thing = new SmartPlug(thingModel, description, format);
              break;

            case 'Light':
              thing = new Light(thingModel, description, format);
              break;

            case 'DoorSensor':
              thing = new DoorSensor(thingModel, description, format);
              break;

            case 'MotionSensor':
              thing = new MotionSensor(thingModel, description, format);
              break;

            case 'PushButton':
              thing = new PushButton(thingModel, description, format);
              break;

            default:
              thing = new Thing(thingModel, description, format);
              break;
          }
        } else {
          switch (description.type) {
            case 'onOffSwitch':
              thing = new OnOffSwitch(thingModel, description, format);
              break;

            case 'onOffLight':
            case 'onOffColorLight':
            case 'dimmableLight':
            case 'dimmableColorLight':
              thing = new Light(thingModel, description, format);
              break;

            case 'binarySensor':
              thing = new BinarySensor(thingModel, description, format);
              break;

            case 'multiLevelSensor':
              thing = new MultiLevelSensor(thingModel, description, format);
              break;

            case 'multiLevelSwitch':
              thing = new MultiLevelSwitch(thingModel, description, format);
              break;

            case 'smartPlug':
              thing = new SmartPlug(thingModel, description, format);
              break;

            default:
              thing = new Thing(thingModel, description, format);
              break;
          }
        }

        thing.element.dataset.index = _this.things.length;

        _this.addInteract(thing);

        _this.things.push(thing); // Dynamically layout all things including the one we just added


        _this.updateVmin();
      });
    });
  },
  addInteract: function addInteract(thing) {
    thing.element.addEventListener('click', this.blackHole);
    thing.element.addEventListener('mousedown', this.onPointerDown);
    thing.element.addEventListener('mouseup', this.onPointerUp);
    thing.element.addEventListener('touchstart', this.onPointerDown);
    thing.element.addEventListener('touchend', this.onPointerUp);
  },
  removeInteract: function removeInteract(thing) {
    thing.element.removeEventListener('click', this.blackHole);
    thing.element.removeEventListener('mousedown', this.onPointerDown);
    thing.element.removeEventListener('mouseup', this.onPointerUp);
    thing.element.removeEventListener('touchstart', this.onPointerDown);
    thing.element.removeEventListener('touchend', this.onPointerUp);
  },
  show: function show() {
    window.addEventListener('resize', this.onResize);
    document.getElementById('speech-wrapper').classList.remove('assistant');
    this.backButton.classList.add('hidden');
    this.menuButton.classList.remove('hidden');
    App.gatewayModel.subscribe(Constants.DELETE_THINGS, this.refreshThings);
    App.gatewayModel.subscribe(Constants.REFRESH_THINGS, this.refreshThings, true);
  },

  /**
   * Put floorplan in edit mode.
   */
  edit: function edit() {
    var _this2 = this;

    this.view.classList.add('edit');
    this.editButton.classList.add('hidden');
    this.doneButton.classList.remove('hidden');
    this.uploadForm.classList.remove('hidden');
    this.thingsElement.classList.add('editing'); // Bind to this before adding listener to make it easier to remove.

    this.selectThing = this.selectThing.bind(this);
    this.moveThing = this.moveThing.bind(this);
    this.deselectThing = this.deselectThing.bind(this); // Disable hyperlinks for things

    this.things.forEach(function (thing) {
      thing.element.addEventListener('click', _this2.blackHole);
      thing.element.addEventListener('mousedown', _this2.selectThing);
      thing.element.addEventListener('touchstart', _this2.selectThing);
    }, this); // Enable moving and deslecting things

    this.pointerOffsetX = 0;
    this.pointerOffsetY = 0;
    this.thingsElement.addEventListener('mousemove', this.moveThing);
    this.thingsElement.addEventListener('mouseup', this.deselectThing);
    this.thingsElement.addEventListener('touchmove', this.moveThing);
    this.thingsElement.addEventListener('touchend', this.deselectThing);
  },

  /**
   * Exit edit mode.
   */
  done: function done() {
    var _this3 = this;

    this.view.classList.remove('edit');
    this.doneButton.classList.add('hidden');
    this.editButton.classList.remove('hidden');
    this.uploadForm.classList.add('hidden');
    this.thingsElement.classList.remove('editing'); // Re-enable hyperlinks for things

    this.things.forEach(function (thing) {
      thing.element.removeEventListener('click', _this3.blackHole);
      thing.element.removeEventListener('mousedown', _this3.selectThing);
      thing.element.removeEventListener('touchstart', _this3.selectThing);
    }, this); // Disable moving and deslecting things

    this.thingsElement.removeEventListener('mousemove', this.moveThing);
    this.thingsElement.removeEventListener('mouseup', this.deselectThing);
    this.thingsElement.removeEventListener('touchmove', this.moveThing);
    this.thingsElement.removeEventListener('touchend', this.deselectThing);
  },

  /**
   * Request a file from the user.
   */
  requestFile: function requestFile() {
    this.fileInput.click();
  },

  /**
   * Upload a file.
   *
   * @param {Event} e A change event on the file input.
   */
  upload: function upload(e) {
    var _this4 = this;

    var file = e.target.files[0];
    var formData = new FormData();
    formData.append('file', file);
    this.uploadButton.classList.add('loading');
    var headers = {
      Authorization: `Bearer ${API.jwt}`
    };
    fetch('/uploads', {
      method: 'POST',
      body: formData,
      headers: headers
    }).then(function (response) {
      _this4.uploadButton.classList.remove('loading');

      if (response.ok) {
        fetch('/uploads/floorplan.svg', {
          method: 'GET',
          headers: headers,
          // Make sure we update the cache with the new floorplan
          cache: 'reload'
        }).then(function () {
          // Add a timestamp to the background image to force image reload
          var timestamp = Date.now();

          _this4.floorplan.setAttribute('style', `background-image: url("/uploads/floorplan.svg?t=${timestamp}")`);
        });
      } else {
        console.error('Failed to upload floorplan');
      }
    }).catch(function (error) {
      _this4.uploadButton.classList.remove('loading');

      console.error(`Failed to upload floorplan ${error}`);
    });
  },

  /**
   * On resize schedule an update of vmin
   */
  onResize: function onResize() {
    if (!this.view.classList.contains('selected')) {
      window.removeEventListener('resize', this.onResize);
      return;
    }

    if (this.updateVminRequest) {
      return;
    }

    this.updateVminRequest = window.requestAnimationFrame(this.updateVmin);
  },

  /**
   * Update our manually calculated vmin unit
   */
  updateVmin: function updateVmin() {
    var _this5 = this;

    this.updateVminRequest = null;
    var newVmin = Math.min(window.innerWidth, window.innerHeight) / 100;
    this.vmin = newVmin;
    console.log('updateVmin', newVmin);
    this.things.forEach(function (thing) {
      var elt = thing.element;
      elt.style.transform = _this5.makeTransform(parseFloat(elt.dataset.x), parseFloat(elt.dataset.y));
    });
  },

  /**
   * @param {{x: number,  y: number}} screenPoint - in pixels from top left of
   *                                  viewport
   * @return {{x: number, y: number}} point in vmin units from top left of
   *                                  thingsElement
   */
  screenToRelVmin: function screenToRelVmin(screenPoint) {
    var thingsRect = this.thingsElement.getBoundingClientRect();
    var dx = (screenPoint.x - thingsRect.left) / this.vmin;
    var dy = (screenPoint.y - thingsRect.right) / this.vmin;
    return {
      x: dx,
      y: dy
    };
  },

  /**
   * Select Thing.
   *
   * @param {Event} e mousedown or touchstart event.
   */
  selectThing: function selectThing(e) {
    // Prevent interaction with HTML5 drag and drop
    e.preventDefault();
    this.selectedThing = e.currentTarget;
    var screenPoint = {
      x: e.clientX || e.touches[0].clientX,
      y: e.clientY || e.touches[0].clientY
    };
    var point = this.screenToRelVmin(screenPoint);
    this.pointerOffsetX = point.x - parseFloat(this.selectedThing.dataset.x);
    this.pointerOffsetY = point.y - parseFloat(this.selectedThing.dataset.y);
    this.selectedThing.style.cursor = 'grabbing';
  },

  /**
   * Deselect Thing.
   */
  deselectThing: function deselectThing() {
    if (!this.selectedThing) {
      return;
    }

    var thing = this.selectedThing;
    var x = parseFloat(thing.dataset.x);
    var y = parseFloat(thing.dataset.y);
    var thingUrl = thing.dataset.href;
    thing.style.cursor = ''; // HTTP PATCH request to set x and y co-ordinates of Thing in database.

    var payload = {
      floorplanX: x,
      floorplanY: y
    };
    fetch(thingUrl, {
      method: 'PATCH',
      body: JSON.stringify(payload),
      headers: {
        Authorization: `Bearer ${API.jwt}`,
        Accept: 'application/json',
        'Content-Type': 'application/json'
      }
    }).then(function (response) {
      if (!response.ok) {
        console.error(`Failed to move thing ${thingUrl}`);
      }
    }).catch(function (e) {
      console.error(`Error trying to move thing ${thingUrl} ${e}`);
    }); // Reset co-ordinates

    this.selectedThing = null;
    this.pointerOffsetX = 0;
    this.pointerOffsetY = 0;
  },

  /**
   * Move Thing.
   *
   * @param {Event} e mousemove or touchmove event.
   */
  moveThing: function moveThing(e) {
    if (!this.selectedThing) {
      return;
    }

    var screenPoint = {
      x: e.clientX || e.touches[0].clientX,
      y: e.clientY || e.touches[0].clientY
    };
    var point = this.screenToRelVmin(screenPoint);
    point.x -= this.pointerOffsetX;
    point.y -= this.pointerOffsetY; // Ensure Thing isn't moved outside the bounds of the floorplan.

    if (point.x < 0 || point.x > 100 || point.y < 0 || point.y > 100) {
      return;
    }

    this.selectedThing.dataset.x = point.x;
    this.selectedThing.dataset.y = point.y;
    this.selectedThing.style.transform = this.makeTransform(point.x, point.y);
  },

  /**
   * Generate a css transform for a given pair of floorplan-relative coordinates
   * @param {number} x
   * @param {number} y
   * @return {String}
   */
  makeTransform: function makeTransform(x, y) {
    var scaleFactor = 10 * this.vmin / 128;
    var translate = `translate(${x}vmin,${y}vmin)`;
    var scale = `scale(${scaleFactor})`;
    return `${translate} translate(-50%, -50%) ${scale}`;
  },
  onPointerDown: function onPointerDown(event) {
    var _this6 = this;

    if (this.thingsElement.classList.contains('editing')) {
      return;
    }

    if (event.type === 'mousedown' && event.buttons !== 1) {
      return;
    } // Prevent interaction with HTML5 drag and drop


    event.preventDefault();
    event.stopPropagation();
    this.selectedThing = event.currentTarget;
    this.interactTimeout = setTimeout(function () {
      if (_this6.selectedThing) {
        page(`${_this6.selectedThing.dataset.href}?referrer=%2ffloorplan`);
      }

      _this6.interactTimeout = null;
    }, 750);
  },
  onPointerUp: function onPointerUp(event) {
    if (this.thingsElement.classList.contains('editing')) {
      return;
    }

    if (!this.selectedThing) {
      return;
    }

    event.preventDefault();
    event.stopPropagation();
    var thing = this.things[this.selectedThing.dataset.index];

    if (this.interactTimeout) {
      if (thing.handleClick) {
        thing.handleClick();
      }

      clearTimeout(this.interactTimeout);
      this.interactTimeout = null;
    }

    this.selectedThing = null;
  },

  /*
   * Send an event into a black hole, never to be seen again.
   *
   * @param {Event} e Event to black hole.
   */
  blackHole: function blackHole(e) {
    e.preventDefault();
    e.stopPropagation();
    return false;
  }
};
module.exports = FloorplanScreen;

/***/ }),

/***/ "./static/js/installed-addon.js":
/*!**************************************!*\
  !*** ./static/js/installed-addon.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * InstalledAddon.
 *
 * Represents an existing, installed add-on.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */


var API = __webpack_require__(/*! ./api */ "./static/js/api.js");

var Utils = __webpack_require__(/*! ./utils */ "./static/js/utils.js");

var page = __webpack_require__(/*! page */ "./node_modules/page/page.js");
/**
 * InstalledAddon constructor.
 *
 * @param {Object} metadata InstalledAddon metadata object.
 * @param {Object} installedAddonsMap Handle to the installedAddons map from
 *                 SettingsScreen.
 * @param {Object} availableAddonsMap Handle to the availableAddons map from
 *                 SettingsScreen.
 */


var InstalledAddon = function InstalledAddon(metadata, installedAddonsMap, availableAddonsMap) {
  this.name = metadata.name;
  this.displayName = metadata.display_name;
  this.description = metadata.description;
  this.author = metadata.author;
  this.homepage = metadata.homepage;
  this.version = metadata.version;
  this.enabled = metadata.moziot.enabled;
  this.config = metadata.moziot.config;
  this.schema = metadata.moziot.schema;
  this.updateUrl = null;
  this.updateVersion = null;
  this.updateChecksum = null;
  this.container = document.getElementById('installed-addons-list');
  this.installedAddonsMap = installedAddonsMap;
  this.availableAddonsMap = availableAddonsMap;
  this.render();
};
/**
 * HTML view for InstalledAddon.
 */


InstalledAddon.prototype.view = function () {
  var toggleButtonText, toggleButtonClass;

  if (this.enabled) {
    toggleButtonText = 'Disable';
    toggleButtonClass = 'addon-settings-disable';
  } else {
    toggleButtonText = 'Enable';
    toggleButtonClass = 'addon-settings-enable';
  }

  var configButtonClass = this.schema ? '' : 'hidden';
  var name = this.displayName || this.name;
  return `
    <li id="addon-item-${Utils.escapeHtmlForIdClass(this.name)}"
      class="addon-item">
      <div class="addon-settings-header">
        <span class="addon-settings-name">
          ${Utils.escapeHtml(name)}
        </span>
        <span class="addon-settings-version">
          ${Utils.escapeHtml(this.version)}
        </span>
        <span class="addon-settings-description">
          ${Utils.escapeHtml(this.description)}
        </span>
        <span class="addon-settings-author">
          by <a href="${this.homepage}" target="_blank" rel="noopener">
            ${Utils.escapeHtml(this.author)}
          </a>
        </span>
      </div>
      <div class="addon-settings-controls">
        <button id="addon-config-${Utils.escapeHtmlForIdClass(this.name)}"
          class="text-button addon-settings-config ${configButtonClass}">
          Configure
        </button>
        <button id="addon-update-${Utils.escapeHtmlForIdClass(this.name)}"
          class="text-button addon-settings-update hidden">
          Update
        </button>
        <span class="addon-settings-spacer"></span>
        <button id="addon-remove-${Utils.escapeHtmlForIdClass(this.name)}"
          class="text-button addon-settings-remove">
          Remove
        </button>
        <button id="addon-toggle-${Utils.escapeHtmlForIdClass(this.name)}"
          class="text-button ${toggleButtonClass}">
          ${toggleButtonText}
        </button>
      </div>
    </li>`;
};
/**
 * Render InstalledAddon view and add to DOM.
 */


InstalledAddon.prototype.render = function () {
  this.container.insertAdjacentHTML('beforeend', this.view());
  var configButton = document.getElementById(`addon-config-${Utils.escapeHtmlForIdClass(this.name)}`);
  configButton.addEventListener('click', this.handleConfig.bind(this));
  var updateButton = document.getElementById(`addon-update-${Utils.escapeHtmlForIdClass(this.name)}`);
  updateButton.addEventListener('click', this.handleUpdate.bind(this));
  var removeButton = document.getElementById(`addon-remove-${Utils.escapeHtmlForIdClass(this.name)}`);
  removeButton.addEventListener('click', this.handleRemove.bind(this));
  var toggleButton = document.getElementById(`addon-toggle-${Utils.escapeHtmlForIdClass(this.name)}`);
  toggleButton.addEventListener('click', this.handleToggle.bind(this));
};
/**
 * Update the view to indicate that an update is available.
 *
 * @param {string} url - URL for updated add-on package
 * @param {string} version - Version of updated add-on package
 * @param {string} checksum - Checksum of the updated add-on package
 */


InstalledAddon.prototype.setUpdateAvailable = function (url, version, checksum) {
  this.updateUrl = url;
  this.updateVersion = version;
  this.updateChecksum = checksum;
  var button = document.getElementById(`addon-update-${Utils.escapeHtmlForIdClass(this.name)}`);
  button.classList.remove('hidden');
};
/**
 * Handle a click on the config button.
 */


InstalledAddon.prototype.handleConfig = function () {
  page(`/settings/addons/config/${this.name}`);
};
/**
 * Handle a click on the update button.
 */


InstalledAddon.prototype.handleUpdate = function (e) {
  var _this = this;

  var controlDiv = e.target.parentNode;
  var versionDiv = document.querySelector(`#addon-item-${Utils.escapeHtmlForIdClass(this.name)} ` + '.addon-settings-version');
  var updating = document.createElement('span');
  updating.classList.add('addon-updating');
  updating.innerText = 'Updating...';
  controlDiv.replaceChild(updating, e.target);
  API.updateAddon(this.name, this.updateUrl, this.updateChecksum).then(function () {
    _this.version = _this.updateVersion;

    var addon = _this.installedAddonsMap.get(_this.name);

    addon.version = _this.version;
    versionDiv.innerText = _this.version;
    updating.innerText = 'Updated';
  }).catch(function (err) {
    console.error(`Failed to update add-on: ${_this.name}\n${err}`);
    updating.innerText = 'Failed';
  });
};
/**
 * Handle a click on the remove button.
 */


InstalledAddon.prototype.handleRemove = function () {
  var _this2 = this;

  API.uninstallAddon(this.name).then(function () {
    var el = document.getElementById(`addon-item-${Utils.escapeHtmlForIdClass(_this2.name)}`);
    el.parentNode.removeChild(el);

    _this2.installedAddonsMap.delete(_this2.name);

    var addon = _this2.availableAddonsMap.get(_this2.name);

    if (addon) {
      addon.installed = false;
    }
  }).catch(function (e) {
    console.error(`Failed to uninstall add-on: ${_this2.name}\n${e}`);
  });
};
/**
 * Handle a click on the enable/disable button.
 */


InstalledAddon.prototype.handleToggle = function (e) {
  var _this3 = this;

  var button = e.target;
  var enabled = !this.enabled;
  API.setAddonSetting(this.name, enabled).then(function () {
    _this3.enabled = enabled;

    var addon = _this3.installedAddonsMap.get(_this3.name);

    addon.moziot.enabled = enabled;

    if (_this3.enabled) {
      button.innerText = 'Disable';
      button.classList.remove('addon-settings-enable');
      button.classList.add('addon-settings-disable');
    } else {
      button.innerText = 'Enable';
      button.classList.remove('addon-settings-disable');
      button.classList.add('addon-settings-enable');
    }
  }).catch(function (err) {
    console.error(`Failed to toggle add-on: ${_this3.name}\n${err}`);
  });
};

module.exports = InstalledAddon;

/***/ }),

/***/ "./static/js/light.js":
/*!****************************!*\
  !*** ./static/js/light.js ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Light
 *
 * UI element representing  Light.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */


__webpack_require__(/*! core-js/modules/es6.reflect.get */ "./node_modules/core-js/modules/es6.reflect.get.js");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (typeof call === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var OnOffSwitch = __webpack_require__(/*! ./on-off-switch */ "./static/js/on-off-switch.js");

var Light =
/*#__PURE__*/
function (_OnOffSwitch) {
  _inherits(Light, _OnOffSwitch);

  /**
   * Light Constructor (extends OnOffSwitch).
   *
   * @param {Object} description Thing description object.
   * @param {Number} format See Constants.ThingFormat
   */
  function Light(model, description, format) {
    _classCallCheck(this, Light);

    return _possibleConstructorReturn(this, _getPrototypeOf(Light).call(this, model, description, format, {
      baseIcon: '/optimized-images/thing-icons/light.svg'
    }));
  }
  /**
   * Find any properties required for this view.
   */


  _createClass(Light, [{
    key: "findProperties",
    value: function findProperties() {
      _get(_getPrototypeOf(Light.prototype), "findProperties", this).call(this);

      this.brightnessProperty = null;
      this.colorProperty = null;
      this.colorTemperatureProperty = null; // Look for properties by type first.

      for (var name in this.displayedProperties) {
        var type = this.displayedProperties[name].property['@type'];

        if (this.brightnessProperty === null && type === 'BrightnessProperty') {
          this.brightnessProperty = name;
        } else if (this.colorProperty === null && type === 'ColorProperty') {
          this.colorProperty = name;
        } else if (this.colorTemperatureProperty === null && type === 'ColorTemperatureProperty') {
          this.colorTemperatureProperty = name;
        }
      } // If necessary, match on name.


      if (this.brightnessProperty === null && this.displayedProperties.hasOwnProperty('level')) {
        this.brightnessProperty = 'level';
      }

      if (this.colorProperty === null && this.displayedProperties.hasOwnProperty('color')) {
        this.colorProperty = 'color';
      }

      if (this.colorTemperatureProperty === null && this.displayedProperties.hasOwnProperty('colorTemperature')) {
        this.colorTemperatureProperty = 'colorTemperature';
      }
    }
  }, {
    key: "updateProperty",

    /**
     * Update the display for the provided property.
     * @param {string} name - name of the property
     * @param {*} value - value of the property
     */
    value: function updateProperty(name, value) {
      _get(_getPrototypeOf(Light.prototype), "updateProperty", this).call(this, name, value);

      if (!this.displayedProperties.hasOwnProperty(name)) {
        return;
      }

      if (name === this.brightnessProperty) {
        value = parseInt(value, 10);
        this.icon.brightness = value;
      } else if (name === this.colorProperty) {
        this.icon.color = value;
      } else if (name === this.colorTemperatureProperty) {
        value = parseInt(value, 10);
        this.icon.colorTemperature = value;
      }
    }
  }, {
    key: "iconView",
    value: function iconView() {
      var color = '';

      if (this.colorProperty !== null) {
        color = 'data-have-color="true"';
      } else if (this.colorTemperatureProperty !== null) {
        color = 'data-have-color-temperature="true"';
      }

      var brightness = '';

      if (this.brightnessProperty !== null) {
        brightness = 'data-have-brightness="true"';
      }

      return `
      <webthing-light-capability ${color} ${brightness}>
      </webthing-light-capability>`;
    }
  }, {
    key: "icon",
    get: function get() {
      return this.element.querySelector('webthing-light-capability');
    }
  }]);

  return Light;
}(OnOffSwitch);

module.exports = Light;

/***/ }),

/***/ "./static/js/menu.js":
/*!***************************!*\
  !*** ./static/js/menu.js ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Main Menu.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */


__webpack_require__(/*! core-js/modules/es7.symbol.async-iterator */ "./node_modules/core-js/modules/es7.symbol.async-iterator.js");

__webpack_require__(/*! core-js/modules/es6.symbol */ "./node_modules/core-js/modules/es6.symbol.js");

__webpack_require__(/*! core-js/modules/web.dom.iterable */ "./node_modules/core-js/modules/web.dom.iterable.js");

var API = __webpack_require__(/*! ./api */ "./static/js/api.js"); // eslint-disable-next-line no-unused-vars


var Menu = {
  /**
   * Initialise menu.
   */
  init: function init() {
    this.element = document.getElementById('main-menu');
    this.scrim = document.getElementById('menu-scrim');
    this.hidden = true;
    this.element.addEventListener('click', this.handleClick.bind(this));
    this.scrim.addEventListener('click', this.handleScrimClick.bind(this));
    this.items = {};
    this.items.assistant = [document.getElementById('assistant-menu-item'), document.getElementById('speech-wrapper')];
    this.items.things = [document.getElementById('things-menu-item')];
    this.items.settings = [document.getElementById('settings-menu-item')];
    this.items.floorplan = [document.getElementById('floorplan-menu-item')];
    this.items.rules = [document.getElementById('rules-menu-item')];
    this.items.rule = [document.getElementById('rules-menu-item')];
    this.currentItem = 'things';
    this.getExperimentSetting('assistant');
  },

  /**
   * Update a menu item's visibility based on whether its corresponding
   * experiment is enabled
   * @param {String} experiment
   */
  getExperimentSetting: function getExperimentSetting(experiment) {
    API.getExperimentSetting(experiment).then(function (value) {
      if (value) {
        Menu.showItem(experiment);
      } else {
        Menu.hideItem(experiment);
      }
    }).catch(function (e) {
      console.warn(`${experiment} experiment setting is not yet set ${e}`);
    });
  },

  /**
  * Show menu.
  */
  show: function show() {
    this.element.classList.remove('hidden');
    this.scrim.classList.remove('hidden');
    this.hidden = false;
  },

  /**
  * Hide menu.
  */
  hide: function hide() {
    this.element.classList.add('hidden');
    this.scrim.classList.add('hidden');
    this.hidden = true;
  },

  /**
   * Toggle menu visibility
   */
  toggle: function toggle() {
    if (this.hidden) {
      this.show();
    } else {
      this.hide();
    }
  },

  /**
   * Handle a click event.
   *
   * @param {Event} Click event.
   */
  handleClick: function handleClick(e) {
    if (e.target.tagName != 'A') {
      return;
    }

    this.hide();
  },

  /**
   * Handle a click event on scrim.
   *
   * @param {Event} Click event.
   */
  handleScrimClick: function handleScrimClick(_e) {
    this.hide();
  },

  /**
   * Select an item.
   *
   * @param {String} item Item ID.
   */
  selectItem: function selectItem(item) {
    if (!this.items[item]) {
      console.error(`Tried to select a menu item that didnt exist ${item}`);
      return;
    }

    var _iteratorNormalCompletion = true;
    var _didIteratorError = false;
    var _iteratorError = undefined;

    try {
      for (var _iterator = this.items[this.currentItem][Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var elt = _step.value;
        elt.classList.remove('selected');
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator.return != null) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }

    var _iteratorNormalCompletion2 = true;
    var _didIteratorError2 = false;
    var _iteratorError2 = undefined;

    try {
      for (var _iterator2 = this.items[item][Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
        var _elt = _step2.value;

        _elt.classList.add('selected');
      }
    } catch (err) {
      _didIteratorError2 = true;
      _iteratorError2 = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion2 && _iterator2.return != null) {
          _iterator2.return();
        }
      } finally {
        if (_didIteratorError2) {
          throw _iteratorError2;
        }
      }
    }

    this.currentItem = item;
  },

  /**
   * Enable a menu item.
   */
  showItem: function showItem(item) {
    var _iteratorNormalCompletion3 = true;
    var _didIteratorError3 = false;
    var _iteratorError3 = undefined;

    try {
      for (var _iterator3 = this.items[item][Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
        var elt = _step3.value;
        elt.classList.remove('hidden');
      }
    } catch (err) {
      _didIteratorError3 = true;
      _iteratorError3 = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion3 && _iterator3.return != null) {
          _iterator3.return();
        }
      } finally {
        if (_didIteratorError3) {
          throw _iteratorError3;
        }
      }
    }
  },

  /*
   * Disable a menu item.
   */
  hideItem: function hideItem(item) {
    var _iteratorNormalCompletion4 = true;
    var _didIteratorError4 = false;
    var _iteratorError4 = undefined;

    try {
      for (var _iterator4 = this.items[item][Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {
        var elt = _step4.value;
        elt.classList.add('hidden');
      }
    } catch (err) {
      _didIteratorError4 = true;
      _iteratorError4 = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion4 && _iterator4.return != null) {
          _iterator4.return();
        }
      } finally {
        if (_didIteratorError4) {
          throw _iteratorError4;
        }
      }
    }
  }
};
module.exports = Menu;

/***/ }),

/***/ "./static/js/models/gateway-model.js":
/*!*******************************************!*\
  !*** ./static/js/models/gateway-model.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Gateway Model.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */


__webpack_require__(/*! core-js/modules/es6.reflect.get */ "./node_modules/core-js/modules/es6.reflect.get.js");

__webpack_require__(/*! core-js/modules/es6.regexp.split */ "./node_modules/core-js/modules/es6.regexp.split.js");

__webpack_require__(/*! core-js/modules/es6.promise */ "./node_modules/core-js/modules/es6.promise.js");

__webpack_require__(/*! core-js/modules/web.dom.iterable */ "./node_modules/core-js/modules/web.dom.iterable.js");

__webpack_require__(/*! core-js/modules/es6.map */ "./node_modules/core-js/modules/es6.map.js");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (typeof call === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

var API = __webpack_require__(/*! ../api */ "./static/js/api.js");

var Model = __webpack_require__(/*! ./model */ "./static/js/models/model.js");

var ThingModel = __webpack_require__(/*! ./thing-model */ "./static/js/models/thing-model.js");

var Constants = __webpack_require__(/*! ../constants */ "./static/js/constants.js");

var GatewayModel =
/*#__PURE__*/
function (_Model) {
  _inherits(GatewayModel, _Model);

  function GatewayModel() {
    var _this;

    _classCallCheck(this, GatewayModel);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(GatewayModel).call(this));
    _this.thingModels = new Map();
    _this.things = new Map();
    _this.queue = Promise.resolve(true);

    _this.refreshThings();

    return _possibleConstructorReturn(_this, _assertThisInitialized(_assertThisInitialized(_this)));
  }

  _createClass(GatewayModel, [{
    key: "addQueue",
    value: function addQueue(job) {
      this.queue = this.queue.then(job).catch(function (e) {
        console.error(e);
      });
      return this.queue;
    }
  }, {
    key: "subscribe",
    value: function subscribe(event, handler) {
      var immediate = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

      _get(_getPrototypeOf(GatewayModel.prototype), "subscribe", this).call(this, event, handler);

      switch (event) {
        case Constants.REFRESH_THINGS:
          if (immediate) {
            handler(this.things);
          }

          break;

        case Constants.DELETE_THINGS:
          break;

        default:
          console.warn(`GatewayModel does not support event:${event}`);
          break;
      }
    }
  }, {
    key: "setThing",
    value: function setThing(thingId, description) {
      if (!this.thingModels.has(thingId)) {
        var thingModel = new ThingModel(description);
        thingModel.subscribe(Constants.DELETE_THING, this.handleRemove.bind(this));
        this.thingModels.set(thingId, thingModel);
      }

      this.things.set(thingId, description);
    }
  }, {
    key: "getThing",
    value: function getThing(thingId) {
      var _this2 = this;

      if (this.thingModels.has(thingId) && this.things.has(thingId)) {
        return Promise.resolve(this.things.get(thingId));
      }

      return this.refreshThing(thingId).then(function () {
        return _this2.things.get(thingId);
      });
    }
  }, {
    key: "getThingModel",
    value: function getThingModel(thingId) {
      var _this3 = this;

      if (this.thingModels.has(thingId)) {
        return Promise.resolve(this.thingModels.get(thingId));
      }

      return this.refreshThing(thingId).then(function () {
        return _this3.thingModels.get(thingId);
      });
    }
    /**
     * Remove the thing.
     *
     * @param {string} thingId - Id of the thing
     */

  }, {
    key: "removeThing",
    value: function removeThing(thingId) {
      var _this4 = this;

      if (!this.thingModels.has(thingId)) {
        return Promise.reject(`No Thing id:${thingId}`);
      }

      return this.addQueue(function () {
        if (!_this4.thingModels.has(thingId)) {
          throw new Error(`Thing id:${thingId} already removed`);
        }

        var thingModel = _this4.thingModels.get(thingId);

        return thingModel.removeThing();
      });
    }
    /**
     * Update the thing.
     *
     * @param {string} thingId - Id of the thing
     * @param {object} updates - contents of update
     */

  }, {
    key: "updateThing",
    value: function updateThing(thingId, updates) {
      var _this5 = this;

      if (!this.thingModels.has(thingId)) {
        return Promise.reject(`No Thing id:${thingId}`);
      }

      return this.addQueue(function () {
        if (!_this5.thingModels.has(thingId)) {
          throw new Error(`Thing id:${thingId} already removed`);
        }

        var thingModel = _this5.thingModels.get(thingId);

        return thingModel.updateThing(updates).then(function () {
          _this5.refreshThing(thingId);
        });
      });
    }
  }, {
    key: "handleRemove",
    value: function handleRemove(thingId) {
      if (this.thingModels.has(thingId)) {
        this.thingModels.get(thingId).cleanup();
        this.thingModels.delete(thingId);
      }

      if (this.things.has(thingId)) {
        this.things.delete(thingId);
      }

      return this.handleEvent(Constants.DELETE_THINGS, this.things);
    }
  }, {
    key: "refreshThings",
    value: function refreshThings() {
      var _this6 = this;

      var opts = {
        headers: {
          Authorization: `Bearer ${API.jwt}`,
          Accept: 'application/json'
        }
      };
      return this.addQueue(function () {
        return fetch('/things', opts).then(function (response) {
          if (response.ok) {
            return response.json();
          } else {
            throw new Error(`response status:${response.statusText}`);
          }
        }).then(function (things) {
          things.forEach(function (description) {
            var thingId = description.href.split('/').pop();

            _this6.setThing(thingId, description);
          });
          return _this6.handleEvent(Constants.REFRESH_THINGS, _this6.things);
        }).catch(function (e) {
          console.error(`Get things failed ${e}`);
        });
      });
    }
  }, {
    key: "refreshThing",
    value: function refreshThing(thingId) {
      var _this7 = this;

      var opts = {
        headers: {
          Authorization: `Bearer ${API.jwt}`,
          Accept: 'application/json'
        }
      };
      return this.addQueue(function () {
        return fetch(`/things/${encodeURIComponent(thingId)}`, opts).then(function (response) {
          if (response.ok) {
            return response.json();
          } else {
            throw new Error(`response status:${response.statusText}`);
          }
        }).then(function (description) {
          if (!description) {
            throw new Error(`Unavailable Thing Description: ${description}`);
          }

          _this7.setThing(thingId, description);

          return _this7.handleEvent(Constants.REFRESH_THINGS, _this7.things);
        }).catch(function (e) {
          console.error(`Get thing id:${thingId} failed ${e}`);
        });
      });
    }
  }]);

  return GatewayModel;
}(Model);

module.exports = GatewayModel;

/***/ }),

/***/ "./static/js/models/model.js":
/*!***********************************!*\
  !*** ./static/js/models/model.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Abstract Model class.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */


__webpack_require__(/*! core-js/modules/es6.promise */ "./node_modules/core-js/modules/es6.promise.js");

__webpack_require__(/*! core-js/modules/es7.symbol.async-iterator */ "./node_modules/core-js/modules/es7.symbol.async-iterator.js");

__webpack_require__(/*! core-js/modules/es6.symbol */ "./node_modules/core-js/modules/es6.symbol.js");

__webpack_require__(/*! regenerator-runtime/runtime */ "./node_modules/regenerator-runtime/runtime.js");

__webpack_require__(/*! core-js/modules/web.dom.iterable */ "./node_modules/core-js/modules/web.dom.iterable.js");

__webpack_require__(/*! core-js/modules/es6.map */ "./node_modules/core-js/modules/es6.map.js");

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } } function _next(value) { step("next", value); } function _throw(err) { step("throw", err); } _next(); }); }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var Model =
/*#__PURE__*/
function () {
  function Model() {
    _classCallCheck(this, Model);

    this.handlers = new Map();
    return this;
  }
  /**
   * Cleanup objects.
   */


  _createClass(Model, [{
    key: "cleanup",
    value: function cleanup() {
      this.handlers.forEach(function (value) {
        value.clear();
      });
      this.handlers.clear();
    }
    /**
     * Unsubscribe changing state events.
     * @param {string} event - an event the handler subscribed
     * @param {function} handler - the handler subscribed
     */

  }, {
    key: "unsubscribe",
    value: function unsubscribe(event, handler) {
      if (!this.handlers.has(event)) {
        return;
      }

      var eventHandlers = this.handlers.get(event);
      eventHandlers.delete(handler);
    }
    /**
     * Subscribe changing state events.
     * @param {string} event - an event the handler subscribe
     * @param {function} handler - the handler for getting state.
     */

  }, {
    key: "subscribe",
    value: function subscribe(event, handler) {
      if (!this.handlers.has(event)) {
        this.handlers.set(event, new Map());
      }

      var eventHandlers = this.handlers.get(event);
      eventHandlers.set(handler, handler);
    }
    /**
     * Call the handlers which subscribed.
     * @param {string} event - an event
     * @param {*} state - a state which is pushed to handlers
     */

  }, {
    key: "handleEvent",
    value: function () {
      var _handleEvent = _asyncToGenerator(
      /*#__PURE__*/
      regeneratorRuntime.mark(function _callee(event, state) {
        var eventHandlers, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, handler;

        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                if (this.handlers.has(event)) {
                  _context.next = 2;
                  break;
                }

                return _context.abrupt("return");

              case 2:
                eventHandlers = this.handlers.get(event);
                _iteratorNormalCompletion = true;
                _didIteratorError = false;
                _iteratorError = undefined;
                _context.prev = 6;
                _iterator = eventHandlers.keys()[Symbol.iterator]();

              case 8:
                if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {
                  _context.next = 21;
                  break;
                }

                handler = _step.value;
                _context.prev = 10;
                _context.next = 13;
                return handler(state);

              case 13:
                _context.next = 18;
                break;

              case 15:
                _context.prev = 15;
                _context.t0 = _context["catch"](10);
                console.error(`Error occurred in handler event:${event} state:${state} ${_context.t0}`);

              case 18:
                _iteratorNormalCompletion = true;
                _context.next = 8;
                break;

              case 21:
                _context.next = 27;
                break;

              case 23:
                _context.prev = 23;
                _context.t1 = _context["catch"](6);
                _didIteratorError = true;
                _iteratorError = _context.t1;

              case 27:
                _context.prev = 27;
                _context.prev = 28;

                if (!_iteratorNormalCompletion && _iterator.return != null) {
                  _iterator.return();
                }

              case 30:
                _context.prev = 30;

                if (!_didIteratorError) {
                  _context.next = 33;
                  break;
                }

                throw _iteratorError;

              case 33:
                return _context.finish(30);

              case 34:
                return _context.finish(27);

              case 35:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this, [[6, 23, 27, 35], [10, 15], [28,, 30, 34]]);
      }));

      return function handleEvent(_x, _x2) {
        return _handleEvent.apply(this, arguments);
      };
    }()
  }]);

  return Model;
}();

module.exports = Model;

/***/ }),

/***/ "./static/js/models/thing-model.js":
/*!*****************************************!*\
  !*** ./static/js/models/thing-model.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Thing Model.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */


__webpack_require__(/*! core-js/modules/es6.reflect.get */ "./node_modules/core-js/modules/es6.reflect.get.js");

__webpack_require__(/*! core-js/modules/es7.object.values */ "./node_modules/core-js/modules/es7.object.values.js");

__webpack_require__(/*! core-js/modules/es6.object.assign */ "./node_modules/core-js/modules/es6.object.assign.js");

__webpack_require__(/*! core-js/modules/es6.regexp.replace */ "./node_modules/core-js/modules/es6.regexp.replace.js");

__webpack_require__(/*! core-js/modules/es6.promise */ "./node_modules/core-js/modules/es6.promise.js");

__webpack_require__(/*! core-js/modules/es7.symbol.async-iterator */ "./node_modules/core-js/modules/es7.symbol.async-iterator.js");

__webpack_require__(/*! core-js/modules/es6.symbol */ "./node_modules/core-js/modules/es6.symbol.js");

__webpack_require__(/*! core-js/modules/web.dom.iterable */ "./node_modules/core-js/modules/web.dom.iterable.js");

__webpack_require__(/*! core-js/modules/es6.regexp.split */ "./node_modules/core-js/modules/es6.regexp.split.js");

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (typeof call === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

var API = __webpack_require__(/*! ../api */ "./static/js/api.js");

var App = __webpack_require__(/*! ../app */ "./static/js/app.js");

var Model = __webpack_require__(/*! ./model */ "./static/js/models/model.js");

var Constants = __webpack_require__(/*! ../constants */ "./static/js/constants.js");

var ThingModel =
/*#__PURE__*/
function (_Model) {
  _inherits(ThingModel, _Model);

  function ThingModel(description) {
    var _this;

    _classCallCheck(this, ThingModel);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(ThingModel).call(this));
    _this.name = description.name;
    _this.type = description.type;
    _this.properties = {};
    _this.events = [];
    _this.connected = false;
    _this.closingWs = false;
    _this.wsBackoff = 1000; // Parse base URL of Thing

    if (description.href) {
      _this.href = new URL(description.href, App.ORIGIN);
      _this.id = _this.href.pathname.split('/').pop();
    } // Parse events URL


    var _iteratorNormalCompletion = true;
    var _didIteratorError = false;
    var _iteratorError = undefined;

    try {
      for (var _iterator = description.links[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var link = _step.value;

        switch (link.rel) {
          case 'events':
            _this.eventsHref = new URL(link.href, App.ORIGIN);
            break;

          case 'properties':
            _this.propertiesHref = new URL(link.href, App.ORIGIN);
            break;

          default:
            break;
        }
      } // Parse properties

    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator.return != null) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }

    _this.propertyDescriptions = {};

    if (description.hasOwnProperty('properties')) {
      for (var propertyName in description.properties) {
        var property = description.properties[propertyName];
        _this.propertyDescriptions[propertyName] = property;
      }
    } // Parse events


    _this.eventDescriptions = {};

    if (description.hasOwnProperty('events')) {
      for (var eventName in description.events) {
        var event = description.events[eventName];
        _this.eventDescriptions[eventName] = event;
      }
    }

    _this.initWebsocket();

    _this.updateEvents();

    _this.updateProperties();

    return _possibleConstructorReturn(_this, _assertThisInitialized(_assertThisInitialized(_this)));
  }
  /**
   * Remove the thing.
   */


  _createClass(ThingModel, [{
    key: "removeThing",
    value: function removeThing() {
      var _this2 = this;

      return new Promise(function (resolve, reject) {
        fetch(_this2.href, {
          method: 'DELETE',
          headers: {
            Authorization: `Bearer ${API.jwt}`,
            Accept: 'application/json',
            'Content-Type': 'application/json'
          }
        }).then(function (response) {
          if (response.ok) {
            console.log('Successfully removed Thing.');

            _this2.handleEvent(Constants.DELETE_THING, _this2.id);

            _this2.cleanup();

            resolve();
          } else {
            reject(`Failed removing thing ${response.statusText}`);
          }
        }).catch(function (error) {
          console.error(error);
          reject('Error occurred while removing thing');
        });
      });
    }
    /**
     * Update the thing.
     */

  }, {
    key: "updateThing",
    value: function updateThing(updates) {
      var _this3 = this;

      return new Promise(function (resolve, reject) {
        fetch(_this3.href, {
          method: 'PUT',
          headers: {
            Authorization: `Bearer ${API.jwt}`,
            Accept: 'application/json',
            'Content-Type': 'application/json'
          },
          body: JSON.stringify(updates)
        }).then(function (response) {
          if (response.ok) {
            console.log('Successfully updated Thing.');
            resolve();
          } else {
            reject(`Failed updating thing ${response.statusText}`);
          }
        }).catch(function (error) {
          console.error(error);
          reject('Error occurred while updating thing');
        });
      });
    }
    /**
     * Initialize websocket.
     */

  }, {
    key: "initWebsocket",
    value: function initWebsocket() {
      var _this4 = this;

      if (this.closingWs) {
        return;
      }

      if (!this.hasOwnProperty('href')) {
        return;
      }

      var wsHref = this.href.href.replace(/^http/, 'ws');
      this.ws = new WebSocket(`${wsHref}?jwt=${API.jwt}`); // After the websocket is open, add subscriptions for all events.

      this.ws.addEventListener('open', function () {
        // Reset the backoff period
        _this4.wsBackoff = 1000;

        if (Object.keys(_this4.eventDescriptions).length == 0) {
          return;
        }

        var msg = {
          messageType: 'addEventSubscription',
          data: {}
        };

        for (var name in _this4.eventDescriptions) {
          msg.data[name] = {};
        }

        _this4.ws.send(JSON.stringify(msg));
      }, {
        once: true
      });

      var onEvent = function onEvent(event) {
        var message = JSON.parse(event.data);

        switch (message.messageType) {
          case 'propertyStatus':
            _this4.onPropertyStatus(message.data);

            break;

          case 'event':
            _this4.onEvent(message.data);

            break;

          case 'connected':
            _this4.onConnected(message.data);

            break;

          case 'error':
            // status 404 means that the Thing already removed.
            if (message.data.status === '404 Not Found') {
              console.log('Successfully removed Thing.');

              _this4.handleEvent(Constants.DELETE_THING, _this4.id);

              _this4.cleanup();
            }

            break;
        }
      };

      var cleanup = function cleanup() {
        _this4.ws.removeEventListener('message', onEvent);

        _this4.ws.removeEventListener('close', cleanup);

        _this4.ws.removeEventListener('error', cleanup);

        _this4.ws.close();

        _this4.ws = null;
        setTimeout(function () {
          _this4.wsBackoff *= 2;

          if (_this4.wsBackoff > 30000) {
            _this4.wsBackoff = 30000;
          }

          _this4.initWebsocket();
        }, _this4.wsBackoff);
      };

      this.ws.addEventListener('message', onEvent);
      this.ws.addEventListener('close', cleanup);
      this.ws.addEventListener('error', cleanup);
    }
    /**
     * Cleanup objects.
     */

  }, {
    key: "cleanup",
    value: function cleanup() {
      this.closingWs = true;

      if (this.ws !== null) {
        if (this.ws.readyState === WebSocket.OPEN || this.ws.readyState === WebSocket.CONNECTING) {
          this.ws.close();
        }
      }

      _get(_getPrototypeOf(ThingModel.prototype), "cleanup", this).call(this);
    }
  }, {
    key: "subscribe",
    value: function subscribe(event, handler) {
      _get(_getPrototypeOf(ThingModel.prototype), "subscribe", this).call(this, event, handler);

      switch (event) {
        case Constants.EVENT_OCCURRED:
          break;

        case Constants.PROPERTY_STATUS:
          handler(this.properties);
          break;

        case Constants.DELETE_THING:
          break;

        case Constants.CONNECTED:
          handler(this.connected);
          break;

        default:
          console.warn(`ThingModel does not support event:${event}`);
          break;
      }
    }
    /**
     * Set value of the property.
     *
     * @param {string} name - name of the property
     * @param {*} value - value of the property
     * @return {Promise} which resolves to the property set.
     */

  }, {
    key: "setProperty",
    value: function setProperty(name, value) {
      var _this5 = this;

      if (!this.propertyDescriptions.hasOwnProperty(name)) {
        return Promise.reject(`Unavailable property name ${name}`);
      }

      switch (this.propertyDescriptions[name].type) {
        case 'number':
          value = parseFloat(value);
          break;

        case 'integer':
          value = parseInt(value);
          break;

        case 'boolean':
          value = Boolean(value);
          break;
      }

      var property = this.propertyDescriptions[name];

      var payload = _defineProperty({}, name, value);

      var opts = {
        method: 'PUT',
        body: JSON.stringify(payload),
        headers: Object.assign(API.headers(), {
          'Content-Type': 'application/json'
        })
      };
      return fetch(property.href, opts).then(function (response) {
        if (response.ok) {
          return response.json();
        } else {
          throw new Error(`Status ${response.status} trying to set ${name}`);
        }
      }).then(function (json) {
        _this5.onPropertyStatus(json);
      }).catch(function (error) {
        console.error(error);
        throw new Error(`Error trying to set ${name}`);
      });
    }
    /**
     * Update the Properties of Thing.
     */

  }, {
    key: "updateProperties",
    value: function updateProperties() {
      var _this6 = this;

      var opts = {
        headers: {
          Authorization: `Bearer ${API.jwt}`,
          Accept: 'application/json'
        }
      };
      var getPropertiesPromise;

      if (typeof this.propertiesHref === 'undefined') {
        var urls = Object.values(this.propertyDescriptions).map(function (v) {
          return v.href;
        });
        var requests = urls.map(function (u) {
          return fetch(u, opts);
        });
        getPropertiesPromise = Promise.all(requests).then(function (responses) {
          return Promise.all(responses.map(function (response) {
            return response.json();
          }));
        }).then(function (responses) {
          var properties = {};
          responses.forEach(function (response) {
            properties = Object.assign(properties, response);
          });
          return properties;
        });
      } else {
        getPropertiesPromise = fetch(this.propertiesHref, opts).then(function (response) {
          return response.json();
        });
      }

      getPropertiesPromise.then(function (properties) {
        _this6.onPropertyStatus(properties);
      }).catch(function (error) {
        console.error(`Error fetching ${_this6.name} status: ${error}`);
      });
    }
    /**
     * Handle a 'propertyStatus' message.
     * @param {Object} data Property data
     */

  }, {
    key: "onPropertyStatus",
    value: function onPropertyStatus(data) {
      for (var prop in data) {
        if (!this.propertyDescriptions.hasOwnProperty(prop)) {
          continue;
        }

        var value = data[prop];

        if (typeof value === 'undefined' || value === null) {
          continue;
        }

        this.properties[prop] = value;
      }

      return this.handleEvent(Constants.PROPERTY_STATUS, this.properties);
    }
    /**
     * Get the list of existing events.
     */

  }, {
    key: "updateEvents",
    value: function updateEvents() {
      var _this7 = this;

      if (typeof this.eventsHref === 'undefined') {
        return;
      }

      var opts = {
        headers: {
          Authorization: `Bearer ${API.jwt}`,
          Accept: 'application/json'
        }
      };
      return fetch(this.eventsHref, opts).then(function (response) {
        return response.json();
      }).then(function (events) {
        _this7.events = events;
      }).catch(function (e) {
        console.error(`Error fetching events: ${e}`);
      });
    }
    /**
     * Handle an 'event' message.
     * @param {Object} events Event data
     */

  }, {
    key: "onEvent",
    value: function onEvent(data) {
      var events = {};

      for (var event in data) {
        if (!this.eventDescriptions.hasOwnProperty(event)) {
          continue;
        }

        events[event] = data[event];
        this.events.push(_defineProperty({}, event, data[event]));
      }

      return this.handleEvent(Constants.EVENT_OCCURRED, events);
    }
    /**
     * Handle a 'connected' message.
     *
     * @param {boolean} connected - Connected state
     */

  }, {
    key: "onConnected",
    value: function onConnected(connected) {
      this.connected = connected;
      return this.handleEvent(Constants.CONNECTED, connected);
    }
  }]);

  return ThingModel;
}(Model);

module.exports = ThingModel;

/***/ }),

/***/ "./static/js/motion-sensor.js":
/*!************************************!*\
  !*** ./static/js/motion-sensor.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Motion Sensor.
 *
 * UI element representing a Motion Sensor.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */


__webpack_require__(/*! core-js/modules/es6.reflect.get */ "./node_modules/core-js/modules/es6.reflect.get.js");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (typeof call === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var Thing = __webpack_require__(/*! ./thing */ "./static/js/thing.js");

var MotionSensor =
/*#__PURE__*/
function (_Thing) {
  _inherits(MotionSensor, _Thing);

  /**
   * MotionSensor Constructor (extends Thing).
   *
   * @param {Object} description Thing description object.
   * @param {Number} format See Constants.ThingFormat
   */
  function MotionSensor(model, description, format) {
    _classCallCheck(this, MotionSensor);

    return _possibleConstructorReturn(this, _getPrototypeOf(MotionSensor).call(this, model, description, format, {
      baseIcon: '/optimized-images/thing-icons/motion_sensor.svg'
    }));
  }
  /**
   * Find any properties required for this view.
   */


  _createClass(MotionSensor, [{
    key: "findProperties",
    value: function findProperties() {
      this.motionProperty = null; // Look for properties by type first.

      for (var name in this.displayedProperties) {
        var type = this.displayedProperties[name].property['@type'];

        if (type === 'MotionProperty') {
          this.motionProperty = name;
          break;
        }
      }
    }
  }, {
    key: "updateProperty",

    /**
     * Update the display for the provided property.
     * @param {string} name - name of the property
     * @param {*} value - value of the property
     */
    value: function updateProperty(name, value) {
      _get(_getPrototypeOf(MotionSensor.prototype), "updateProperty", this).call(this, name, value);

      if (!this.displayedProperties.hasOwnProperty(name)) {
        return;
      }

      if (name === this.motionProperty) {
        this.icon.motion = !!value;
      }
    }
  }, {
    key: "iconView",
    value: function iconView() {
      return `
      <webthing-motion-sensor-capability>
      </webthing-motion-sensor-capability>`;
    }
  }, {
    key: "icon",
    get: function get() {
      return this.element.querySelector('webthing-motion-sensor-capability');
    }
  }]);

  return MotionSensor;
}(Thing);

module.exports = MotionSensor;

/***/ }),

/***/ "./static/js/multi-level-sensor.js":
/*!*****************************************!*\
  !*** ./static/js/multi-level-sensor.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Multi level sensor.
 *
 * UI element representing a sensor with multiple levels.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */


__webpack_require__(/*! core-js/modules/es6.reflect.get */ "./node_modules/core-js/modules/es6.reflect.get.js");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (typeof call === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var Thing = __webpack_require__(/*! ./thing */ "./static/js/thing.js");

var Utils = __webpack_require__(/*! ./utils */ "./static/js/utils.js");

var MultiLevelSensor =
/*#__PURE__*/
function (_Thing) {
  _inherits(MultiLevelSensor, _Thing);

  /**
   * MultiLevelSensor Constructor (extends Thing).
   *
   * @param {Object} description Thing description object.
   * @param {Number} format See Constants.ThingFormat
   */
  function MultiLevelSensor(model, description, format) {
    _classCallCheck(this, MultiLevelSensor);

    return _possibleConstructorReturn(this, _getPrototypeOf(MultiLevelSensor).call(this, model, description, format, {
      baseIcon: '/optimized-images/thing-icons/multi_level_sensor.svg'
    }));
  }
  /**
   * Find any properties required for this view.
   */


  _createClass(MultiLevelSensor, [{
    key: "findProperties",
    value: function findProperties() {
      this.levelProperty = null; // Look for properties by type first.

      for (var name in this.displayedProperties) {
        var type = this.displayedProperties[name].property['@type'];

        if (type === 'LevelProperty') {
          this.levelProperty = name;
          break;
        }
      } // If necessary, match on name.


      if (this.levelProperty === null && this.displayedProperties.hasOwnProperty('level')) {
        this.levelProperty = 'level';
      }
    }
  }, {
    key: "updateProperty",

    /**
     * Update the display for the provided property.
     * @param {string} name - name of the property
     * @param {*} value - value of the property
     */
    value: function updateProperty(name, value) {
      _get(_getPrototypeOf(MultiLevelSensor.prototype), "updateProperty", this).call(this, name, value);

      if (!this.displayedProperties.hasOwnProperty(name)) {
        return;
      }

      if (name === this.levelProperty) {
        value = parseFloat(value);
        this.icon.level = value;
      }
    }
  }, {
    key: "iconView",
    value: function iconView() {
      var unit = '';

      for (var name in this.displayedProperties) {
        var property = this.displayedProperties[name].property;

        if (name === 'level' || property['@type'] === 'LevelProperty') {
          unit = property.unit || '';
          break;
        }
      }

      unit = Utils.escapeHtml(Utils.unitNameToAbbreviation(unit));
      return `
      <webthing-multi-level-sensor-capability data-unit="${unit}">
      </webthing-multi-level-sensor-capability>`;
    }
  }, {
    key: "icon",
    get: function get() {
      return this.element.querySelector('webthing-multi-level-sensor-capability');
    }
  }]);

  return MultiLevelSensor;
}(Thing);

module.exports = MultiLevelSensor;

/***/ }),

/***/ "./static/js/multi-level-switch.js":
/*!*****************************************!*\
  !*** ./static/js/multi-level-switch.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Multi level switch
 *
 * UI element representing a switch with multiple levels
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */


__webpack_require__(/*! core-js/modules/es6.reflect.get */ "./node_modules/core-js/modules/es6.reflect.get.js");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (typeof call === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var OnOffSwitch = __webpack_require__(/*! ./on-off-switch */ "./static/js/on-off-switch.js");

var MultiLevelSwitch =
/*#__PURE__*/
function (_OnOffSwitch) {
  _inherits(MultiLevelSwitch, _OnOffSwitch);

  /**
   * MultiLevelSwitch Constructor (extends OnOffSwitch).
   *
   * @param {Object} description Thing description object.
   * @param {Number} format See Constants.ThingFormat
   */
  function MultiLevelSwitch(model, description, format) {
    _classCallCheck(this, MultiLevelSwitch);

    return _possibleConstructorReturn(this, _getPrototypeOf(MultiLevelSwitch).call(this, model, description, format, {
      baseIcon: '/optimized-images/thing-icons/multi_level_switch.svg'
    }));
  }
  /**
   * Find any properties required for this view.
   */


  _createClass(MultiLevelSwitch, [{
    key: "findProperties",
    value: function findProperties() {
      _get(_getPrototypeOf(MultiLevelSwitch.prototype), "findProperties", this).call(this);

      this.levelProperty = null; // Look for properties by type first.

      for (var name in this.displayedProperties) {
        var type = this.displayedProperties[name].property['@type'];

        if (type === 'LevelProperty') {
          this.levelProperty = name;
          break;
        }
      } // If necessary, match on name.


      if (this.levelProperty === null && this.displayedProperties.hasOwnProperty('level')) {
        this.levelProperty = 'level';
      }
    }
  }, {
    key: "updateProperty",

    /**
     * Update the display for the provided property.
     * @param {string} name - name of the property
     * @param {*} value - value of the property
     */
    value: function updateProperty(name, value) {
      _get(_getPrototypeOf(MultiLevelSwitch.prototype), "updateProperty", this).call(this, name, value);

      if (!this.displayedProperties.hasOwnProperty(name)) {
        return;
      }

      if (name === this.levelProperty) {
        value = parseInt(value, 10);
        this.icon.level = value;
      }
    }
  }, {
    key: "handleClick",
    value: function handleClick() {
      // Only click to toggle if we have an on/off property
      if (this.onProperty) {
        _get(_getPrototypeOf(MultiLevelSwitch.prototype), "handleClick", this).call(this);
      }
    }
  }, {
    key: "iconView",
    value: function iconView() {
      return `
      <webthing-multi-level-switch-capability>
      </webthing-multi-level-switch-capability>`;
    }
  }, {
    key: "icon",
    get: function get() {
      return this.element.querySelector('webthing-multi-level-switch-capability');
    }
  }]);

  return MultiLevelSwitch;
}(OnOffSwitch);

module.exports = MultiLevelSwitch;

/***/ }),

/***/ "./static/js/new-thing.js":
/*!********************************!*\
  !*** ./static/js/new-thing.js ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * New Thing.
 *
 * Represents a new thing ready to be saved.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */


__webpack_require__(/*! core-js/modules/es7.array.includes */ "./node_modules/core-js/modules/es7.array.includes.js");

__webpack_require__(/*! core-js/modules/es7.symbol.async-iterator */ "./node_modules/core-js/modules/es7.symbol.async-iterator.js");

__webpack_require__(/*! core-js/modules/es6.symbol */ "./node_modules/core-js/modules/es6.symbol.js");

__webpack_require__(/*! core-js/modules/web.dom.iterable */ "./node_modules/core-js/modules/web.dom.iterable.js");

__webpack_require__(/*! core-js/modules/es6.regexp.constructor */ "./node_modules/core-js/modules/es6.regexp.constructor.js");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var API = __webpack_require__(/*! ./api */ "./static/js/api.js");

var Utils = __webpack_require__(/*! ./utils */ "./static/js/utils.js");

var NewThing =
/*#__PURE__*/
function () {
  /**
   * New Thing constructor.
   *
   * @param {String} id Thing ID.
   * @param {Object} description Thing description object.
   */
  function NewThing(id, description) {
    _classCallCheck(this, NewThing);

    this.id = id;
    this.description = description;
    this.pinSet = false;
    this.iconData = null;
    this.re = null;

    if (description.hasOwnProperty('pin') && description.pin.pattern !== null) {
      this.re = RegExp(description.pin.pattern);
    }

    this.container = document.getElementById('new-things');
    this.element = document.createElement('div');
    this.element.classList.add('new-thing');
    this.element.id = `new-thing-${Utils.escapeHtmlForIdClass(this.id)}`;
    this.render();
    this.container.appendChild(this.element);
  }

  _createClass(NewThing, [{
    key: "requiresPin",
    value: function requiresPin() {
      return this.description.hasOwnProperty('pin') && this.description.pin.required && !this.pinSet;
    }
  }, {
    key: "buildStandardView",
    value: function buildStandardView() {
      this.element.classList.remove('pin-required');
      var capabilities = [];

      if (Array.isArray(this.description['@type']) && this.description['@type'].length > 0) {
        capabilities = this.description['@type'];
      } else if (this.description.type) {
        capabilities = Utils.legacyTypeToCapabilities(this.description.type);
      }

      capabilities = Utils.sortCapabilities(capabilities);
      capabilities.push('Custom');
      var cls = '',
          type = '',
          customIconClass = 'hidden';
      var options = [];
      var _iteratorNormalCompletion = true;
      var _didIteratorError = false;
      var _iteratorError = undefined;

      try {
        for (var _iterator = capabilities[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var capability = _step.value;

          switch (capability) {
            case 'OnOffSwitch':
              type = 'On/Off Switch';
              cls = cls || 'on-off-switch';
              break;

            case 'MultiLevelSwitch':
              type = 'Multi Level Switch';
              cls = cls || 'multi-level-switch';
              break;

            case 'ColorControl':
              type = 'Color Control';
              cls = cls || 'color-control';
              break;

            case 'EnergyMonitor':
              type = 'Energy Monitor';
              cls = cls || 'energy-monitor';
              break;

            case 'BinarySensor':
              type = 'Binary Sensor';
              cls = cls || 'binary-sensor';
              break;

            case 'MultiLevelSensor':
              type = 'Multi Level Sensor';
              cls = cls || 'multi-level-sensor';
              break;

            case 'SmartPlug':
              type = 'Smart Plug';
              cls = cls || 'smart-plug';
              break;

            case 'Light':
              type = 'Light';
              cls = cls || 'light';
              break;

            case 'DoorSensor':
              type = 'Door Sensor';
              cls = cls || 'door-sensor';
              break;

            case 'MotionSensor':
              type = 'Motion Sensor';
              cls = cls || 'motion-sensor';
              break;

            case 'PushButton':
              type = 'Push Button';
              cls = cls || 'push-button';
              break;

            case 'Custom':
              type = 'Custom Thing';
              cls = cls || (capabilities.length > 1 ? '' : ' ');
              break;

            default:
              type = capability;
              cls = cls || (capabilities.length > 1 ? '' : ' ');
              break;
          }

          capability = Utils.escapeHtml(capability);
          type = Utils.escapeHtml(type);
          var selected = '';

          if (options.length === 0) {
            selected = 'selected';

            if (capability === 'Custom') {
              customIconClass = '';
            }
          }

          options.push(`<option value="${capability}" ${selected}>${type}</option>`);
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return != null) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }

      cls = cls.trim();

      if (cls) {
        this.element.classList.add(cls);
      }

      if (!type) {
        type = 'Unknown device type';
      }

      var id = Utils.escapeHtmlForIdClass(`new-thing-custom-icon-${this.id}`);
      this.element.innerHTML = `
      <div class="new-thing-icon">
        <webthing-custom-icon class="new-thing-custom-icon ${customIconClass}">
        </webthing-custom-icon>
      </div>
      <div class="new-thing-metadata">
        <input type="text" class="new-thing-name"
               value="${Utils.escapeHtml(this.description.name)}"/>
        <select class="new-thing-type">${options.join('')}</select>
        <span class="new-thing-spacer"></span>
        <input type="file" class="new-thing-custom-icon-input hidden"
          id="${id}" accept="image/jpeg,image/png,image/svg+xml">
        <label for="${id}"
          class="new-thing-custom-icon-label text-button ${customIconClass}">
          Choose icon...
        </label>
        <span class="new-thing-label"></span>
      </div>
      <button class="new-thing-save-button text-button">
        Save
      </button>`;
    }
  }, {
    key: "buildPinView",
    value: function buildPinView() {
      this.element.classList.add('pin-required');
      this.element.innerHTML = `
      <div class="new-thing-icon"></div>
      <div class="new-thing-metadata">
        <span class="new-thing-initial-name">
          ${Utils.escapeHtml(this.description.name)}
        </span>
        <input type="text" class="new-thing-pin" required autofocus
               placeholder="Enter PIN"/>
        <span class="new-thing-pin-error hidden">Incorrect PIN</span>
      </div>
      <div class="new-thing-controls">
        <button class="new-thing-cancel-button text-button">
          Cancel
        </button>
        <button class="new-thing-submit-button text-button" disabled>
          Submit
        </button>
      </div>`;
    }
    /**
     * HTML view for New Thing.
     */

  }, {
    key: "buildView",
    value: function buildView() {
      if (this.requiresPin()) {
        this.buildPinView();
      } else {
        this.buildStandardView();
      }
    }
    /**
     * Render New Thing view and add to DOM.
     */

  }, {
    key: "render",
    value: function render() {
      this.buildView();

      if (this.requiresPin()) {
        this.pinInput = this.element.getElementsByClassName('new-thing-pin')[0];
        this.pinError = this.element.getElementsByClassName('new-thing-pin-error')[0];
        this.cancelButton = this.element.getElementsByClassName('new-thing-cancel-button')[0];
        this.submitButton = this.element.getElementsByClassName('new-thing-submit-button')[0];
        this.pinInput.addEventListener('input', this.handlePinInput.bind(this));
        this.cancelButton.addEventListener('click', this.handleCancel.bind(this));
        this.submitButton.addEventListener('click', this.handleSubmit.bind(this));
      } else {
        this.nameInput = this.element.getElementsByClassName('new-thing-name')[0];
        this.saveButton = this.element.getElementsByClassName('new-thing-save-button')[0];
        this.thingType = this.element.getElementsByClassName('new-thing-type')[0];
        this.customIcon = this.element.getElementsByClassName('new-thing-custom-icon')[0];
        this.customIconInput = this.element.getElementsByClassName('new-thing-custom-icon-input')[0];
        this.customIconLabel = this.element.getElementsByClassName('new-thing-custom-icon-label')[0];
        this.label = this.element.getElementsByClassName('new-thing-label')[0];
        this.saveButton.addEventListener('click', this.handleSave.bind(this));
        this.thingType.addEventListener('change', this.handleTypeChange.bind(this));
        this.customIconInput.addEventListener('change', this.handleIconUpload.bind(this));
      }
    }
  }, {
    key: "handlePinInput",
    value: function handlePinInput() {
      var input = this.pinInput.value.trim();
      var valid = false;

      if (this.re !== null) {
        valid = this.re.test(input);
      } else {
        valid = input.length > 0;
      }

      this.submitButton.disabled = !valid;

      if (valid) {
        this.pinInput.setCustomValidity('');
      } else {
        this.pinInput.setCustomValidity('Invalid PIN');
      }
    }
  }, {
    key: "handleCancel",
    value: function handleCancel() {
      this.container.removeChild(this.element);
    }
  }, {
    key: "handleSubmit",
    value: function handleSubmit() {
      var _this = this;

      var input = this.pinInput.value.trim();
      this.submitButton.disabled = true;
      fetch('/things', {
        method: 'PATCH',
        body: JSON.stringify({
          thingId: this.id,
          pin: input
        }),
        headers: {
          Authorization: `Bearer ${API.jwt}`,
          Accept: 'application/json',
          'Content-Type': 'application/json'
        }
      }).then(function (response) {
        if (!response.ok) {
          return response.text();
        }

        return response.json();
      }).then(function (json) {
        if (typeof json === 'string') {
          throw new Error(json);
        }

        _this.pinError.classList.add('hidden');

        _this.description = json;
        _this.pinSet = true;

        _this.render();
      }).catch(function (error) {
        console.error(`Failed to set PIN: ${error}`);
        _this.submitButton.disabled = false;

        _this.pinError.classList.remove('hidden');
      });
    }
  }, {
    key: "handleTypeChange",
    value: function handleTypeChange() {
      var capability = this.thingType.options[this.thingType.selectedIndex].value;
      this.customIconLabel.classList.add('hidden');
      this.customIcon.classList.add('hidden');
      var cls = '';

      switch (capability) {
        case 'OnOffSwitch':
          cls = 'on-off-switch';
          break;

        case 'MultiLevelSwitch':
          cls = 'multi-level-switch';
          break;

        case 'ColorControl':
          cls = 'color-control';
          break;

        case 'EnergyMonitor':
          cls = 'energy-monitor';
          break;

        case 'BinarySensor':
          cls = 'binary-sensor';
          break;

        case 'MultiLevelSensor':
          cls = 'multi-level-sensor';
          break;

        case 'SmartPlug':
          cls = 'smart-plug';
          break;

        case 'Light':
          cls = 'light';
          break;

        case 'DoorSensor':
          cls = 'door-sensor';
          break;

        case 'MotionSensor':
          cls = 'motion-sensor';
          break;

        case 'PushButton':
          cls = 'push-button';
          break;

        case 'Custom':
          this.customIconLabel.classList.remove('hidden');
          this.customIcon.classList.remove('hidden');
          break;

        default:
          break;
      }

      this.element.classList.remove('on-off-switch', 'multi-level-switch', 'color-control', 'energy-monitor', 'binary-sensor', 'multi-level-sensor', 'smart-plug', 'light', 'door-sensor', 'motion-sensor', 'push-button');

      if (cls) {
        this.element.classList.add(cls);
      }
    }
  }, {
    key: "handleIconUpload",
    value: function handleIconUpload() {
      var _this2 = this;

      this.label.classList.add('hidden');

      if (this.customIconInput.files.length === 0) {
        return;
      }

      var file = this.customIconInput.files[0];

      if (!['image/jpeg', 'image/png', 'image/svg+xml'].includes(file.type)) {
        this.label.innerText = 'Invalid file.';
        this.label.classList.add('error');
        this.label.classList.remove('hidden');
        return;
      }

      var reader = new FileReader();

      reader.onloadend = function (e) {
        if (e.target.error) {
          console.error(e.target.error);
          _this2.label.innerText = 'Failed to read file.';

          _this2.label.classList.add('error');

          _this2.label.classList.remove('hidden');

          _this2.saveButton.disabled = false;
          return;
        }

        _this2.iconData = {
          mime: file.type,
          data: btoa(e.target.result)
        };
        _this2.saveButton.disabled = false;
        _this2.customIcon.iconHref = URL.createObjectURL(file);

        _this2.customIcon.classList.remove('hidden');
      };

      this.saveButton.disabled = true;
      reader.readAsBinaryString(file);
    }
  }, {
    key: "handleSave",
    value: function handleSave() {
      var _this3 = this;

      this.thingType.disabled = true;
      this.nameInput.disabled = true;
      this.saveButton.disabled = true;
      this.customIconInput.disabled = true;
      var thing = this.description;
      thing.id = this.id;
      thing.name = this.nameInput.value;

      if (this.thingType.options.length > 0) {
        thing.selectedCapability = this.thingType.options[this.thingType.selectedIndex].value;
      }

      if (thing.selectedCapability === 'Custom' && this.iconData) {
        thing.iconData = this.iconData;
      }

      fetch('/things', {
        method: 'POST',
        body: JSON.stringify(thing),
        headers: {
          Authorization: `Bearer ${API.jwt}`,
          Accept: 'application/json',
          'Content-Type': 'application/json'
        }
      }).then(function (response) {
        return response.json();
      }).then(function () {
        _this3.saveButton.innerHTML = 'Saved';
        var cancelButton = document.getElementById('add-thing-cancel-button');

        if (cancelButton) {
          cancelButton.textContent = 'Done';
        }
      }).catch(function (error) {
        console.error(`Failed to save thing ${error}`);
        _this3.label.innerText = 'Failed to save.';

        _this3.label.classList.add('error');

        _this3.label.classList.remove('hidden');

        _this3.thingType.disabled = false;
        _this3.nameInput.disabled = false;
        _this3.saveButton.disabled = false;
        _this3.customIconInput.disabled = false;
      });
    }
  }]);

  return NewThing;
}();

module.exports = NewThing;

/***/ }),

/***/ "./static/js/new-web-thing.js":
/*!************************************!*\
  !*** ./static/js/new-web-thing.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * New Web Thing.
 *
 * Represents a new web thing that can potentially be saved.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */


__webpack_require__(/*! core-js/modules/es7.symbol.async-iterator */ "./node_modules/core-js/modules/es7.symbol.async-iterator.js");

__webpack_require__(/*! core-js/modules/es6.symbol */ "./node_modules/core-js/modules/es6.symbol.js");

__webpack_require__(/*! core-js/modules/web.dom.iterable */ "./node_modules/core-js/modules/web.dom.iterable.js");

__webpack_require__(/*! core-js/modules/es6.regexp.replace */ "./node_modules/core-js/modules/es6.regexp.replace.js");

__webpack_require__(/*! core-js/modules/es7.array.includes */ "./node_modules/core-js/modules/es7.array.includes.js");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var API = __webpack_require__(/*! ./api */ "./static/js/api.js");

var Utils = __webpack_require__(/*! ./utils */ "./static/js/utils.js");

var idCounter = -1;

var getNewWebThingId = function getNewWebThingId() {
  idCounter += 1;
  return idCounter;
};

var NewWebThing =
/*#__PURE__*/
function () {
  /**
   * New Web Thing constructor.
   */
  function NewWebThing() {
    _classCallCheck(this, NewWebThing);

    this.id = `web-thing-${getNewWebThingId()}`;
    this.originalId = this.id;
    this.url = null;
    this.iconData = null;
    this.description = null;
    this.container = document.getElementById('new-things');
    this.render();
    this.element = document.getElementById(`new-web-thing-${Utils.escapeHtmlForIdClass(this.originalId)}`);
    this.thingType = this.element.getElementsByClassName('new-thing-type')[0];
    this.customIcon = this.element.getElementsByClassName('new-thing-custom-icon')[0];
    this.customIconInput = this.element.getElementsByClassName('new-thing-custom-icon-input')[0];
    this.customIconLabel = this.element.getElementsByClassName('new-thing-custom-icon-label')[0];
    this.label = this.element.getElementsByClassName('new-web-thing-label')[0];
    this.originLabel = this.element.getElementsByClassName('new-web-thing-origin')[0];
    this.urlInput = this.element.getElementsByClassName('new-web-thing-url')[0];
    this.nameInput = this.element.getElementsByClassName('new-web-thing-name')[0];
    this.cancelButton = this.element.getElementsByClassName('new-web-thing-cancel-button')[0];
    this.submitButton = this.element.getElementsByClassName('new-web-thing-submit-button')[0];
    this.saveButton = this.element.getElementsByClassName('new-web-thing-save-button')[0];
    this.element.addEventListener('click', this.handleClick.bind(this));
    this.thingType.addEventListener('change', this.handleTypeChange.bind(this));
    this.customIconInput.addEventListener('change', this.handleIconUpload.bind(this));
  }
  /**
   * HTML view for New Web Thing.
   */


  _createClass(NewWebThing, [{
    key: "view",
    value: function view() {
      var id = Utils.escapeHtmlForIdClass(`new-thing-custom-icon-${this.id}`);
      return `
      <div id="new-web-thing-${Utils.escapeHtmlForIdClass(this.originalId)}"
           class="new-thing web-thing">
        <div class="new-thing-icon">
          <webthing-custom-icon class="new-thing-custom-icon hidden">
          </webthing-custom-icon>
        </div>
        <div class="new-thing-metadata">
          <input type="text" class="new-web-thing-url"
            placeholder="Enter web thing URL"></input>
          <input type="text" class="new-web-thing-name hidden"></input>
          <span class="new-web-thing-origin hidden"></span>
          <select class="new-thing-type hidden"></select>
          <span class="new-thing-spacer"></span>
          <input type="file" class="new-thing-custom-icon-input hidden"
            id="${id}" accept="image/jpeg,image/png,image/svg+xml">
          <label for="${id}"
            class="new-thing-custom-icon-label text-button hidden">
            Choose icon...
          </label>
          <span class="new-web-thing-label">Web Thing</span>
          <div class="new-web-thing-controls">
            <button class="new-web-thing-cancel-button text-button">
              Cancel
            </button>
            <button class="new-web-thing-submit-button text-button">
              Submit
            </button>
            <button class="new-web-thing-save-button text-button hidden">
              Save
            </button>
          </div>
        </div>
      </div>`;
    }
    /**
     * Render New Web Thing view and add to DOM.
     */

  }, {
    key: "render",
    value: function render() {
      this.container.insertAdjacentHTML('beforeend', this.view());
    }
  }, {
    key: "handleTypeChange",
    value: function handleTypeChange() {
      var capability = this.thingType.options[this.thingType.selectedIndex].value;
      this.customIconLabel.classList.add('hidden');
      this.customIcon.classList.add('hidden');
      var cls = '';

      switch (capability) {
        case 'OnOffSwitch':
          cls = 'on-off-switch';
          break;

        case 'MultiLevelSwitch':
          cls = 'multi-level-switch';
          break;

        case 'ColorControl':
          cls = 'color-control';
          break;

        case 'EnergyMonitor':
          cls = 'energy-monitor';
          break;

        case 'BinarySensor':
          cls = 'binary-sensor';
          break;

        case 'MultiLevelSensor':
          cls = 'multi-level-sensor';
          break;

        case 'SmartPlug':
          cls = 'smart-plug';
          break;

        case 'Light':
          cls = 'light';
          break;

        case 'DoorSensor':
          cls = 'door-sensor';
          break;

        case 'MotionSensor':
          cls = 'motion-sensor';
          break;

        case 'PushButton':
          cls = 'push-button';
          break;

        case 'Custom':
          this.customIconLabel.classList.remove('hidden');
          this.customIcon.classList.remove('hidden');
          break;

        default:
          break;
      }

      this.element.classList.remove('on-off-switch', 'multi-level-switch', 'color-control', 'energy-monitor', 'binary-sensor', 'multi-level-sensor', 'smart-plug', 'light', 'door-sensor', 'motion-sensor', 'push-button');

      if (cls) {
        this.element.classList.add(cls);
      }
    }
  }, {
    key: "handleIconUpload",
    value: function handleIconUpload() {
      var _this = this;

      this.label.classList.add('hidden');

      if (this.customIconInput.files.length === 0) {
        return;
      }

      var file = this.customIconInput.files[0];

      if (!['image/jpeg', 'image/png', 'image/svg+xml'].includes(file.type)) {
        this.label.innerText = 'Invalid file.';
        this.label.classList.add('error');
        this.label.clsssList.remove('hidden');
        return;
      }

      var reader = new FileReader();

      reader.onloadend = function (e) {
        if (e.target.error) {
          console.error(e.target.error);
          _this.label.innerText = 'Failed to read file.';

          _this.label.classList.add('error');

          _this.label.clsssList.remove('hidden');

          _this.saveButton.disabled = false;
          return;
        }

        _this.iconData = {
          mime: file.type,
          data: btoa(e.target.result)
        };
        _this.saveButton.disabled = false;
        _this.customIcon.iconHref = URL.createObjectURL(file);

        _this.customIcon.classList.remove('hidden');
      };

      this.saveButton.disabled = true;
      reader.readAsBinaryString(file);
    }
    /**
     * Handle click on a Thing.
     */

  }, {
    key: "handleClick",
    value: function handleClick(event) {
      if (event.target.classList.contains('new-web-thing-save-button')) {
        this.save();
      } else if (event.target.classList.contains('new-web-thing-submit-button')) {
        this.submit();
      } else if (event.target.classList.contains('new-web-thing-cancel-button')) {
        this.cancel();
      }
    }
  }, {
    key: "cancel",
    value: function cancel() {
      this.container.removeChild(this.element);
    }
  }, {
    key: "submit",
    value: function submit() {
      var _this2 = this;

      this.label.innerText = 'Loading...';
      this.label.classList.remove('error'); // Clean up the provided URL

      var url = this.urlInput.value.replace(/\/$/, '');

      if (!url.startsWith('http://') && !url.startsWith('https://')) {
        url = `http://${url}`;
      }

      this.urlInput.value = url;
      this.url = url;
      var urlObj;

      try {
        urlObj = new URL(url);
      } catch (err) {
        return;
      }

      fetch('/new_things', {
        method: 'POST',
        body: JSON.stringify({
          url: url
        }),
        headers: {
          Authorization: `Bearer ${API.jwt}`,
          Accept: 'application/json',
          'Content-Type': 'application/json'
        }
      }).then(function (response) {
        if (!response.ok) {
          return response.text();
        }

        return response.json();
      }).then(function (description) {
        if (typeof description === 'string') {
          throw new Error(description);
        } // We don't support other gateways from this interface


        if (Array.isArray(description)) {
          _this2.label.innerText = 'Multiple web things found';

          _this2.label.classList.add('error');

          return;
        }

        var capabilities = [];

        if (Array.isArray(description['@type']) && description['@type'].length > 0) {
          capabilities = description['@type'];
        } else if (description.type) {
          capabilities = Utils.legacyTypeToCapabilities(description.type);
        }

        capabilities = Utils.sortCapabilities(capabilities);
        capabilities.push('Custom');

        _this2.customIconLabel.classList.add('hidden');

        var cls = '';
        var _iteratorNormalCompletion = true;
        var _didIteratorError = false;
        var _iteratorError = undefined;

        try {
          for (var _iterator = capabilities[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var capability = _step.value;
            var option = document.createElement('option');
            option.value = capability;

            switch (capability) {
              case 'OnOffSwitch':
                option.innerText = 'On/Off Switch';
                cls = cls || 'on-off-switch';
                break;

              case 'MultiLevelSwitch':
                option.innerText = 'Multi Level Switch';
                cls = cls || 'multi-level-switch';
                break;

              case 'ColorControl':
                option.innerText = 'Color Control';
                cls = cls || 'color-control';
                break;

              case 'EnergyMonitor':
                option.innerText = 'Energy Monitor';
                cls = cls || 'energy-monitor';
                break;

              case 'BinarySensor':
                option.innerText = 'Binary Sensor';
                cls = cls || 'binary-sensor';
                break;

              case 'MultiLevelSensor':
                option.innerText = 'Multi Level Sensor';
                cls = cls || 'multi-level-sensor';
                break;

              case 'SmartPlug':
                option.innerText = 'Smart Plug';
                cls = cls || 'smart-plug';
                break;

              case 'Light':
                option.innerText = 'Light';
                cls = cls || 'light';
                break;

              case 'DoorSensor':
                option.innerText = 'Door Sensor';
                cls = cls || 'door-sensor';
                break;

              case 'MotionSensor':
                option.innerText = 'Motion Sensor';
                cls = cls || 'motion-sensor';
                break;

              case 'PushButton':
                option.innerText = 'Push Button';
                cls = cls || 'push-button';
                break;

              case 'Custom':
                option.innerText = 'Custom Thing';
                cls = cls || (capabilities.length > 1 ? '' : ' ');
                break;

              default:
                option.innerText = capability;
                cls = cls || (capabilities.length > 1 ? '' : ' ');
                break;
            }

            if (_this2.thingType.options.length === 0) {
              option.selected = true;

              if (capability === 'Custom') {
                _this2.customIconLabel.classList.remove('hidden');
              }
            }

            _this2.thingType.appendChild(option);
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion && _iterator.return != null) {
              _iterator.return();
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }

        _this2.description = description; // If an href was included, use that for the URL instead.

        if (_this2.description.hasOwnProperty('href')) {
          _this2.url = urlObj.origin + description.href;
        } // Generate an ID. This must generate IDs identical to thing-url-adapter.


        _this2.id = _this2.url.replace(/[:/]/g, '-');

        _this2.element.classList.remove('web-thing');

        _this2.label.classList.remove('error');

        _this2.label.classList.add('hidden');

        _this2.thingType.classList.remove('hidden');

        _this2.nameInput.value = description.name;
        _this2.originLabel.innerText = `from ${urlObj.host}`;

        _this2.urlInput.classList.add('hidden');

        _this2.nameInput.classList.remove('hidden');

        _this2.submitButton.classList.add('hidden');

        _this2.saveButton.classList.remove('hidden');

        _this2.originLabel.classList.remove('hidden');

        cls = cls.trim();

        if (cls) {
          _this2.element.classList.add(cls);
        }
      }).catch(function (error) {
        _this2.label.innerText = error.message;

        _this2.label.classList.add('error');

        console.error('Failed to check web thing:', error.message);
      });
    }
  }, {
    key: "save",
    value: function save() {
      var _this3 = this;

      this.thingType.disabled = true;
      this.nameInput.disabled = true;
      this.saveButton.disabled = true;
      this.customIconInput.disabled = true;
      this.cancelButton.classList.add('hidden');
      var thing = this.description;
      thing.id = this.id;
      thing.name = this.nameInput.value;
      thing.webthingUrl = this.url;

      if (this.thingType.options.length > 0) {
        thing.selectedCapability = this.thingType.options[this.thingType.selectedIndex].value;
      }

      if (thing.selectedCapability === 'Custom' && this.iconData) {
        thing.iconData = this.iconData;
      }

      fetch('/things', {
        method: 'POST',
        body: JSON.stringify(thing),
        headers: {
          Authorization: `Bearer ${API.jwt}`,
          Accept: 'application/json',
          'Content-Type': 'application/json'
        }
      }).then(function (response) {
        if (!response.ok) {
          return response.text();
        }

        return response.json();
      }).then(function (description) {
        if (typeof description === 'string') {
          throw new Error(description);
        }

        _this3.saveButton.innerHTML = 'Saved';
        var cancelButton = document.getElementById('add-thing-cancel-button');

        if (cancelButton) {
          cancelButton.textContent = 'Done';
        }
      }).catch(function (error) {
        console.error('Failed to save web thing:', error.message);
        _this3.label.innerText = 'Failed to save.';

        _this3.label.classList.add('error');

        _this3.label.classList.remove('hidden');

        _this3.thingType.disabled = false;
        _this3.nameInput.disabled = false;
        _this3.saveButton.disabled = false;
        _this3.customIconInput.disabled = false;

        _this3.cancelButton.classList.remove('hidden');

        _this3.reset();
      });
    }
  }, {
    key: "reset",
    value: function reset() {
      this.description = null;
      this.url = null;
      this.id = this.originalId;
      this.urlInput.value = '';
      this.nameInput.value = '';
      this.originLabel.innerText = '';
      this.element.classList.remove('binary-sensor', 'multi-level-sensor', 'light', 'on-off-switch', 'multi-level-switch', 'color-control', 'energy-monitor', 'smart-plug', 'door-sensor', 'motion-sensor', 'push-button');
      this.element.classList.add('web-thing');
      this.urlInput.classList.remove('hidden');
      this.nameInput.classList.add('hidden');
      this.submitButton.classList.remove('hidden');
      this.saveButton.classList.add('hidden');
      this.originLabel.classList.add('hidden');
    }
  }]);

  return NewWebThing;
}();

module.exports = NewWebThing;

/***/ }),

/***/ "./static/js/notifications.js":
/*!************************************!*\
  !*** ./static/js/notifications.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Notifications
 *
 * Implements a basic form of the Push API. Based on the
 * serviceworker cookbook payload example.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */


__webpack_require__(/*! core-js/modules/es6.promise */ "./node_modules/core-js/modules/es6.promise.js");

__webpack_require__(/*! core-js/modules/es6.typed.uint8-array */ "./node_modules/core-js/modules/es6.typed.uint8-array.js");

__webpack_require__(/*! core-js/modules/es6.regexp.replace */ "./node_modules/core-js/modules/es6.regexp.replace.js");

__webpack_require__(/*! core-js/modules/es6.object.assign */ "./node_modules/core-js/modules/es6.object.assign.js");

__webpack_require__(/*! regenerator-runtime/runtime */ "./node_modules/regenerator-runtime/runtime.js");

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } } function _next(value) { step("next", value); } function _throw(err) { step("throw", err); } _next(); }); }; }

var API = __webpack_require__(/*! ./api */ "./static/js/api.js");

var Notifications = {
  onReady: function () {
    var _onReady = _asyncToGenerator(
    /*#__PURE__*/
    regeneratorRuntime.mark(function _callee(registration) {
      var subscription, res, vapid, convertedVapidKey;
      return regeneratorRuntime.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              _context.next = 2;
              return registration.pushManager.getSubscription();

            case 2:
              subscription = _context.sent;

              if (subscription) {
                _context.next = 17;
                break;
              }

              _context.next = 6;
              return fetch('/push/vapid-public-key', {
                headers: API.headers()
              });

            case 6:
              res = _context.sent;
              _context.next = 9;
              return res.json();

            case 9:
              vapid = _context.sent;

              if (!vapid.error) {
                _context.next = 13;
                break;
              }

              console.error('Error getting vapid key:', vapid.error);
              return _context.abrupt("return");

            case 13:
              convertedVapidKey = urlBase64ToUint8Array(vapid.publicKey);
              _context.next = 16;
              return registration.pushManager.subscribe({
                userVisibleOnly: true,
                applicationServerKey: convertedVapidKey
              });

            case 16:
              subscription = _context.sent;

            case 17:
              _context.next = 19;
              return fetch('/push/register', {
                method: 'post',
                headers: Object.assign({
                  'Content-Type': 'application/json'
                }, API.headers()),
                body: JSON.stringify({
                  subscription: subscription
                })
              });

            case 19:
            case "end":
              return _context.stop();
          }
        }
      }, _callee, this);
    }));

    return function onReady(_x) {
      return _onReady.apply(this, arguments);
    };
  }()
}; // From https://github.com/mozilla/serviceworker-cookbook/blob/master/tools.js
// This function is needed because Chrome doesn't accept a base64 encoded string
// as value for applicationServerKey in pushManager.subscribe yet
// https://bugs.chromium.org/p/chromium/issues/detail?id=802280

function urlBase64ToUint8Array(base64String) {
  var padding = '='.repeat((4 - base64String.length % 4) % 4);
  var base64 = (base64String + padding).replace(/-/g, '+').replace(/_/g, '/');
  var rawData = window.atob(base64);
  var outputArray = new Uint8Array(rawData.length);

  for (var i = 0; i < rawData.length; ++i) {
    outputArray[i] = rawData.charCodeAt(i);
  }

  return outputArray;
}

module.exports = Notifications;

/***/ }),

/***/ "./static/js/on-off-switch.js":
/*!************************************!*\
  !*** ./static/js/on-off-switch.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * On/Off Switch.
 *
 * UI element representing an On/Off Switch.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */


__webpack_require__(/*! core-js/modules/es6.reflect.get */ "./node_modules/core-js/modules/es6.reflect.get.js");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (typeof call === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

var Constants = __webpack_require__(/*! ./constants */ "./static/js/constants.js");

var Thing = __webpack_require__(/*! ./thing */ "./static/js/thing.js");

var OnOffSwitch =
/*#__PURE__*/
function (_Thing) {
  _inherits(OnOffSwitch, _Thing);

  /**
   * OnOffSwitch Constructor (extends Thing).
   *
   * @param {Object} description Thing description object.
   * @param {Number} format See Constants.ThingFormat
   * @param {Object} options Options for building the view.
   */
  function OnOffSwitch(model, description, format, options) {
    var _this;

    _classCallCheck(this, OnOffSwitch);

    options = options || {
      baseIcon: '/optimized-images/thing-icons/on_off_switch.svg'
    };
    _this = _possibleConstructorReturn(this, _getPrototypeOf(OnOffSwitch).call(this, model, description, format, options));

    if (_this.format !== Constants.ThingFormat.LINK_ICON) {
      _this.icon.addEventListener('click', _this.handleClick.bind(_assertThisInitialized(_assertThisInitialized(_this))));
    }

    return _this;
  }
  /**
   * Find any properties required for this view.
   */


  _createClass(OnOffSwitch, [{
    key: "findProperties",
    value: function findProperties() {
      this.onProperty = null; // Look for properties by type first.

      for (var name in this.displayedProperties) {
        var type = this.displayedProperties[name].property['@type'];

        if (type === 'OnOffProperty') {
          this.onProperty = name;
          break;
        }
      } // If necessary, match on name.


      if (this.onProperty === null && this.displayedProperties.hasOwnProperty('on')) {
        this.onProperty = 'on';
      }
    }
  }, {
    key: "updateProperty",

    /**
     * Update the display for the provided property.
     * @param {string} name - name of the property
     * @param {*} value - value of the property
     */
    value: function updateProperty(name, value) {
      _get(_getPrototypeOf(OnOffSwitch.prototype), "updateProperty", this).call(this, name, value);

      if (!this.displayedProperties.hasOwnProperty(name)) {
        return;
      }

      if (name === this.onProperty) {
        this.icon.on = !!value;
      }
    }
    /**
     * Handle a click on the on/off switch.
     */

  }, {
    key: "handleClick",
    value: function handleClick() {
      var newValue = !this.icon.on;
      this.icon.on = null;
      this.model.setProperty(this.onProperty, newValue).catch(function (error) {
        console.error(`Error trying to toggle switch: ${error}`);
      });
    }
  }, {
    key: "iconView",
    value: function iconView() {
      return `
      <webthing-on-off-switch-capability>
      </webthing-on-off-switch-capability>`;
    }
  }, {
    key: "icon",
    get: function get() {
      return this.element.querySelector('webthing-on-off-switch-capability');
    }
  }]);

  return OnOffSwitch;
}(Thing);

module.exports = OnOffSwitch;

/***/ }),

/***/ "./static/js/property-detail/action.js":
/*!*********************************************!*\
  !*** ./static/js/property-detail/action.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * ActionDetail
 *
 * A bubble showing a button for an action.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */


function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var API = __webpack_require__(/*! ../api */ "./static/js/api.js");

var Utils = __webpack_require__(/*! ../utils */ "./static/js/utils.js");

var page = __webpack_require__(/*! page */ "./node_modules/page/page.js");

var ActionDetail =
/*#__PURE__*/
function () {
  function ActionDetail(thing, name, action, href) {
    _classCallCheck(this, ActionDetail);

    this.thing = thing;
    this.name = name;
    this.label = action.label || name;
    this.input = action.input;
    this.href = href;
    this.id = `action-button-${Utils.escapeHtmlForIdClass(this.name)}`;
  }

  _createClass(ActionDetail, [{
    key: "attach",
    value: function attach() {
      this.button = this.thing.element.querySelector(`#${this.id}`);
      this.button.addEventListener('click', this.handleClick.bind(this));
    }
  }, {
    key: "view",
    value: function view() {
      var disabled = '';

      if (typeof this.input !== 'undefined') {
        var base = `${window.location.pathname}/actions/${this.name}`;
        var referrer = encodeURIComponent(window.location.pathname);
        this.inputPageRef = `${encodeURI(base)}?referrer=${referrer}`;

        if (typeof this.input === 'object' && (this.input.hasOwnProperty('required') && Array.isArray(this.input.required) && this.input.required.length > 0 || this.input.type !== 'object')) {
          disabled = 'disabled';
        }
      }

      return `
      <webthing-action ${disabled} id="${this.id}"
        data-name="${Utils.escapeHtml(this.label)}"
      </webthing-action>`;
    }
  }, {
    key: "handleClick",
    value: function handleClick() {
      var _this = this;

      var input = {};

      if (typeof this.input === 'undefined') {
        fetch(this.href, {
          method: 'POST',
          body: JSON.stringify(_defineProperty({}, this.name, {
            input: input
          })),
          headers: {
            Authorization: `Bearer ${API.jwt}`,
            Accept: 'application/json',
            'Content-Type': 'application/json'
          }
        }).catch(function (e) {
          console.error(`Error performing action "${_this.name}": ${e}`);
        });
      } else {
        page(this.inputPageRef);
      }
    }
  }]);

  return ActionDetail;
}();

module.exports = ActionDetail;

/***/ }),

/***/ "./static/js/property-detail/boolean.js":
/*!**********************************************!*\
  !*** ./static/js/property-detail/boolean.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * BooleanDetail
 *
 * A generic boolean property detail.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */


function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var Utils = __webpack_require__(/*! ../utils */ "./static/js/utils.js");

var BooleanDetail =
/*#__PURE__*/
function () {
  function BooleanDetail(thing, name, property) {
    _classCallCheck(this, BooleanDetail);

    this.thing = thing;
    this.name = name;
    this.readOnly = !!property.readOnly;
    this.label = property.label || name;
    this.id = `boolean-${Utils.escapeHtmlForIdClass(this.name)}`;
  }
  /**
   * Attach to the view.
   */


  _createClass(BooleanDetail, [{
    key: "attach",
    value: function attach() {
      this.input = this.thing.element.querySelector(`#${this.id}`);
      var setChecked = Utils.debounce(500, this.set.bind(this));
      this.input.addEventListener('change', setChecked);
    }
    /**
     * Build the detail view.
     */

  }, {
    key: "view",
    value: function view() {
      var readOnly = this.readOnly ? 'data-read-only="true"' : '';
      return `
      <webthing-boolean-property data-name="${Utils.escapeHtml(this.label)}"
        id="${this.id}" ${readOnly}>
      </webthing-boolean-property>`;
    }
    /**
     * Update the detail view with the new property value.
     */

  }, {
    key: "update",
    value: function update(bool) {
      if (!this.input || bool == this.input.checked) {
        return;
      }

      this.input.checked = bool;
    }
  }, {
    key: "set",
    value: function set() {
      this.thing.setProperty(this.name, this.input.checked);
    }
  }]);

  return BooleanDetail;
}();

module.exports = BooleanDetail;

/***/ }),

/***/ "./static/js/property-detail/brightness.js":
/*!*************************************************!*\
  !*** ./static/js/property-detail/brightness.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * BrightnessDetail
 *
 * A bubble showing the brightness of a thing
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */


function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var Utils = __webpack_require__(/*! ../utils */ "./static/js/utils.js");

var BrightnessDetail =
/*#__PURE__*/
function () {
  function BrightnessDetail(thing, name, property) {
    _classCallCheck(this, BrightnessDetail);

    this.thing = thing;
    this.name = name;
    this.readOnly = !!property.readOnly;
    this.label = property.label || 'Brightness';

    if (property.hasOwnProperty('min')) {
      this.min = property.min;
    } else if (property.hasOwnProperty('minimum')) {
      this.min = property.minimum;
    } else {
      this.min = 0;
    }

    if (property.hasOwnProperty('max')) {
      this.max = property.max;
    } else if (property.hasOwnProperty('maximum')) {
      this.max = property.maximum;
    } else {
      this.max = 100;
    }

    if (property.hasOwnProperty('multipleOf')) {
      this.step = property.multipleOf;
    } else if (property.type === 'number') {
      this.step = 'any';
    } else {
      this.step = 1;
    }

    this.id = `brightness-${Utils.escapeHtmlForIdClass(this.name)}`;
  }

  _createClass(BrightnessDetail, [{
    key: "attach",
    value: function attach() {
      this.brightness = this.thing.element.querySelector(`#${this.id}`);
      var setBrightness = Utils.debounce(500, this.set.bind(this));
      this.brightness.addEventListener('change', setBrightness);
    }
  }, {
    key: "view",
    value: function view() {
      var readOnly = this.readOnly ? 'data-read-only="true"' : '';
      return `
      <webthing-brightness-property data-name="${Utils.escapeHtml(this.label)}"
        value="0" min="${this.min}" max="${this.max}" step="${this.step}"
        id="${this.id}" ${readOnly}>
      </webthing-brightness-property>`;
    }
  }, {
    key: "update",
    value: function update(brightness) {
      if (!this.brightness) {
        return;
      }

      if (brightness == this.brightness.value) {
        return;
      }

      this.brightness.value = brightness;
    }
  }, {
    key: "set",
    value: function set() {
      this.thing.setProperty(this.name, this.brightness.value);
    }
  }]);

  return BrightnessDetail;
}();

module.exports = BrightnessDetail;

/***/ }),

/***/ "./static/js/property-detail/color-temperature.js":
/*!********************************************************!*\
  !*** ./static/js/property-detail/color-temperature.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * ColorTemperatureDetail
 *
 * A bubble showing the color temperature of a thing
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */


function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var Utils = __webpack_require__(/*! ../utils */ "./static/js/utils.js");

var ColorTemperatureDetail =
/*#__PURE__*/
function () {
  function ColorTemperatureDetail(thing, name, property) {
    _classCallCheck(this, ColorTemperatureDetail);

    this.thing = thing;
    this.name = name;
    this.readOnly = !!property.readOnly;
    this.label = property.label || 'Color Temperature';
    this.min = property.hasOwnProperty('min') ? property.min : property.minimum;
    this.max = property.hasOwnProperty('max') ? property.max : property.maximum;

    if (property.hasOwnProperty('multipleOf')) {
      this.step = property.multipleOf;
    } else if (property.type === 'number') {
      this.step = 'any';
    } else {
      this.step = 1;
    }

    this.id = `color-temperature-${Utils.escapeHtmlForIdClass(this.name)}`;
  }

  _createClass(ColorTemperatureDetail, [{
    key: "attach",
    value: function attach() {
      this.temperature = this.thing.element.querySelector(`#${this.id}`);
      this.temperature.addEventListener('change', this.set.bind(this));
    }
  }, {
    key: "view",
    value: function view() {
      var readOnly = this.readOnly ? 'data-read-only="true"' : '';
      return `
      <webthing-color-temperature-property min="${this.min}" max="${this.max}"
        data-name="${Utils.escapeHtml(this.label)}" step="${this.step}"
        id="${this.id}" ${readOnly}>
      </webthing-color-temperature-property>`;
    }
  }, {
    key: "update",
    value: function update(temperature) {
      if (!this.temperature) {
        return;
      }

      if (temperature == this.temperature.value) {
        return;
      }

      this.temperature.value = temperature;
    }
  }, {
    key: "set",
    value: function set() {
      this.thing.setProperty(this.name, this.temperature.value);
    }
  }]);

  return ColorTemperatureDetail;
}();

module.exports = ColorTemperatureDetail;

/***/ }),

/***/ "./static/js/property-detail/color.js":
/*!********************************************!*\
  !*** ./static/js/property-detail/color.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * ColorDetail
 *
 * A bubble showing the color of a thing
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */


function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var Utils = __webpack_require__(/*! ../utils */ "./static/js/utils.js");

var ColorDetail =
/*#__PURE__*/
function () {
  function ColorDetail(thing, name, property) {
    _classCallCheck(this, ColorDetail);

    this.thing = thing;
    this.name = name;
    this.readOnly = !!property.readOnly;
    this.label = property.label || 'Color';
    this.id = `color-${Utils.escapeHtmlForIdClass(this.name)}`;
  }

  _createClass(ColorDetail, [{
    key: "attach",
    value: function attach() {
      this.color = this.thing.element.querySelector(`#${this.id}`);
      this.color.addEventListener('change', this.set.bind(this));
    }
  }, {
    key: "view",
    value: function view() {
      var readOnly = this.readOnly ? 'data-read-only="true"' : '';
      return `
      <webthing-color-property data-name="${Utils.escapeHtml(this.label)}"
        id="${this.id}" ${readOnly}>
      </webthing-color-property>`;
    }
  }, {
    key: "update",
    value: function update(color) {
      if (color == this.color.value) {
        return;
      }

      this.color.value = color;
    }
  }, {
    key: "set",
    value: function set() {
      this.thing.setProperty(this.name, this.color.value);
    }
  }]);

  return ColorDetail;
}();

module.exports = ColorDetail;

/***/ }),

/***/ "./static/js/property-detail/current.js":
/*!**********************************************!*\
  !*** ./static/js/property-detail/current.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * CurrentDetail
 *
 * A bubble showing current.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */


function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (typeof call === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var NumericLabelDetail = __webpack_require__(/*! ./numeric-label */ "./static/js/property-detail/numeric-label.js");

var Utils = __webpack_require__(/*! ../utils */ "./static/js/utils.js");

var CurrentDetail =
/*#__PURE__*/
function (_NumericLabelDetail) {
  _inherits(CurrentDetail, _NumericLabelDetail);

  function CurrentDetail(thing, name, property) {
    var _this;

    _classCallCheck(this, CurrentDetail);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(CurrentDetail).call(this, thing, name, !!property.readOnly, property.label || 'Current', 'A', 1));
    _this.id = `current-${Utils.escapeHtmlForIdClass(_this.name)}`;
    return _this;
  }

  _createClass(CurrentDetail, [{
    key: "view",
    value: function view() {
      var readOnly = this.readOnly ? 'data-read-only="true"' : '';
      return `
      <webthing-current-property data-value="0" ${readOnly}
        data-name="${Utils.escapeHtml(this.label)}" id="${this.id}">
      </webthing-current-property>`;
    }
  }]);

  return CurrentDetail;
}(NumericLabelDetail);

module.exports = CurrentDetail;

/***/ }),

/***/ "./static/js/property-detail/enum.js":
/*!*******************************************!*\
  !*** ./static/js/property-detail/enum.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * EnumDetail
 *
 * A generic enum property detail.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */


function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var Utils = __webpack_require__(/*! ../utils */ "./static/js/utils.js");

var EnumDetail =
/*#__PURE__*/
function () {
  function EnumDetail(thing, name, property) {
    _classCallCheck(this, EnumDetail);

    this.thing = thing;
    this.name = name;
    this.readOnly = !!property.readOnly;
    this.label = property.label || name;
    this.type = property.type;
    this.unit = property.unit ? Utils.unitNameToAbbreviation(property.unit) : null;
    this.choices = property.enum;
    this.id = `enum-${Utils.escapeHtmlForIdClass(this.name)}`;
  }

  _createClass(EnumDetail, [{
    key: "attach",
    value: function attach() {
      this.select = this.thing.element.querySelector(`#${this.id}`);
      var setValue = Utils.debounce(500, this.set.bind(this));
      this.select.addEventListener('change', setValue);
    }
  }, {
    key: "view",
    value: function view() {
      var unit = this.unit || '';
      var readOnly = this.readOnly ? 'data-read-only="true"' : '';
      return `
      <webthing-enum-property data-name="${Utils.escapeHtml(this.label)}"
        data-unit="${unit}" data-choices="${btoa(JSON.stringify(this.choices))}"
        data-type="${this.type}" id="${this.id}" ${readOnly}>
      </webthing-enum-property>`;
    }
  }, {
    key: "update",
    value: function update(value) {
      if (!this.select || value == this.select.value) {
        return;
      }

      this.select.value = value;
    }
  }, {
    key: "set",
    value: function set() {
      this.thing.setProperty(this.name, this.select.value);
    }
  }]);

  return EnumDetail;
}();

module.exports = EnumDetail;

/***/ }),

/***/ "./static/js/property-detail/frequency.js":
/*!************************************************!*\
  !*** ./static/js/property-detail/frequency.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * FrequencyDetail
 *
 * A bubble showing frequency.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */


function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (typeof call === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var NumericLabelDetail = __webpack_require__(/*! ./numeric-label */ "./static/js/property-detail/numeric-label.js");

var Utils = __webpack_require__(/*! ../utils */ "./static/js/utils.js");

var FrequencyDetail =
/*#__PURE__*/
function (_NumericLabelDetail) {
  _inherits(FrequencyDetail, _NumericLabelDetail);

  function FrequencyDetail(thing, name, property) {
    var _this;

    _classCallCheck(this, FrequencyDetail);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(FrequencyDetail).call(this, thing, name, !!property.readOnly, property.label || 'Frequency', 'Hz', 0));
    _this.id = `frequency-${Utils.escapeHtmlForIdClass(_this.name)}`;
    return _this;
  }

  _createClass(FrequencyDetail, [{
    key: "view",
    value: function view() {
      var readOnly = this.readOnly ? 'data-read-only="true"' : '';
      return `
      <webthing-frequency-property data-value="0" ${readOnly}
        data-name="${Utils.escapeHtml(this.label)}" id="${this.id}">
      </webthing-frequency-property>`;
    }
  }]);

  return FrequencyDetail;
}(NumericLabelDetail);

module.exports = FrequencyDetail;

/***/ }),

/***/ "./static/js/property-detail/instantaneous-power.js":
/*!**********************************************************!*\
  !*** ./static/js/property-detail/instantaneous-power.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * InstantaneousPowerDetail
 *
 * A bubble showing instantaneous power.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */


function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (typeof call === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var NumericLabelDetail = __webpack_require__(/*! ./numeric-label */ "./static/js/property-detail/numeric-label.js");

var Utils = __webpack_require__(/*! ../utils */ "./static/js/utils.js");

var InstantaneousPowerDetail =
/*#__PURE__*/
function (_NumericLabelDetail) {
  _inherits(InstantaneousPowerDetail, _NumericLabelDetail);

  function InstantaneousPowerDetail(thing, name, property) {
    var _this;

    _classCallCheck(this, InstantaneousPowerDetail);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(InstantaneousPowerDetail).call(this, thing, name, !!property.readOnly, property.label || 'Power', 'W', 0));
    _this.id = `instantaneous-power-${Utils.escapeHtmlForIdClass(_this.name)}`;
    return _this;
  }

  _createClass(InstantaneousPowerDetail, [{
    key: "view",
    value: function view() {
      var readOnly = this.readOnly ? 'data-read-only="true"' : '';
      return `
      <webthing-instantaneous-power-property data-value="0" ${readOnly}
        data-name="${Utils.escapeHtml(this.label)}" id="${this.id}">
      </webthing-instantaneous-power-property>`;
    }
  }]);

  return InstantaneousPowerDetail;
}(NumericLabelDetail);

module.exports = InstantaneousPowerDetail;

/***/ }),

/***/ "./static/js/property-detail/level.js":
/*!********************************************!*\
  !*** ./static/js/property-detail/level.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * LevelDetail
 *
 * A bubble showing the level of a thing
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */


function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var Utils = __webpack_require__(/*! ../utils */ "./static/js/utils.js");

var LevelDetail =
/*#__PURE__*/
function () {
  function LevelDetail(thing, name, property) {
    _classCallCheck(this, LevelDetail);

    this.thing = thing;
    this.name = name;
    this.readOnly = !!property.readOnly;
    this.label = property.label || 'Level';
    this.unit = property.unit ? Utils.unitNameToAbbreviation(property.unit) : null;

    if (property.hasOwnProperty('min')) {
      this.min = property.min;
    } else if (property.hasOwnProperty('minimum')) {
      this.min = property.minimum;
    } else {
      this.min = 0;
    }

    if (property.hasOwnProperty('max')) {
      this.max = property.max;
    } else if (property.hasOwnProperty('maximum')) {
      this.max = property.maximum;
    } else {
      this.max = 100;
    }

    if (property.hasOwnProperty('multipleOf')) {
      this.step = property.multipleOf;
    } else if (property.type === 'number') {
      this.step = 'any';
    } else {
      this.step = 1;
    }

    this.id = `level-${Utils.escapeHtmlForIdClass(this.name)}`;
  }

  _createClass(LevelDetail, [{
    key: "attach",
    value: function attach() {
      this.level = this.thing.element.querySelector(`#${this.id}`);
      var setLevel = Utils.debounce(500, this.set.bind(this));
      this.level.addEventListener('change', setLevel);
    }
  }, {
    key: "view",
    value: function view() {
      var unit = this.unit || '';
      var readOnly = this.readOnly ? 'data-read-only="true"' : '';
      return `
      <webthing-level-property data-name="${Utils.escapeHtml(this.label)}"
        data-unit="${unit}" min="${this.min}" max="${this.max}"
        step="${this.step}" id="${this.id}" ${readOnly}>
      </webthing-level-property>`;
    }
  }, {
    key: "update",
    value: function update(level) {
      if (!this.level) {
        return;
      }

      if (level == this.level.value) {
        return;
      }

      this.level.value = level;
    }
  }, {
    key: "set",
    value: function set() {
      this.thing.setProperty(this.name, this.level.value);
    }
  }]);

  return LevelDetail;
}();

module.exports = LevelDetail;

/***/ }),

/***/ "./static/js/property-detail/motion.js":
/*!*********************************************!*\
  !*** ./static/js/property-detail/motion.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * MotionDetail
 *
 * A bubble showing motion state.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */


function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (typeof call === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var StringLabelDetail = __webpack_require__(/*! ./string-label */ "./static/js/property-detail/string-label.js");

var Utils = __webpack_require__(/*! ../utils */ "./static/js/utils.js");

var MotionDetail =
/*#__PURE__*/
function (_StringLabelDetail) {
  _inherits(MotionDetail, _StringLabelDetail);

  function MotionDetail(thing, name, property) {
    var _this;

    _classCallCheck(this, MotionDetail);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(MotionDetail).call(this, thing, name, !!property.readOnly, property.label || 'Motion'));
    _this.id = `motion-${Utils.escapeHtmlForIdClass(_this.name)}`;
    return _this;
  }

  _createClass(MotionDetail, [{
    key: "view",
    value: function view() {
      var readOnly = this.readOnly ? 'data-read-only="true"' : '';
      return `
      <webthing-motion-property data-value="NO MOTION" ${readOnly}
        data-name="${Utils.escapeHtml(this.label)}" id="${this.id}">
      </webthing-motion-property>`;
    }
  }, {
    key: "update",
    value: function update(value) {
      if (!this.label) {
        return;
      }

      this.labelElement.value = value ? 'MOTION' : 'NO MOTION';
      this.labelElement.inverted = value;
    }
  }]);

  return MotionDetail;
}(StringLabelDetail);

module.exports = MotionDetail;

/***/ }),

/***/ "./static/js/property-detail/number.js":
/*!*********************************************!*\
  !*** ./static/js/property-detail/number.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * NumberDetail
 *
 * A generic numeric property detail.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */


function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var Utils = __webpack_require__(/*! ../utils */ "./static/js/utils.js");

var NumberDetail =
/*#__PURE__*/
function () {
  function NumberDetail(thing, name, property) {
    _classCallCheck(this, NumberDetail);

    this.thing = thing;
    this.name = name;
    this.readOnly = !!property.readOnly;
    this.label = property.label || name;
    this.type = property.type;
    this.unit = property.unit ? Utils.unitNameToAbbreviation(property.unit) : null;

    if (property.hasOwnProperty('min')) {
      this.min = property.min;
    } else if (property.hasOwnProperty('minimum')) {
      this.min = property.minimum;
    } else {
      this.min = null;
    }

    if (property.hasOwnProperty('max')) {
      this.max = property.max;
    } else if (property.hasOwnProperty('maximum')) {
      this.max = property.maximum;
    } else {
      this.max = null;
    }

    if (property.hasOwnProperty('multipleOf')) {
      this.step = property.multipleOf;
    } else if (property.type === 'number') {
      this.step = 'any';
    } else {
      this.step = 1;
    }

    this.id = `number-${Utils.escapeHtmlForIdClass(this.name)}`;
  }
  /**
   * Attach to the view.
   */


  _createClass(NumberDetail, [{
    key: "attach",
    value: function attach() {
      this.input = this.thing.element.querySelector(`#${this.id}`);
      var setNumber = Utils.debounce(500, this.set.bind(this));
      this.input.addEventListener('change', setNumber);
    }
    /**
     * Build the detail view.
     */

  }, {
    key: "view",
    value: function view() {
      var min = this.min === null ? '' : `min="${this.min}"`;
      var max = this.max === null ? '' : `max="${this.max}"`;
      var unit = this.unit || '';
      var readOnly = this.readOnly ? 'data-read-only="true"' : '';
      return `
      <webthing-number-property data-name="${Utils.escapeHtml(this.label)}"
        data-unit="${unit}" ${min} ${max} value="0" step="${this.step}"
        id="${this.id}" ${readOnly}>
      </webthing-number-property>`;
    }
    /**
     * Update the detail view with the new property value.
     */

  }, {
    key: "update",
    value: function update(number) {
      if (!this.input || number == this.input.value) {
        return;
      }

      this.input.value = number;
    }
  }, {
    key: "set",
    value: function set() {
      this.thing.setProperty(this.name, this.input.value);
    }
  }]);

  return NumberDetail;
}();

module.exports = NumberDetail;

/***/ }),

/***/ "./static/js/property-detail/numeric-label.js":
/*!****************************************************!*\
  !*** ./static/js/property-detail/numeric-label.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * NumericLabelDetail
 *
 * A bubble showing some basic numeric information with no input.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */


function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var Utils = __webpack_require__(/*! ../utils */ "./static/js/utils.js");

var NumericLabelDetail =
/*#__PURE__*/
function () {
  function NumericLabelDetail(thing, name, readOnly, label, unit, precision) {
    _classCallCheck(this, NumericLabelDetail);

    this.thing = thing;
    this.name = name;
    this.readOnly = readOnly;
    this.label = label;
    this.unit = Utils.unitNameToAbbreviation(unit);
    this.precision = precision;
    this.id = `label-${Utils.escapeHtmlForIdClass(this.name)}`;
  }

  _createClass(NumericLabelDetail, [{
    key: "attach",
    value: function attach() {
      this.labelElement = this.thing.element.querySelector(`#${this.id}`);
    }
  }, {
    key: "view",
    value: function view() {
      var name = Utils.escapeHtml(this.label);
      var unit = Utils.escapeHtml(this.unit);
      var readOnly = this.readOnly ? 'data-read-only="true"' : '';
      return `
      <webthing-numeric-label-property data-value="0" data-name="${name}"
        data-unit="${unit}" data-precision="${this.precision}" id="${this.id}"
        ${readOnly}>
      </webthing-numeric-label-property>`;
    }
  }, {
    key: "update",
    value: function update(value) {
      if (!this.label) {
        return;
      }

      this.labelElement.value = parseFloat(value) || 0;
    }
  }]);

  return NumericLabelDetail;
}();

module.exports = NumericLabelDetail;

/***/ }),

/***/ "./static/js/property-detail/on-off.js":
/*!*********************************************!*\
  !*** ./static/js/property-detail/on-off.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * OnOffDetail
 *
 * A bubble showing the on/off state of a thing
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */


function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var Utils = __webpack_require__(/*! ../utils */ "./static/js/utils.js");

var OnOffDetail =
/*#__PURE__*/
function () {
  function OnOffDetail(thing, name, property) {
    _classCallCheck(this, OnOffDetail);

    this.thing = thing;
    this.name = name;
    this.readOnly = !!property.readOnly;
    this.label = property.label || 'On/Off';
    this.id = `on-off-${Utils.escapeHtmlForIdClass(this.name)}`;
  }

  _createClass(OnOffDetail, [{
    key: "attach",
    value: function attach() {
      this.input = this.thing.element.querySelector(`#${this.id}`);
      var setOnOff = Utils.debounce(500, this.set.bind(this));
      this.input.addEventListener('change', setOnOff);
    }
  }, {
    key: "view",
    value: function view() {
      var readOnly = this.readOnly ? 'data-read-only="true"' : '';
      return `
      <webthing-on-off-property data-name="${Utils.escapeHtml(this.label)}"
        id="${this.id}" ${readOnly}>
      </webthing-on-off-property>`;
    }
  }, {
    key: "update",
    value: function update(on) {
      this.input.checked = on;
    }
  }, {
    key: "set",
    value: function set() {
      this.thing.setProperty(this.name, this.input.checked);
    }
  }]);

  return OnOffDetail;
}();

module.exports = OnOffDetail;

/***/ }),

/***/ "./static/js/property-detail/open.js":
/*!*******************************************!*\
  !*** ./static/js/property-detail/open.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * OpenDetail
 *
 * A bubble showing open state.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */


function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (typeof call === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var StringLabelDetail = __webpack_require__(/*! ./string-label */ "./static/js/property-detail/string-label.js");

var Utils = __webpack_require__(/*! ../utils */ "./static/js/utils.js");

var OpenDetail =
/*#__PURE__*/
function (_StringLabelDetail) {
  _inherits(OpenDetail, _StringLabelDetail);

  function OpenDetail(thing, name, property) {
    var _this;

    _classCallCheck(this, OpenDetail);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(OpenDetail).call(this, thing, name, !!property.readOnly, property.label || 'Open'));
    _this.id = `open-${Utils.escapeHtmlForIdClass(_this.name)}`;
    return _this;
  }

  _createClass(OpenDetail, [{
    key: "view",
    value: function view() {
      var readOnly = this.readOnly ? 'data-read-only="true"' : '';
      return `
      <webthing-open-property data-value="CLOSED" ${readOnly}
        data-name="${Utils.escapeHtml(this.label)}" id="${this.id}">
      </webthing-open-property>`;
    }
  }, {
    key: "update",
    value: function update(value) {
      if (!this.label) {
        return;
      }

      this.labelElement.value = value ? 'OPEN' : 'CLOSED';
      this.labelElement.inverted = value;
    }
  }]);

  return OpenDetail;
}(StringLabelDetail);

module.exports = OpenDetail;

/***/ }),

/***/ "./static/js/property-detail/pushed.js":
/*!*********************************************!*\
  !*** ./static/js/property-detail/pushed.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * PushedDetail
 *
 * A bubble showing pushed state.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */


function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (typeof call === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var StringLabelDetail = __webpack_require__(/*! ./string-label */ "./static/js/property-detail/string-label.js");

var Utils = __webpack_require__(/*! ../utils */ "./static/js/utils.js");

var PushedDetail =
/*#__PURE__*/
function (_StringLabelDetail) {
  _inherits(PushedDetail, _StringLabelDetail);

  function PushedDetail(thing, name, property) {
    var _this;

    _classCallCheck(this, PushedDetail);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(PushedDetail).call(this, thing, name, !!property.readOnly, property.label || 'Pushed'));
    _this.id = `pushed-${Utils.escapeHtmlForIdClass(_this.name)}`;
    return _this;
  }

  _createClass(PushedDetail, [{
    key: "view",
    value: function view() {
      var readOnly = this.readOnly ? 'data-read-only="true"' : '';
      return `
      <webthing-pushed-property data-value="NOT PUSHED" ${readOnly}
        data-name="${Utils.escapeHtml(this.label)}" id="${this.id}">
      </webthing-pushed-property>`;
    }
  }, {
    key: "update",
    value: function update(value) {
      if (!this.label) {
        return;
      }

      this.labelElement.value = value ? 'PUSHED' : 'NOT PUSHED';
      this.labelElement.inverted = value;
    }
  }]);

  return PushedDetail;
}(StringLabelDetail);

module.exports = PushedDetail;

/***/ }),

/***/ "./static/js/property-detail/string-label.js":
/*!***************************************************!*\
  !*** ./static/js/property-detail/string-label.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * StringLabelDetail
 *
 * A bubble showing some basic string information with no input.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */


function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var Utils = __webpack_require__(/*! ../utils */ "./static/js/utils.js");

var StringLabelDetail =
/*#__PURE__*/
function () {
  function StringLabelDetail(thing, name, readOnly, label) {
    _classCallCheck(this, StringLabelDetail);

    this.thing = thing;
    this.name = name;
    this.readOnly = readOnly;
    this.label = label;
    this.id = `label-${Utils.escapeHtmlForIdClass(this.name)}`;
  }

  _createClass(StringLabelDetail, [{
    key: "attach",
    value: function attach() {
      this.labelElement = this.thing.element.querySelector(`#${this.id}`);
    }
  }, {
    key: "view",
    value: function view() {
      var name = Utils.escapeHtml(this.label);
      var readOnly = this.readOnly ? 'data-read-only="true"' : '';
      return `
      <webthing-string-label-property data-value="0" data-name="${name}"
        id="${this.id}" ${readOnly}>
      </webthing-string-label-property>`;
    }
  }, {
    key: "update",
    value: function update(value) {
      if (!this.label) {
        return;
      }

      this.labelElement.value = value;
    }
  }]);

  return StringLabelDetail;
}();

module.exports = StringLabelDetail;

/***/ }),

/***/ "./static/js/property-detail/string.js":
/*!*********************************************!*\
  !*** ./static/js/property-detail/string.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * StringDetail
 *
 * A generic string property detail.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */


function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var Utils = __webpack_require__(/*! ../utils */ "./static/js/utils.js");

var StringDetail =
/*#__PURE__*/
function () {
  function StringDetail(thing, name, property) {
    _classCallCheck(this, StringDetail);

    this.thing = thing;
    this.name = name;
    this.readOnly = !!property.readOnly;
    this.label = property.label || name;
    this.id = `string-${Utils.escapeHtmlForIdClass(this.name)}`;
  }
  /**
   * Attach to the view.
   */


  _createClass(StringDetail, [{
    key: "attach",
    value: function attach() {
      var _this = this;

      this.input = this.thing.element.querySelector(`#${this.id}`);
      this.input.addEventListener('change', function () {
        _this.thing.setProperty(_this.name, _this.input.value);
      });
    }
    /**
     * Build the detail view.
     */

  }, {
    key: "view",
    value: function view() {
      var readOnly = this.readOnly ? 'data-read-only="true"' : '';
      return `
      <webthing-string-property data-name="${Utils.escapeHtml(this.label)}"
        id="${this.id}" ${readOnly}>
      </webthing-string-property>`;
    }
    /**
     * Update the detail view with the new property value.
     */

  }, {
    key: "update",
    value: function update(string) {
      if (!this.input || string == this.input.value) {
        return;
      }

      this.input.value = string;
    }
  }]);

  return StringDetail;
}();

module.exports = StringDetail;

/***/ }),

/***/ "./static/js/property-detail/voltage.js":
/*!**********************************************!*\
  !*** ./static/js/property-detail/voltage.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * VoltageDetail
 *
 * A bubble showing voltage.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */


function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (typeof call === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var NumericLabelDetail = __webpack_require__(/*! ./numeric-label */ "./static/js/property-detail/numeric-label.js");

var Utils = __webpack_require__(/*! ../utils */ "./static/js/utils.js");

var VoltageDetail =
/*#__PURE__*/
function (_NumericLabelDetail) {
  _inherits(VoltageDetail, _NumericLabelDetail);

  function VoltageDetail(thing, name, property) {
    var _this;

    _classCallCheck(this, VoltageDetail);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(VoltageDetail).call(this, thing, name, !!property.readOnly, property.label || 'Voltage', 'V', 0));
    _this.id = `voltage-${Utils.escapeHtmlForIdClass(_this.name)}`;
    return _this;
  }

  _createClass(VoltageDetail, [{
    key: "view",
    value: function view() {
      var readOnly = this.readOnly ? 'data-read-only="true"' : '';
      return `
      <webthing-voltage-property data-value="0" ${readOnly}
        data-name="${Utils.escapeHtml(this.label)}" id="${this.id}">
      </webthing-voltage-property>`;
    }
  }]);

  return VoltageDetail;
}(NumericLabelDetail);

module.exports = VoltageDetail;

/***/ }),

/***/ "./static/js/push-button.js":
/*!**********************************!*\
  !*** ./static/js/push-button.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Push Button.
 *
 * UI element representing a Push Button.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */


__webpack_require__(/*! core-js/modules/es6.reflect.get */ "./node_modules/core-js/modules/es6.reflect.get.js");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (typeof call === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var Thing = __webpack_require__(/*! ./thing */ "./static/js/thing.js");

var PushButton =
/*#__PURE__*/
function (_Thing) {
  _inherits(PushButton, _Thing);

  /**
   * PushButton Constructor (extends Thing).
   *
   * @param {Object} description Thing description object.
   * @param {Number} format See Constants.ThingFormat
   */
  function PushButton(model, description, format) {
    var _this;

    _classCallCheck(this, PushButton);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(PushButton).call(this, model, description, format, {
      baseIcon: '/optimized-images/thing-icons/push_button.svg'
    }));
    _this.pressedEventName = null;
    _this.doublePressedEventName = null;
    _this.longPressedEventName = null;

    if (description.events) {
      for (var name in description.events) {
        switch (description.events[name]['@type']) {
          case 'PressedEvent':
            if (_this.pressedEventName === null) {
              _this.pressedEventName = name;
            }

            break;

          case 'DoublePressedEvent':
            if (_this.doublePressedEventName === null) {
              _this.doublePressedEventName = name;
            }

            break;

          case 'LongPressedEvent':
            if (_this.longPressedEventName === null) {
              _this.longPressedEventName = name;
            }

            break;
        }
      }
    } // findProperties gets called as part of super(), so this.pushedProperty
    // will already be defined at this point.


    if (!_this.pushedProperty) {
      _this.icon.pushed = false;
    }

    return _this;
  }
  /**
   * Find any properties required for this view.
   */


  _createClass(PushButton, [{
    key: "findProperties",
    value: function findProperties() {
      this.pushedProperty = null; // Look for properties by type first.

      for (var name in this.displayedProperties) {
        var type = this.displayedProperties[name].property['@type'];

        if (type === 'PushedProperty') {
          this.pushedProperty = name;
          break;
        }
      }
    }
  }, {
    key: "updateProperty",

    /**
     * Update the display for the provided property.
     * @param {string} name - name of the property
     * @param {*} value - value of the property
     */
    value: function updateProperty(name, value) {
      _get(_getPrototypeOf(PushButton.prototype), "updateProperty", this).call(this, name, value);

      if (!this.displayedProperties.hasOwnProperty(name)) {
        return;
      }

      if (name === this.pushedProperty) {
        this.icon.pushed = !!value;
      }
    }
    /**
     * Handle an 'event' message.
     *
     * @param {Object} data - Event data
     */

  }, {
    key: "onEvent",
    value: function onEvent(data) {
      _get(_getPrototypeOf(PushButton.prototype), "onEvent", this).call(this, data);

      if (!this.pushedProperty) {
        for (var name in data) {
          if (name === this.pressedEventName) {
            this.icon.dispatchEvent(new CustomEvent('press', {
              detail: 'single'
            }));
          } else if (name === this.doublePressedEventName) {
            this.icon.dispatchEvent(new CustomEvent('press', {
              detail: 'double'
            }));
          } else if (name === this.longPressedEventName) {
            this.icon.dispatchEvent(new CustomEvent('press', {
              detail: 'long'
            }));
          }
        }
      }
    }
  }, {
    key: "iconView",
    value: function iconView() {
      return `
      <webthing-push-button-capability>
      </webthing-push-button-capability>`;
    }
  }, {
    key: "icon",
    get: function get() {
      return this.element.querySelector('webthing-push-button-capability');
    }
  }]);

  return PushButton;
}(Thing);

module.exports = PushButton;

/***/ }),

/***/ "./static/js/router.js":
/*!*****************************!*\
  !*** ./static/js/router.js ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Client side URL router.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */


var App = __webpack_require__(/*! ./app */ "./static/js/app.js");

var page = __webpack_require__(/*! page */ "./node_modules/page/page.js"); // eslint-disable-next-line no-unused-vars


var Router = {
  init: function init() {
    page('/', '/things');
    page('/assistant', App.showAssistant.bind(App));
    page('/things', App.showThings.bind(App));
    page('/things/:thingId', App.showThings.bind(App));
    page('/things/:thingId/actions/:actionName', App.showThings.bind(App));
    page('/things/:thingId/events', App.showThings.bind(App));
    page('/settings', App.showSettings.bind(App));
    page('/settings/:section', App.showSettings.bind(App));
    page('/settings/:section/:subsection', App.showSettings.bind(App));
    page('/settings/:section/:subsection/:id', App.showSettings.bind(App));
    page('/floorplan', App.showFloorplan.bind(App));
    page('/rules', App.showRules.bind(App));
    page('/rules/:rule', App.showRule.bind(App));
    page();
  }
};
module.exports = Router;

/***/ }),

/***/ "./static/js/rule-screen.js":
/*!**********************************!*\
  !*** ./static/js/rule-screen.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Rule Screen.
 *
 * Allows editing a single rule
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */


__webpack_require__(/*! core-js/modules/es6.promise */ "./node_modules/core-js/modules/es6.promise.js");

__webpack_require__(/*! core-js/modules/es6.regexp.match */ "./node_modules/core-js/modules/es6.regexp.match.js");

__webpack_require__(/*! core-js/modules/es6.array.from */ "./node_modules/core-js/modules/es6.array.from.js");

__webpack_require__(/*! core-js/modules/es7.symbol.async-iterator */ "./node_modules/core-js/modules/es7.symbol.async-iterator.js");

__webpack_require__(/*! core-js/modules/es6.symbol */ "./node_modules/core-js/modules/es6.symbol.js");

__webpack_require__(/*! core-js/modules/web.dom.iterable */ "./node_modules/core-js/modules/web.dom.iterable.js");

var API = __webpack_require__(/*! ./api */ "./static/js/api.js");

var DevicePropertyBlock = __webpack_require__(/*! ./rules/DevicePropertyBlock */ "./static/js/rules/DevicePropertyBlock.js");

var Gateway = __webpack_require__(/*! ./rules/Gateway */ "./static/js/rules/Gateway.js");

var Rule = __webpack_require__(/*! ./rules/Rule */ "./static/js/rules/Rule.js");

var RuleUtils = __webpack_require__(/*! ./rules/RuleUtils */ "./static/js/rules/RuleUtils.js");

var NotificationEffectBlock = __webpack_require__(/*! ./rules/NotificationEffectBlock */ "./static/js/rules/NotificationEffectBlock.js");

var TimeTriggerBlock = __webpack_require__(/*! ./rules/TimeTriggerBlock */ "./static/js/rules/TimeTriggerBlock.js");

var page = __webpack_require__(/*! page */ "./node_modules/page/page.js"); // eslint-disable-next-line no-unused-vars


var RuleScreen = {
  init: function init() {
    var _this = this;

    this.gateway = new Gateway();
    this.onPresentationChange = this.onPresentationChange.bind(this);
    this.onRuleChange = this.onRuleChange.bind(this);
    this.onRuleDescriptionInput = this.onRuleDescriptionInput.bind(this);
    this.animate = this.animate.bind(this);
    this.animateDelay = 750;
    this.rule = null;
    this.partBlocks = [];
    this.ruleEffectType = 'SetEffect';
    this.view = document.getElementById('rule-view');
    this.titleBar = this.view.querySelector('.title-bar');
    this.ruleArea = document.getElementById('rule-area');
    this.ruleName = this.view.querySelector('.rule-name');
    this.ruleNameCustomize = this.view.querySelector('.rule-name-customize');

    var selectRuleName = function selectRuleName() {
      // Select all of ruleName, https://stackoverflow.com/questions/6139107/
      var range = document.createRange();
      range.selectNodeContents(_this.ruleName);
      var selection = window.getSelection();
      selection.removeAllRanges();
      selection.addRange(range);
    };

    this.ruleNameCustomize.addEventListener('click', selectRuleName);
    this.ruleName.addEventListener('dblclick', function (event) {
      event.preventDefault();
      selectRuleName();
    });
    this.ruleName.contentEditable = true;
    this.ruleName.addEventListener('keypress', function (event) {
      if (event.key === 'Enter') {
        event.preventDefault();

        _this.ruleName.blur();
      }
    });
    this.ruleName.addEventListener('blur', function () {
      _this.rule.name = _this.ruleName.textContent;

      _this.rule.update();

      _this.onPresentationChange();
    });
    this.ruleDescription = this.view.querySelector('.rule-info > p');
    this.ruleDescription.addEventListener('input', this.onRuleDescriptionInput);
    this.rulePartsList = document.getElementById('rule-parts-list');
    this.onboardingHint = document.getElementById('onboarding-hint');
    this.connection = document.getElementById('connection');
    this.deleteOverlay = document.getElementById('rule-delete-overlay');
    this.deleteButton = document.getElementById('delete-button');
    this.deleteCancel = this.view.querySelector('.rule-delete-cancel-button');
    this.deleteConfirm = this.view.querySelector('.rule-delete-confirm-button');
    this.deleteButton.addEventListener('click', function () {
      _this.deleteOverlay.classList.add('active');
    });
    this.deleteCancel.addEventListener('click', function () {
      _this.deleteOverlay.classList.remove('active');
    });
    this.deleteConfirm.addEventListener('click', function () {
      _this.rule.delete().then(function () {
        page('/rules');
      });
    });
    this.onScrollLeftClick = this.onScrollLeftClick.bind(this);
    this.onScrollRightClick = this.onScrollRightClick.bind(this);
    var scrollLeft = document.getElementById('rule-parts-list-scroll-left');
    var scrollRight = document.getElementById('rule-parts-list-scroll-right');
    scrollLeft.addEventListener('click', this.onScrollLeftClick);
    scrollLeft.addEventListener('touchstart', this.onScrollLeftClick);
    scrollRight.addEventListener('click', this.onScrollRightClick);
    scrollRight.addEventListener('touchstart', this.onScrollRightClick);
    this.onWindowResize = this.onWindowResize.bind(this);
    window.addEventListener('resize', this.onWindowResize);
    this.onWindowResize();
  },
  getEffectType: function getEffectType() {
    var effectSelect = this.ruleDescription.querySelector('.rule-effect-select');
    return effectSelect.value === 'If' ? 'SetEffect' : 'PulseEffect';
  },

  /**
   * Change the rule based on a change to its description's drop down menus
   * @param {Event} event
   */
  onRuleDescriptionInput: function onRuleDescriptionInput(event) {
    var value = event.target.value;

    if (event.target.classList.contains('rule-trigger-select')) {
      if (value === 'and') {
        this.rule.trigger.op = 'AND';
      } else if (value === 'or') {
        this.rule.trigger.op = 'OR';
      }
    } else if (event.target.classList.contains('rule-effect-select')) {
      var effectType = this.getEffectType();
      this.ruleEffectType = effectType;
      var _iteratorNormalCompletion = true;
      var _didIteratorError = false;
      var _iteratorError = undefined;

      try {
        for (var _iterator = this.rule.effect.effects[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var effect = _step.value;

          if (effect.type === 'SetEffect' || effect.type === 'PulseEffect') {
            effect.type = effectType;
          }
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return != null) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }
    } else {
      console.warn('Unexpected input event', event);
    }

    this.onRuleChange();
  },

  /**
   * Instantiate a draggable DevicePropertyBlock from a template DeviceBlock
   * in the palette
   * @param {ThingDescription} thing
   * @param {Event} event
   */
  onDeviceBlockDown: function onDeviceBlockDown(thing, event) {
    if (!this.rule) {
      return;
    }

    var deviceRect = event.target.getBoundingClientRect();
    var x = deviceRect.left;
    var y = deviceRect.top;
    var newBlock = new DevicePropertyBlock(this.ruleArea, this.onPresentationChange, this.onRuleChange, thing);
    newBlock.snapToGrid(x, y);
    newBlock.draggable.onDown(event);
    this.partBlocks.push(newBlock);
  },

  /**
   * Instantiate a draggable TimeTriggerBlock from a template
   * TimeTriggerBlock
   * in the palette
   * @param {Event} event
   */
  onTimeTriggerBlockDown: function onTimeTriggerBlockDown(event) {
    if (!this.rule) {
      return;
    }

    var deviceRect = event.target.getBoundingClientRect();
    var x = deviceRect.left;
    var y = deviceRect.top;
    var newBlock = new TimeTriggerBlock(this.ruleArea, this.onPresentationChange, this.onRuleChange);
    newBlock.snapToGrid(x, y);
    newBlock.draggable.onDown(event);
    this.partBlocks.push(newBlock);
  },

  /**
   * Instantiate a draggable NotificationEffectBlock from a template
   * NotificationEffectBlock in the palette
   * @param {Event} event
   */
  onNotificationEffectBlockDown: function onNotificationEffectBlockDown(event) {
    if (!this.rule) {
      return;
    }

    var deviceRect = event.target.getBoundingClientRect();
    var x = deviceRect.left;
    var y = deviceRect.top;
    var newBlock = new NotificationEffectBlock(this.ruleArea, this.onPresentationChange, this.onRuleChange);
    newBlock.snapToGrid(x, y);
    newBlock.draggable.onDown(event);
    this.partBlocks.push(newBlock);
  },

  /**
   * Create a block representing a time trigger
   * @return {Element}
   */
  makeTimeTriggerBlock: function makeTimeTriggerBlock() {
    var elt = document.createElement('div');
    elt.classList.add('rule-part');
    elt.innerHTML = `<div class="rule-part-block time-trigger-block">
      <img class="rule-part-icon" src="/optimized-images/rule-icons/clock.svg"/>
    </div>
    <p>Clock</p>`;
    return elt;
  },

  /**
   * Create a block representing a notification effect
   * @return {Element}
   */
  makeNotificationEffectBlock: function makeNotificationEffectBlock() {
    var elt = document.createElement('div');
    elt.classList.add('rule-part');
    elt.innerHTML = `<div class="rule-part-block notification-effect-block">
      <img class="rule-part-icon" src="/optimized-images/rule-icons/notification.svg"/>
    </div>
    <p>Notification</p>`;
    return elt;
  },

  /**
   * Create a device-block from a thing
   * @param {ThingDescription} thing
   * @return {Element}
   */
  makeDeviceBlock: function makeDeviceBlock(thing) {
    var elt = document.createElement('div');
    elt.classList.add('rule-part');
    elt.innerHTML = `<div class="rule-part-block device-block">
      <img class="rule-part-icon" src="${RuleUtils.icon(thing)}"/>
    </div>
    <p>${thing.name}</p>`;
    return elt;
  },

  /**
   * Instantiate a DevicePropertyBlock
   * @param {'trigger'|'effect'} role
   * @param {Object} part
   */
  makeRulePartBlock: function makeRulePartBlock(role, part) {
    var block = null;

    if (part.type === 'TimeTrigger') {
      block = new TimeTriggerBlock(this.ruleArea, this.onPresentationChange, this.onRuleChange);
    } else if (part.type === 'NotificationEffect') {
      block = new NotificationEffectBlock(this.ruleArea, this.onPresentationChange, this.onRuleChange);
    } else {
      var thing = RuleUtils.thingFromPart(this.gateway, part);

      if (!thing) {
        return;
      }

      block = new DevicePropertyBlock(this.ruleArea, this.onPresentationChange, this.onRuleChange, thing);
    }

    var rulePart = {};
    rulePart[role] = part;
    block.setRulePart(rulePart);
    block.snapToCenter();
    this.partBlocks.push(block);
  },
  showConnection: function showConnection() {
    this.connection.classList.remove('hidden');
    var dragHint = document.getElementById('drag-hint');
    var flexDir = window.getComputedStyle(dragHint).flexDirection;

    function isValidSelection(block) {
      var selectedOption = block.querySelector('.selected');

      if (!selectedOption) {
        return block.querySelector('.time-input') || block.querySelector('.message-input-container');
      }

      return JSON.parse(selectedOption.dataset.ruleFragment);
    }

    var triggerBlocks = Array.from(this.ruleArea.querySelectorAll('.rule-part-block.trigger')).map(function (elt) {
      return elt.parentNode;
    }).filter(isValidSelection);
    var effectBlocks = Array.from(this.ruleArea.querySelectorAll('.rule-part-block.effect')).map(function (elt) {
      return elt.parentNode;
    }).filter(isValidSelection);

    function transformToCoords(elt) {
      var re = /translate\((\d+)px, +(\d+)px\)/;
      var matches = elt.style.transform.match(re);

      if (!matches) {
        return {
          x: 0,
          y: 0
        };
      }

      var x = parseFloat(matches[1]);
      var y = parseFloat(matches[2]);
      return {
        x: x,
        y: y
      };
    }

    function triggerTransformToCoords(elt) {
      var coords = transformToCoords(elt);

      if (flexDir === 'column') {
        coords.x += dpbRect.width / 2;
        coords.y += dpbRect.height + 10;
      } else {
        coords.x += dpbRect.width + 10;
        coords.y += dpbRect.height / 2;
      }

      return coords;
    }

    function effectTransformToCoords(elt) {
      var coords = transformToCoords(elt);

      if (flexDir === 'column') {
        coords.x += dpbRect.width / 2;
        coords.y -= 10;
      } else {
        coords.x -= 10;
        coords.y += dpbRect.height / 2;
      }

      return coords;
    }

    var areaRect = this.ruleArea.getBoundingClientRect();
    var center = {
      x: areaRect.width / 2,
      y: areaRect.height / 2
    };
    var multiTrigger = triggerBlocks.length > 1;
    var multiEffect = effectBlocks.length > 1;
    var dpbRect = triggerBlocks[0].getBoundingClientRect();
    this.connection.innerHTML = '';

    function makePath(start, end) {
      var midX = (start.x + end.x) / 2;
      var pathDesc = ['M', start.x, start.y, 'C', midX, start.y, midX, end.y, end.x, end.y].join(' ');
      var path = document.createElementNS('http://www.w3.org/2000/svg', 'path');
      path.setAttribute('d', pathDesc);
      return path;
    }

    for (var i = 0; i < effectBlocks.length; i++) {
      var effectCoords = effectTransformToCoords(effectBlocks[i]);
      var start = center;

      if (!multiTrigger) {
        start = triggerTransformToCoords(triggerBlocks[0]);
      }

      var circleEffect = document.createElementNS('http://www.w3.org/2000/svg', 'circle');
      circleEffect.classList.add('effect');
      circleEffect.setAttribute('r', 6);
      circleEffect.setAttribute('cx', effectCoords.x);
      circleEffect.setAttribute('cy', effectCoords.y);
      this.connection.appendChild(circleEffect); // Draw path unless there are multiple triggers with a single effect

      if (!(multiTrigger && !multiEffect)) {
        var path = makePath(start, effectCoords);
        path.classList.add('effect');
        this.connection.appendChild(path);
      }
    }

    for (var _i = 0; _i < triggerBlocks.length; _i++) {
      var triggerCoords = triggerTransformToCoords(triggerBlocks[_i]);
      var circleTrigger = document.createElementNS('http://www.w3.org/2000/svg', 'circle');
      circleTrigger.classList.add('trigger');
      circleTrigger.setAttribute('r', 6);
      circleTrigger.setAttribute('cx', triggerCoords.x);
      circleTrigger.setAttribute('cy', triggerCoords.y);
      this.connection.appendChild(circleTrigger);

      if (!multiTrigger) {
        // Path already drawn by effects
        continue;
      }

      var end = center;

      if (!multiEffect) {
        end = effectTransformToCoords(effectBlocks[0]);
      }

      var _path = makePath(triggerCoords, end);

      _path.classList.add('trigger');

      this.connection.appendChild(_path);
    }

    if (multiTrigger && multiEffect) {
      var circleCenter = document.createElementNS('http://www.w3.org/2000/svg', 'circle');
      circleCenter.classList.add('center');
      circleCenter.setAttribute('r', 6);
      circleCenter.setAttribute('cx', center.x);
      circleCenter.setAttribute('cy', center.y);
      this.connection.appendChild(circleCenter);
    }
  },
  hideConnection: function hideConnection() {
    this.connection.classList.add('hidden');
  },
  partBlocksByRole: function partBlocksByRole() {
    var triggerBlocks = [];
    var effectBlocks = [];
    var _iteratorNormalCompletion2 = true;
    var _didIteratorError2 = false;
    var _iteratorError2 = undefined;

    try {
      for (var _iterator2 = this.partBlocks[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
        var partBlock = _step2.value;

        if (!partBlock.rulePart) {
          continue;
        }

        if (partBlock.rulePart.trigger) {
          triggerBlocks.push(partBlock);
        }

        if (partBlock.rulePart.effect) {
          effectBlocks.push(partBlock);
        }
      }
    } catch (err) {
      _didIteratorError2 = true;
      _iteratorError2 = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion2 && _iterator2.return != null) {
          _iterator2.return();
        }
      } finally {
        if (_didIteratorError2) {
          throw _iteratorError2;
        }
      }
    }

    return {
      triggerBlocks: triggerBlocks,
      effectBlocks: effectBlocks
    };
  },
  onRuleChange: function onRuleChange() {
    if (!this.rule) {
      return;
    }

    this.partBlocks = this.partBlocks.filter(function (partBlock) {
      return partBlock.role !== 'removed';
    });

    var _this$partBlocksByRol = this.partBlocksByRole(),
        triggerBlocks = _this$partBlocksByRol.triggerBlocks,
        effectBlocks = _this$partBlocksByRol.effectBlocks;

    var triggers = triggerBlocks.map(function (triggerBlock) {
      return triggerBlock.rulePart.trigger;
    });
    var op = 'AND';

    if (this.rule.trigger) {
      op = this.rule.trigger.op || op;
    }

    this.rule.trigger = {
      type: 'MultiTrigger',
      op: op,
      triggers: triggers
    };
    var effects = effectBlocks.map(function (effectBlock) {
      return effectBlock.rulePart.effect;
    });
    this.rule.effect = {
      type: 'MultiEffect',
      effects: effects
    };
    var effectType = this.getEffectType();
    var _iteratorNormalCompletion3 = true;
    var _didIteratorError3 = false;
    var _iteratorError3 = undefined;

    try {
      for (var _iterator3 = this.rule.effect.effects[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
        var effect = _step3.value;

        if (effect.type === 'SetEffect' || effect.type === 'PulseEffect') {
          effect.type = effectType;
        }
      }
    } catch (err) {
      _didIteratorError3 = true;
      _iteratorError3 = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion3 && _iterator3.return != null) {
          _iterator3.return();
        }
      } finally {
        if (_didIteratorError3) {
          throw _iteratorError3;
        }
      }
    }

    this.rule.update();
    this.onPresentationChange();
  },
  onPresentationChange: function onPresentationChange() {
    this.ruleName.textContent = this.rule.name || 'Rule Name';
    this.ruleDescription.innerHTML = this.rule.toHumanInterface();
    var ruleEffectSelect = this.ruleDescription.querySelector('.rule-effect-select');

    if (this.rule.effect && this.rule.effect.effects.length === 0) {
      ruleEffectSelect.value = this.ruleEffectType === 'SetEffect' ? 'If' : 'While';
    }

    if (ruleEffectSelect.value === 'If') {
      ruleEffectSelect.style.width = '1.8rem';
    } else {
      delete ruleEffectSelect.style.width;
    }

    var valid = this.rule.valid();

    if (valid) {
      this.titleBar.classList.remove('invalid');
    } else {
      this.titleBar.classList.add('invalid');
    }

    if (valid && !document.querySelector('.dragging')) {
      this.showConnection();
    } else {
      this.hideConnection();
    }

    if (!document.querySelector('.rule-part-container')) {
      this.onboardingHint.classList.remove('hidden');
    } else {
      this.onboardingHint.classList.add('hidden');
    }
  },
  show: function show(ruleId) {
    var _this2 = this;

    document.getElementById('speech-wrapper').classList.remove('assistant');
    this.rule = null;
    this.ruleEffectType = 'SetEffect'; // Fetch the rule description from the Engine or default to null

    var rulePromise = Promise.resolve(null);

    if (ruleId !== 'new') {
      rulePromise = fetch(`/rules/${encodeURIComponent(ruleId)}`, {
        headers: API.headers()
      }).then(function (res) {
        return res.json();
      });
    }

    function remove(elt) {
      return elt.parentNode.removeChild(elt);
    }

    this.partBlocks.forEach(function (oldBlock) {
      oldBlock.remove();
    });
    this.rulePartsList.querySelectorAll('.rule-part').forEach(remove);
    var ttBlock = this.makeTimeTriggerBlock();
    ttBlock.addEventListener('mousedown', this.onTimeTriggerBlockDown.bind(this));
    ttBlock.addEventListener('touchstart', this.onTimeTriggerBlockDown.bind(this));
    this.rulePartsList.appendChild(ttBlock);
    var neBlock = this.makeNotificationEffectBlock();
    neBlock.addEventListener('mousedown', this.onNotificationEffectBlockDown.bind(this));
    neBlock.addEventListener('touchstart', this.onNotificationEffectBlockDown.bind(this));
    this.rulePartsList.appendChild(neBlock);
    this.gateway.readThings().then(function (things) {
      var _iteratorNormalCompletion4 = true;
      var _didIteratorError4 = false;
      var _iteratorError4 = undefined;

      try {
        for (var _iterator4 = things[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {
          var thing = _step4.value;

          var elt = _this2.makeDeviceBlock(thing);

          elt.addEventListener('mousedown', _this2.onDeviceBlockDown.bind(_this2, thing));
          elt.addEventListener('touchstart', _this2.onDeviceBlockDown.bind(_this2, thing));

          _this2.rulePartsList.appendChild(elt);
        }
      } catch (err) {
        _didIteratorError4 = true;
        _iteratorError4 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion4 && _iterator4.return != null) {
            _iterator4.return();
          }
        } finally {
          if (_didIteratorError4) {
            throw _iteratorError4;
          }
        }
      }

      _this2.onWindowResize();
    }).then(function () {
      return rulePromise;
    }).then(function (ruleDesc) {
      _this2.rule = new Rule(_this2.gateway, ruleDesc);

      _this2.ruleArea.querySelectorAll('.rule-part-container').forEach(remove);

      if (ruleDesc) {
        var dragHint = document.getElementById('drag-hint');
        var flexDir = window.getComputedStyle(dragHint).flexDirection;

        var areaRect = _this2.ruleArea.getBoundingClientRect();

        var rem = 10;
        var dpbRect = {
          width: 30 * rem,
          height: 10 * rem
        }; // Create DevicePropertyBlocks from trigger and effect if applicable

        var centerX = areaRect.width / 2 - dpbRect.width / 2;
        var centerY = areaRect.height / 2 - dpbRect.height / 2;

        if (!_this2.rule.trigger) {
          _this2.rule.trigger = {
            type: 'MultiTrigger',
            op: 'AND',
            triggers: []
          };
        }

        if (_this2.rule.trigger.type !== 'MultiTrigger') {
          _this2.rule.trigger = {
            type: 'MultiTrigger',
            op: 'AND',
            triggers: [_this2.rule.trigger]
          };
        }

        var triggers = _this2.rule.trigger.triggers;

        for (var i = 0; i < triggers.length; i++) {
          if (flexDir === 'column') {
            _this2.makeRulePartBlock('trigger', triggers[i], centerX, areaRect.height / 4 - dpbRect.height / 2);
          } else {
            _this2.makeRulePartBlock('trigger', triggers[i], areaRect.width / 4 - dpbRect.width / 2, centerY);
          }
        }

        if (!_this2.rule.effect) {
          _this2.rule.effect = {
            type: 'MultiEffect',
            effects: []
          };
        }

        if (_this2.rule.effect.type !== 'MultiEffect') {
          _this2.rule.effect = {
            type: 'MultiEffect',
            effects: [_this2.rule.effect]
          };
        }

        var effects = _this2.rule.effect.effects;

        for (var _i2 = 0; _i2 < effects.length; _i2++) {
          if (flexDir === 'column') {
            _this2.makeRulePartBlock('effect', effects[_i2], centerX, areaRect.height * 3 / 4 - dpbRect.height / 2);
          } else {
            _this2.makeRulePartBlock('effect', effects[_i2], areaRect.width * 3 / 4 - dpbRect.width / 2, centerY);
          }
        }
      }

      _this2.onWindowResize();

      _this2.onRuleChange();
    });
  },
  onWindowResize: function onWindowResize() {
    var scrollWidth = this.rulePartsList.scrollWidth;
    var boundingWidth = this.rulePartsList.getBoundingClientRect().width;
    var scrollLeft = document.getElementById('rule-parts-list-scroll-left');
    var scrollRight = document.getElementById('rule-parts-list-scroll-right');

    if (boundingWidth < scrollWidth) {
      scrollLeft.classList.remove('hidden');
      scrollRight.classList.remove('hidden');
    } else {
      scrollLeft.classList.add('hidden');
      scrollRight.classList.add('hidden');
    }

    if (this.rule) {
      var _this$partBlocksByRol2 = this.partBlocksByRole(),
          triggerBlocks = _this$partBlocksByRol2.triggerBlocks,
          effectBlocks = _this$partBlocksByRol2.effectBlocks;

      triggerBlocks.forEach(function (triggerBlock, index) {
        triggerBlock.snapToCenter(index, triggerBlocks.length);
      });
      effectBlocks.forEach(function (effectBlock, index) {
        effectBlock.snapToCenter(index, effectBlocks.length);
      });
      this.onPresentationChange();
    }
  },
  onScrollLeftClick: function onScrollLeftClick() {
    this.rulePartsList.scrollLeft -= 128;
  },
  onScrollRightClick: function onScrollRightClick() {
    this.rulePartsList.scrollLeft += 128;
  },
  startAnimate: function startAnimate() {
    if (this.animateTimeout) {
      clearTimeout(this.animateTimeout);
    }

    if (!this.rule || !this.rule.trigger || !this.rule.effect) {
      return;
    }

    this.animateStep = -1;
    this.ruleArea.querySelectorAll('.rule-part-block').forEach(function (elt) {
      elt.classList.add('inactive');
    });
    setTimeout(this.animate, this.animateDelay);
  },
  animate: function animate() {
    this.animateStep += 1;

    if (this.animateStep > this.rule.trigger.triggers.length) {
      this.stopAnimate();
      return;
    }

    var triggerBlocks = this.ruleArea.querySelectorAll('.rule-part-block.trigger');
    var effectBlocks = this.ruleArea.querySelectorAll('.rule-part-block.effect');
    var triggerPaths = this.connection.querySelectorAll('path.trigger');
    var effectPaths = this.connection.querySelectorAll('path.effect');
    var triggerCircles = this.connection.querySelectorAll('circle.trigger');
    var effectCircles = this.connection.querySelectorAll('circle.effect');
    var centerCircle = this.connection.querySelector('circle.center');

    function activate(index) {
      triggerBlocks[index].classList.remove('inactive');

      if (triggerPaths.length > 0) {
        triggerPaths[index].classList.add('active');
      }

      triggerCircles[index].classList.add('active');
    }

    function deactivate(index) {
      triggerBlocks[index].classList.add('inactive');

      if (triggerPaths.length > 0) {
        triggerPaths[index].classList.remove('active');
      }

      triggerCircles[index].classList.remove('active');
    }

    if (this.animateStep > 0) {
      deactivate(this.animateStep - 1);
    }

    var andActive = false;

    if (this.animateStep === this.rule.trigger.triggers.length) {
      for (var i = 0; i < triggerBlocks.length; i++) {
        activate(i);
      }

      andActive = true;
    } else {
      activate(this.animateStep);
    }

    if (andActive || this.rule.trigger.op === 'OR') {
      effectBlocks.forEach(function (block) {
        block.classList.remove('inactive');
      });

      if (centerCircle) {
        centerCircle.classList.add('active');
      }

      effectPaths.forEach(function (path) {
        path.classList.add('active');
      });
      effectCircles.forEach(function (circle) {
        circle.classList.add('active');
      });
    } else {
      effectBlocks.forEach(function (block) {
        block.classList.add('inactive');
      });

      if (centerCircle) {
        centerCircle.classList.remove('active');
      }

      effectPaths.forEach(function (path) {
        path.classList.remove('active');
      });
      effectCircles.forEach(function (circle) {
        circle.classList.remove('active');
      });
    }

    this.animateTimeout = setTimeout(this.animate, this.animateDelay);
  },
  stopAnimate: function stopAnimate() {
    this.ruleArea.querySelectorAll('.rule-part-block.inactive').forEach(function (elt) {
      elt.classList.remove('inactive');
    });
    this.connection.querySelectorAll('.active').forEach(function (elt) {
      elt.classList.remove('active');
    });
  }
};
window.RuleScreen = RuleScreen;
module.exports = RuleScreen;

/***/ }),

/***/ "./static/js/rules-screen.js":
/*!***********************************!*\
  !*** ./static/js/rules-screen.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__(/*! core-js/modules/es7.symbol.async-iterator */ "./node_modules/core-js/modules/es7.symbol.async-iterator.js");

__webpack_require__(/*! core-js/modules/es6.symbol */ "./node_modules/core-js/modules/es6.symbol.js");

__webpack_require__(/*! core-js/modules/web.dom.iterable */ "./node_modules/core-js/modules/web.dom.iterable.js");

/**
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.*
 */
var API = __webpack_require__(/*! ./api */ "./static/js/api.js");

var Gateway = __webpack_require__(/*! ./rules/Gateway */ "./static/js/rules/Gateway.js");

var RuleCard = __webpack_require__(/*! ./rules/RuleCard */ "./static/js/rules/RuleCard.js");

var page = __webpack_require__(/*! page */ "./node_modules/page/page.js");

'use strict'; // eslint-disable-next-line no-unused-vars


var RulesScreen = {
  init: function init() {
    this.createRuleButton = document.getElementById('create-rule-button');
    this.createRuleHint = document.getElementById('create-rule-hint');
    this.rulesList = document.getElementById('rules');
    this.gateway = new Gateway();
    this.nextId = 0;
    this.createRuleButton.addEventListener('click', function () {
      page('/rules/new');
    });
  },

  /**
   * @return {Promise<Array<RuleDescription>>}
   */
  readRules: function readRules() {
    var _this = this;

    return fetch('/rules', {
      headers: API.headers()
    }).then(function (res) {
      return res.json();
    }).then(function (fetchedRules) {
      _this.rulesList.querySelectorAll('.rule').forEach(function (elt) {
        elt.parentNode.removeChild(elt);
      });

      var _iteratorNormalCompletion = true;
      var _didIteratorError = false;
      var _iteratorError = undefined;

      try {
        for (var _iterator = fetchedRules[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var ruleDesc = _step.value;

          _this.addRuleCard(ruleDesc);
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return != null) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }

      if (fetchedRules.length === 0) {
        _this.createRuleHint.classList.remove('hidden');
      } else {
        _this.createRuleHint.classList.add('hidden');
      }
    });
  },

  /**
   * Add a rule, filling it with the data from a RuleDescription
   * @param {RuleDescription} desc
   */
  addRuleCard: function addRuleCard(desc) {
    var ruleElt = document.createElement('div');
    ruleElt.classList.add('rule');

    try {
      new RuleCard(this.gateway, ruleElt, this.nextId, desc);
    } catch (e) {
      console.error('Invalid rule', desc, e);
      this.nextId += 1;
      return;
    }

    this.nextId += 1;
    this.rulesList.appendChild(ruleElt);
  },
  show: function show() {
    var _this2 = this;

    document.getElementById('speech-wrapper').classList.remove('assistant');
    this.gateway.readThings().then(function () {
      return _this2.readRules();
    });
  }
};
module.exports = RulesScreen;

/***/ }),

/***/ "./static/js/rules/DevicePropertyBlock.js":
/*!************************************************!*\
  !*** ./static/js/rules/DevicePropertyBlock.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var PropertySelect = __webpack_require__(/*! ./PropertySelect */ "./static/js/rules/PropertySelect.js");

var RulePartBlock = __webpack_require__(/*! ./RulePartBlock */ "./static/js/rules/RulePartBlock.js");

var RuleUtils = __webpack_require__(/*! ./RuleUtils */ "./static/js/rules/RuleUtils.js");
/**
 * An element representing a device (`thing`) and a property. Can be
 * drag-and-dropped within `ruleArea` to change its role within `rule`
 * @constructor
 * @param {Element} ruleArea
 * @param {Function} onPresentationChange
 * @param {Function} onRuleChange
 * @param {Rule} rule
 * @param {ThingDescription} thing
 */


function DevicePropertyBlock(ruleArea, onPresentationChange, onRuleChange, thing) {
  RulePartBlock.call(this, ruleArea, onPresentationChange, onRuleChange, thing.name, RuleUtils.icon(thing));
  this.thing = thing;
  var propertyInfo = this.elt.querySelector('.rule-part-info');
  this.propertySelect = new PropertySelect(this, propertyInfo, thing);
}

DevicePropertyBlock.prototype = Object.create(RulePartBlock.prototype);
/**
 * On mouse up during a drag
 */

DevicePropertyBlock.prototype.onUp = function (clientX, clientY) {
  var originalRole = this.role;
  RulePartBlock.prototype.onUp.call(this, clientX, clientY);

  if (this.role !== originalRole) {
    this.propertySelect.updateOptionsForRole(this.role);
    this.rulePart = null;
    this.onRuleChange();
  }
};
/**
 * Initialize based on an existing partial rule
 */


DevicePropertyBlock.prototype.setRulePart = function (rulePart) {
  RulePartBlock.prototype.setRulePart.call(this, rulePart);
  this.propertySelect.updateOptionsForRole(this.role);
  this.propertySelect.selectByRuleFragment(rulePart);
};

module.exports = DevicePropertyBlock;

/***/ }),

/***/ "./static/js/rules/Draggable.js":
/*!**************************************!*\
  !*** ./static/js/rules/Draggable.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * A helper class for making Elements draggable
 * @constructor
 * @param {Element} elt - draggable element
 * @param {Function?} afterDown - listener for after the user starts a drag
 * @param {Function?} afterMove - listener for when the user moves during a drag
 * @param {Function?} afterUp - listener for after the drag stops
 */
function Draggable(elt, afterDown, afterMove, afterUp) {
  this.elt = elt;
  this.afterDown = afterDown;
  this.afterMove = afterMove;
  this.afterUp = afterUp;
  var parentRect = this.elt.parentNode.getBoundingClientRect();
  this.baseX = parentRect.left;
  this.baseY = parentRect.top;
  this.onDown = this.onDown.bind(this);
  this.onMove = this.onMove.bind(this);
  this.onUp = this.onUp.bind(this);
  elt.addEventListener('mousedown', this.onDown);
  elt.addEventListener('touchstart', this.onDown);
}
/**
 * @param {MouseEvent|TouchEvent} event
 * @return {{clientX: number, clientY: number}}
 */


Draggable.prototype.getClientCoords = function (event) {
  if (event.type.startsWith('touch')) {
    return {
      clientX: event.changedTouches[0].clientX,
      clientY: event.changedTouches[0].clientY
    };
  }

  return {
    clientX: event.clientX,
    clientY: event.clientY
  };
};

Draggable.prototype.onDown = function (event) {
  window.addEventListener('mousemove', this.onMove);
  window.addEventListener('touchmove', this.onMove);
  window.addEventListener('mouseup', this.onUp);
  window.addEventListener('touchend', this.onUp);
  event.preventDefault();

  if (this.afterDown) {
    var coords = this.getClientCoords(event);
    this.afterDown(coords.clientX, coords.clientY);
  }
};

Draggable.prototype.onMove = function (event) {
  var coords = this.getClientCoords(event);
  var x = coords.clientX - this.baseX;
  var y = coords.clientY - this.baseY;
  this.elt.style.transform = `translate(${x}px,${y}px)`;

  if (this.afterMove) {
    this.afterMove(coords.clientX, coords.clientY, x, y);
  }
};

Draggable.prototype.onUp = function (event) {
  window.removeEventListener('mousemove', this.onMove);
  window.removeEventListener('touchmove', this.onMove);
  window.removeEventListener('mouseup', this.onUp);
  window.removeEventListener('touchend', this.onUp);

  if (this.afterUp) {
    var coords = this.getClientCoords(event);
    this.afterUp(coords.clientX, coords.clientY);
  }
};

module.exports = Draggable;

/***/ }),

/***/ "./static/js/rules/Gateway.js":
/*!************************************!*\
  !*** ./static/js/rules/Gateway.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.*
 */
var API = __webpack_require__(/*! ../api */ "./static/js/api.js");
/**
 * A remote Gateway
 */


function Gateway() {
  this.things = null;
}
/**
 * Read the list of Things managed by the gateway
 * @return {Promise<Array<ThingDescription>>}
 */


Gateway.prototype.readThings = function () {
  var _this = this;

  return fetch('/things', {
    headers: API.headers()
  }).then(function (res) {
    return res.json();
  }).then(function (things) {
    _this.things = things;
    return things;
  });
};

module.exports = Gateway;

/***/ }),

/***/ "./static/js/rules/NotificationEffectBlock.js":
/*!****************************************************!*\
  !*** ./static/js/rules/NotificationEffectBlock.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var RulePartBlock = __webpack_require__(/*! ./RulePartBlock */ "./static/js/rules/RulePartBlock.js");
/**
 * An element representing a notification effect
 *
 * @constructor
 * @param {Element} ruleArea
 * @param {Function} onPresentationChange
 * @param {Function} onRuleChange
 */


function NotificationEffectBlock(ruleArea, onPresentationChange, onRuleUpdate) {
  var _this = this;

  RulePartBlock.call(this, ruleArea, onPresentationChange, onRuleUpdate, 'Notification', '/optimized-images/rule-icons/notification.svg');
  var rulePartInfo = this.elt.querySelector('.rule-part-info');
  var messageInputContainer = document.createElement('div');
  messageInputContainer.classList.add('message-input-container');
  var label = document.createElement('span');
  label.classList.add('message-input-label');
  label.textContent = 'Message';
  messageInputContainer.appendChild(label);
  this.messageInput = document.createElement('input');
  this.messageInput.type = 'text';
  messageInputContainer.appendChild(this.messageInput); // Disable dragging started by clicking input

  this.messageInput.addEventListener('mousedown', function (e) {
    e.stopPropagation();
  });
  this.messageInput.addEventListener('touchstart', function (e) {
    e.stopPropagation();
  });
  this.messageInput.addEventListener('change', function () {
    _this.rulePart = {
      effect: {
        type: 'NotificationEffect',
        message: _this.messageInput.value
      }
    };

    _this.onRuleChange();
  });
  rulePartInfo.appendChild(messageInputContainer);
}

NotificationEffectBlock.prototype = Object.create(RulePartBlock.prototype);
/**
 * Initialize based on an existing partial rule
 */

NotificationEffectBlock.prototype.setRulePart = function (rulePart) {
  this.rulePart = rulePart;

  if (rulePart.effect) {
    this.role = 'effect';
    this.rulePartBlock.classList.add('effect');
    this.messageInput.value = rulePart.effect.message;
  }

  if (rulePart.trigger) {
    throw new Error('NotificationEffectBlock can only be an effect');
  }
};

NotificationEffectBlock.prototype.onUp = function (clientX, clientY) {
  RulePartBlock.prototype.onUp.call(this, clientX, clientY);

  if (this.role === 'trigger') {
    this.remove();
  }

  if (this.role === 'effect') {
    this.rulePart = {
      effect: {
        type: 'NotificationEffect',
        message: this.messageInput.value
      }
    };
    this.onRuleChange();
  }
};

module.exports = NotificationEffectBlock;

/***/ }),

/***/ "./static/js/rules/PropertySelect.js":
/*!*******************************************!*\
  !*** ./static/js/rules/PropertySelect.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__(/*! core-js/modules/es6.regexp.match */ "./node_modules/core-js/modules/es6.regexp.match.js");

__webpack_require__(/*! core-js/modules/es6.object.assign */ "./node_modules/core-js/modules/es6.object.assign.js");

__webpack_require__(/*! core-js/modules/es7.symbol.async-iterator */ "./node_modules/core-js/modules/es7.symbol.async-iterator.js");

__webpack_require__(/*! core-js/modules/es6.symbol */ "./node_modules/core-js/modules/es6.symbol.js");

__webpack_require__(/*! core-js/modules/web.dom.iterable */ "./node_modules/core-js/modules/web.dom.iterable.js");

var Utils = __webpack_require__(/*! ../utils */ "./static/js/utils.js");
/**
 * A hand-coded <select>-like element which allows the selection of one of a
 * thing's properties. In a perfect world this would be a styled select, but
 * this is not a perfect world.
 * @constructor
 * @param {DevicePropertyBlock} devicePropertyBlock
 * @param {Element} parent
 * @param {ThingDescription} thing
 */


function PropertySelect(devicePropertyBlock, parent, thing) {
  this.devicePropertyBlock = devicePropertyBlock;
  this.thing = thing;
  this.role = '';
  this.elt = document.createElement('div');
  this.elt.classList.add('property-select');
  this.onClick = this.onClick.bind(this);
  this.elt.addEventListener('click', this.onClick);
  this.clearOptions(); // Disable dragging started by clicking property select

  this.elt.addEventListener('mousedown', function (e) {
    e.stopPropagation();
  });
  this.elt.addEventListener('touchstart', function (e) {
    e.stopPropagation();
  });
  parent.appendChild(this.elt);
}
/**
 * Reset the options list to only include the placeholder Select Property
 */


PropertySelect.prototype.clearOptions = function () {
  this.elt.innerHTML = '';
  this.addOption('Select Property', null, true);
};
/**
 * Add an option to the options list
 * @param {String} name - text content of option
 * @param {Object} ruleFragment - associated rule fragment with either trigger
 * or property defined
 * @param {boolean} selected - if the option is selected
 */


PropertySelect.prototype.addOption = function (name, ruleFragment, selected) {
  var _this = this;

  var elt = document.createElement('div');
  elt.classList.add('property-select-option');

  if (selected) {
    elt.classList.add('selected');
  }

  elt.dataset.ruleFragment = JSON.stringify(ruleFragment);
  var nameElt = document.createElement('span');
  nameElt.classList.add('property-select-name');
  nameElt.textContent = name;
  nameElt.title = name;
  elt.appendChild(nameElt);

  if (!ruleFragment) {
    this.elt.appendChild(elt);
    return;
  }

  var property = getProperty(ruleFragment);

  if (!property) {
    this.updateOption(elt);
    this.elt.appendChild(elt);
    return;
  }

  var stopPropagation = function stopPropagation(e) {
    e.stopPropagation();
  };

  if (property.type === 'number' || property.type === 'integer') {
    var ltOption, gtOption, eqOption;

    if (ruleFragment.trigger) {
      ltOption = document.createElement('option');
      ltOption.textContent = '<';
      ltOption.classList.add('lt-option');

      if (property.type === 'integer') {
        eqOption = document.createElement('option');
        eqOption.textContent = '=';
        eqOption.classList.add('eq-option');
      }

      gtOption = document.createElement('option');
      gtOption.textContent = '>';
      gtOption.classList.add('gt-option');
      var select = document.createElement('select');
      select.appendChild(ltOption);

      if (property.type === 'integer') {
        select.appendChild(eqOption);
      }

      select.appendChild(gtOption);
      select.addEventListener('click', stopPropagation);
      elt.appendChild(select);
    }

    var valueInput, valueSelect;

    if (property.hasOwnProperty('enum') && property.enum.length > 0) {
      valueSelect = document.createElement('select');
      valueSelect.classList.add('value-select');
      var _iteratorNormalCompletion = true;
      var _didIteratorError = false;
      var _iteratorError = undefined;

      try {
        for (var _iterator = property.enum[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var choice = _step.value;
          var option = document.createElement('option');
          option.value = choice;
          option.innerText = choice;
          valueSelect.appendChild(option);
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return != null) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }

      valueSelect.addEventListener('click', stopPropagation);
      elt.appendChild(valueSelect);
    } else {
      valueInput = document.createElement('input');
      valueInput.classList.add('value-input');
      valueInput.type = 'number';

      if (property.hasOwnProperty('multipleOf')) {
        valueInput.step = `${property.multipleOf}`;
      } else if (property.type === 'number') {
        valueInput.step = 'any';
      } else {
        valueInput.step = '1';
      }

      if (property.hasOwnProperty('minimum')) {
        valueInput.min = `${property.minimum}`;
      }

      if (property.hasOwnProperty('maximum')) {
        valueInput.max = `${property.maximum}`;
      }

      valueInput.addEventListener('click', stopPropagation);
      elt.appendChild(valueInput);
    }

    elt.addEventListener('change', function () {
      var value;

      if (valueInput) {
        value = parseFloat(valueInput.value);
      } else {
        value = parseFloat(valueSelect.options[valueSelect.selectedIndex].value);
      }

      if (property.hasOwnProperty('multipleOf')) {
        value = Math.round(value / property.multipleOf) * property.multipleOf;
      }

      if (property.type === 'integer') {
        value = parseInt(value);
      }

      if (property.hasOwnProperty('minimum')) {
        value = Math.max(value, property.minimum);
      }

      if (property.hasOwnProperty('maximum')) {
        value = Math.min(value, property.maximum);
      }

      if (valueInput) {
        valueInput.value = value;
      }

      if (ruleFragment.trigger) {
        if (ltOption.selected) {
          ruleFragment.trigger.levelType = 'LESS';
        } else if (gtOption.selected) {
          ruleFragment.trigger.levelType = 'GREATER';
        } else if (property.type === 'integer' && eqOption.selected) {
          ruleFragment.trigger.levelType = 'EQUAL';
        }

        ruleFragment.trigger.value = value;
      } else {
        ruleFragment.effect.value = value;
      }

      _this.devicePropertyBlock.rulePart = ruleFragment;

      _this.devicePropertyBlock.onRuleChange();

      elt.dataset.ruleFragment = JSON.stringify(ruleFragment);
    });
  } else if (property.type === 'string') {
    var _valueInput, _valueSelect;

    if (property.hasOwnProperty('enum') && property.enum.length > 0) {
      _valueSelect = document.createElement('select');

      _valueSelect.classList.add('value-select');

      var _iteratorNormalCompletion2 = true;
      var _didIteratorError2 = false;
      var _iteratorError2 = undefined;

      try {
        for (var _iterator2 = property.enum[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
          var _choice = _step2.value;

          var _option = document.createElement('option');

          _option.value = _choice;
          _option.innerText = _choice;

          _valueSelect.appendChild(_option);
        }
      } catch (err) {
        _didIteratorError2 = true;
        _iteratorError2 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {
            _iterator2.return();
          }
        } finally {
          if (_didIteratorError2) {
            throw _iteratorError2;
          }
        }
      }

      _valueSelect.addEventListener('click', stopPropagation);

      elt.appendChild(_valueSelect);
    } else {
      _valueInput = document.createElement('input');

      _valueInput.classList.add('value-input');

      if (property.name === 'color') {
        _valueInput.type = 'color';
      } else {
        _valueInput.type = 'text';
      }

      _valueInput.addEventListener('click', stopPropagation);

      elt.appendChild(_valueInput);
    }

    elt.addEventListener('change', function () {
      var value;

      if (_valueInput) {
        value = _valueInput.value;
      } else {
        value = _valueSelect.options[_valueSelect.selectedIndex].value;
      }

      var dpbRulePart = _this.devicePropertyBlock.rulePart;
      var selected = !dpbRulePart;

      if (ruleFragment.trigger) {
        ruleFragment.trigger.value = value;
        selected = selected || dpbRulePart.trigger && dpbRulePart.trigger.type === ruleFragment.trigger.type;
      } else {
        ruleFragment.effect.value = value;
        selected = selected || dpbRulePart.effect && dpbRulePart.effect.property.href === ruleFragment.effect.property.href;
      }

      elt.dataset.ruleFragment = JSON.stringify(ruleFragment);

      if (selected) {
        _this.devicePropertyBlock.rulePart = ruleFragment;

        _this.devicePropertyBlock.onRuleChange();
      }
    });
  }

  this.updateOption(elt);
  this.elt.appendChild(elt);
};

PropertySelect.prototype.updateOption = function (optionElt) {
  var ruleFragment = JSON.parse(optionElt.dataset.ruleFragment);

  if (!ruleFragment) {
    return;
  }

  var property = getProperty(ruleFragment);

  if (!property) {
    return;
  }

  var fragmentValue = ruleFragment.trigger ? ruleFragment.trigger.value : ruleFragment.effect.value;
  var input = optionElt.querySelector('.value-input') || optionElt.querySelector('.value-select');

  if (property.type === 'number' || property.type === 'integer') {
    if (ruleFragment.trigger) {
      if (ruleFragment.trigger.levelType === 'GREATER') {
        optionElt.querySelector('.gt-option').setAttribute('selected', '');
      } else if (property.type === 'integer' && ruleFragment.trigger.levelType === 'EQUAL') {
        optionElt.querySelector('.eq-option').setAttribute('selected', '');
      } else {
        optionElt.querySelector('.lt-option').setAttribute('selected', '');
      }
    }

    input.value = fragmentValue;
  } else if (property.name === 'color' || property.type === 'string') {
    input.value = fragmentValue;
  }
};
/**
 * Updates available options based on the PropertySelector's
 * DevicePropertyBlock's role.
 * @param {'trigger'|'effect'} role
 */


PropertySelect.prototype.updateOptionsForRole = function (role) {
  if (this.role === role) {
    return;
  }

  this.role = role;
  this.clearOptions();

  var _arr = Object.keys(this.thing.properties);

  for (var _i = 0; _i < _arr.length; _i++) {
    var propName = _arr[_i];
    var property = this.thing.properties[propName];

    if (!property.name) {
      property.name = propName;
    }

    var name = property.label || Utils.capitalize(property.name);

    if (role === 'trigger') {
      if (property.type === 'boolean') {
        var triggerOn = {
          type: 'BooleanTrigger',
          property: property,
          onValue: true,
          label: name
        };
        var triggerOff = Object.assign({}, triggerOn, {
          onValue: false
        });
        var onName = name;
        var offName = `Not ${onName}`;

        if (property.name === 'on') {
          onName = 'On';
          offName = 'Off';
        }

        this.addOption(onName, {
          trigger: triggerOn
        });
        this.addOption(offName, {
          trigger: triggerOff
        });
      } else if (property.type === 'string') {
        var value = '';

        if (property.name === 'color') {
          value = '#ffffff';
        }

        this.addOption(name, {
          trigger: {
            type: 'EqualityTrigger',
            property: property,
            value: value,
            label: name
          }
        });
      } else if (property.type === 'number' || property.type === 'integer') {
        var max = property.maximum || property.max || 0;
        var min = property.minimum || property.min || 0;

        var _value = Math.round((max + min) / 2);

        this.addOption(name, {
          trigger: {
            type: 'LevelTrigger',
            property: property,
            levelType: 'LESS',
            value: _value,
            label: name
          }
        });
      }
    } else if (role === 'effect') {
      if (property.readOnly) {
        continue;
      }

      if (property.type === 'boolean') {
        var effectOn = {
          type: 'PulseEffect',
          property: property,
          value: true,
          label: name
        };
        var effectOff = Object.assign({}, effectOn, {
          value: false
        });
        var _onName = name;
        var _offName = `Not ${_onName}`;

        if (property.name === 'on') {
          _onName = 'On';
          _offName = 'Off';
        }

        this.addOption(_onName, {
          effect: effectOn
        });
        this.addOption(_offName, {
          effect: effectOff
        });
      } else if (property.name === 'color') {
        this.addOption(name, {
          effect: {
            type: 'PulseEffect',
            property: property,
            value: '#ffffff',
            label: name
          }
        });
      } else if (property.type === 'string') {
        this.addOption(name, {
          effect: {
            type: 'PulseEffect',
            property: property,
            value: 'text',
            label: name
          }
        });
      } else if (property.type === 'number' || property.type === 'integer') {
        var _max = property.maximum || property.max || 0;

        var _min = property.minimum || property.min || 0;

        var _value2 = (_max + _min) / 2;

        this.addOption(name, {
          effect: {
            type: 'PulseEffect',
            property: property,
            value: _value2,
            label: name
          }
        });
      }
    }
  }

  if (role === 'trigger') {
    this.addEventOptions();
  } else if (role === 'effect') {
    this.addActionOptions();
  }
};

PropertySelect.prototype.addEventOptions = function () {
  var _arr2 = Object.keys(this.thing.events);

  for (var _i2 = 0; _i2 < _arr2.length; _i2++) {
    var name = _arr2[_i2];
    var eventTrigger = {
      type: 'EventTrigger',
      thing: {
        href: this.thing.href
      },
      event: name,
      label: this.thing.events[name].label || name
    };
    this.addOption(`Event "${eventTrigger.label}"`, {
      trigger: eventTrigger
    });
  }
};

PropertySelect.prototype.addActionOptions = function () {
  var _arr3 = Object.keys(this.thing.actions);

  for (var _i3 = 0; _i3 < _arr3.length; _i3++) {
    var name = _arr3[_i3];

    if (this.thing.actions[name].input) {
      continue;
    }

    var actionEffect = {
      type: 'ActionEffect',
      thing: {
        href: this.thing.href
      },
      action: name,
      label: this.thing.actions[name].label || name,
      parameters: {}
    };
    this.addOption(`Action "${actionEffect.label}"`, {
      effect: actionEffect
    });
  }
};
/**
 * Select an option when the user clicks it
 * @param {Event} e
 */


PropertySelect.prototype.onClick = function (e) {
  this.elt.classList.toggle('open');

  if (!this.elt.classList.contains('open')) {
    var target = e.target;

    if (!target.classList.contains('property-select-option')) {
      target = target.parentNode;
    } // We were open, so that was a click to select


    this.select(target);
    var rulePart = JSON.parse(target.dataset.ruleFragment);

    if (!rulePart) {
      return;
    }

    this.devicePropertyBlock.rulePart = rulePart;
    this.devicePropertyBlock.elt.classList.remove('open');
    this.devicePropertyBlock.onRuleChange();
  } else {
    this.devicePropertyBlock.elt.classList.add('open');
  }
};

function propertyEqual(a, b) {
  if (!a && !b) {
    return true;
  }

  return a && b && a.type === b.type && a.name === b.name && a.href === b.href;
}

function getProperty(ruleFragment) {
  return ruleFragment.trigger ? ruleFragment.trigger.property : ruleFragment.effect.property;
}

function ruleFragmentEqual(a, b) {
  if (!!a !== !!b) {
    return false;
  }

  if (a.trigger && !b.trigger) {
    return false;
  }

  if (a.effect && !b.effect) {
    return false;
  }

  var aPart = a.trigger || a.effect;
  var bPart = b.trigger || b.effect;
  var aProperty = getProperty(a);
  var bProperty = getProperty(b);

  if (!propertyEqual(aProperty, bProperty)) {
    return false;
  }

  if (aPart.type.match(/(Set|Pulse)Effect/)) {
    if (!bPart.type.match(/(Set|Pulse)Effect/)) {
      return false;
    }
  } else if (aPart.type !== bPart.type) {
    return false;
  }

  if (aProperty && aProperty.type === 'boolean') {
    if (a.trigger) {
      return aPart.onValue === bPart.onValue;
    } else {
      return aPart.value === bPart.value;
    }
  }

  if (aPart.type === 'EventTrigger') {
    return aPart.event === bPart.event;
  }

  if (aPart.type === 'ActionEffect') {
    return aPart.action === bPart.action;
  }

  return true;
}
/**
 * Select an option by value
 * @param {Object} ruleFragment
 */


PropertySelect.prototype.selectByRuleFragment = function (ruleFragment) {
  var elements = this.elt.querySelectorAll('.property-select-option');
  var _iteratorNormalCompletion3 = true;
  var _didIteratorError3 = false;
  var _iteratorError3 = undefined;

  try {
    for (var _iterator3 = elements[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
      var optionElt = _step3.value;
      var optionRuleFragment = JSON.parse(optionElt.dataset.ruleFragment);

      if (ruleFragmentEqual(optionRuleFragment, ruleFragment)) {
        optionElt.dataset.ruleFragment = JSON.stringify(ruleFragment);
        this.updateOption(optionElt);
        this.select(optionElt);
        return;
      }
    }
  } catch (err) {
    _didIteratorError3 = true;
    _iteratorError3 = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion3 && _iterator3.return != null) {
        _iterator3.return();
      }
    } finally {
      if (_didIteratorError3) {
        throw _iteratorError3;
      }
    }
  }
};
/**
 * Select a specific option
 * @param {Element} option - option's corresponding element
 */


PropertySelect.prototype.select = function (optionElt) {
  var selected = this.elt.querySelector('.selected');

  if (selected) {
    if (!JSON.parse(selected.dataset.ruleFragment)) {
      if (selected === optionElt) {
        return;
      }

      this.elt.removeChild(selected);
    } else {
      selected.classList.remove('selected');
    }
  }

  optionElt.classList.add('selected');
};

module.exports = PropertySelect;

/***/ }),

/***/ "./static/js/rules/Rule.js":
/*!*********************************!*\
  !*** ./static/js/rules/Rule.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__(/*! core-js/modules/es7.symbol.async-iterator */ "./node_modules/core-js/modules/es7.symbol.async-iterator.js");

__webpack_require__(/*! core-js/modules/es6.symbol */ "./node_modules/core-js/modules/es6.symbol.js");

__webpack_require__(/*! core-js/modules/web.dom.iterable */ "./node_modules/core-js/modules/web.dom.iterable.js");

__webpack_require__(/*! core-js/modules/es6.promise */ "./node_modules/core-js/modules/es6.promise.js");

/**
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.*
 */
var API = __webpack_require__(/*! ../api */ "./static/js/api.js");

var RuleUtils = __webpack_require__(/*! ./RuleUtils */ "./static/js/rules/RuleUtils.js");

var TimeTriggerBlock = __webpack_require__(/*! ./TimeTriggerBlock */ "./static/js/rules/TimeTriggerBlock.js");
/**
 * Model of a Rule loaded from the Rules Engine
 * @constructor
 * @param {Gateway} gateway - The remote gateway to which to talk
 * @param {RuleDescription?} desc - Description of the rule to load
 * @param {Function?} onUpdate - Listener for when update is called
 */


function Rule(gateway, desc, onUpdate) {
  this.gateway = gateway;
  this.onUpdate = onUpdate;

  if (desc) {
    this.id = desc.id;
    this.enabled = desc.enabled;

    if (desc.name) {
      this.name = desc.name;
    } else {
      this.name = 'Rule Name';
    }

    this.trigger = desc.trigger;
    this.effect = desc.effect;
  } else {
    this.enabled = true;
  }
}
/**
 * Validate and save the rule
 * @return {Promise}
 */


Rule.prototype.update = function () {
  var _this = this;

  if (this.onUpdate) {
    this.onUpdate();
  }

  var desc = this.toDescription();

  if (!desc) {
    return Promise.reject('invalid description');
  }

  var fetchOptions = {
    headers: API.headers(),
    method: 'PUT',
    body: JSON.stringify(desc)
  };
  fetchOptions.headers['Content-Type'] = 'application/json';
  var request = null;

  if (typeof this.id !== 'undefined') {
    request = fetch(`/rules/${encodeURIComponent(this.id)}`, fetchOptions);
  } else {
    fetchOptions.method = 'POST';
    request = fetch('/rules/', fetchOptions).then(function (res) {
      return res.json();
    }).then(function (rule) {
      _this.id = rule.id;
    });
  }

  return request;
};
/**
 * Delete the rule
 * @return {Promise}
 */


Rule.prototype.delete = function () {
  var fetchOptions = {
    headers: API.headers(),
    method: 'DELETE'
  };

  if (typeof this.id === 'undefined') {
    return;
  }

  return fetch(`/rules/${encodeURIComponent(this.id)}`, fetchOptions);
};
/**
 * Convert this rule into a serialized description
 * @return {RuleDescription?} description or null if not a valid rule
 */


Rule.prototype.toDescription = function () {
  if (!this.trigger || !this.effect) {
    return null;
  }

  return {
    enabled: this.enabled,
    name: this.name,
    trigger: this.trigger,
    effect: this.effect
  };
};
/**
 * Convert a trigger's decsription to a human-readable string
 * @param {Trigger} trigger
 * @param {boolean} html - whether to generate an interface
 * @return {String?}
 */


Rule.prototype.singleTriggerToHumanRepresentation = function (trigger, html) {
  if (!trigger) {
    return null;
  }

  if (trigger.type === 'MultiTrigger') {
    var _triggerStr = '';

    for (var i = 0; i < trigger.triggers.length; i++) {
      if (i > 0) {
        if (trigger.triggers.length > 2) {
          _triggerStr += ',';
        }

        _triggerStr += ' ';

        if (i === trigger.triggers.length - 1) {
          if (html) {
            var andSelected = trigger.op === 'AND' ? 'selected' : '';
            var orSelected = trigger.op === 'OR' ? 'selected' : '';
            var selectHTML = `
              <span class="triangle-select-container">
                <select class="triangle-select rule-trigger-select">
                  <option ${andSelected}>and</option>
                  <option ${orSelected}>or</option>
                </select>
              </span>
            `;
            _triggerStr += selectHTML;
          } else {
            _triggerStr += trigger.op === 'AND' ? 'and ' : 'or ';
          }
        }
      }

      var singleStr = this.singleTriggerToHumanRepresentation(trigger.triggers[i], html);

      if (!singleStr) {
        return null;
      }

      _triggerStr += singleStr;
    }

    return _triggerStr;
  }

  if (trigger.type === 'TimeTrigger') {
    return `the time of day is ${TimeTriggerBlock.utcToLocal(trigger.time)}`;
  }

  if (trigger.type === 'EventTrigger') {
    var _triggerThing = this.gateway.things.filter(RuleUtils.byHref(trigger.thing.href))[0];

    if (!_triggerThing) {
      return null;
    }

    return `${_triggerThing.name} event "${trigger.label}" occurs`;
  }

  var triggerThing = this.gateway.things.filter(RuleUtils.byProperty(trigger.property))[0];

  if (!triggerThing) {
    return null;
  }

  var triggerStr = `${triggerThing.name} `;

  if (trigger.type === 'BooleanTrigger') {
    triggerStr += 'is ';

    if (!trigger.onValue) {
      triggerStr += 'not ';
    }

    if (trigger.property.name === 'on') {
      triggerStr += 'on';
    } else {
      triggerStr += trigger.label;
    }
  } else if (trigger.type === 'LevelTrigger') {
    triggerStr += `${trigger.label} is `;

    if (trigger.levelType === 'LESS') {
      triggerStr += 'less than ';
    } else if (trigger.levelType === 'EQUAL') {
      triggerStr += 'equal to ';
    } else {
      triggerStr += 'greater than ';
    }

    triggerStr += trigger.value;
  } else if (trigger.type === 'EqualityTrigger') {
    triggerStr += `${trigger.label} is ${trigger.value}`;
  } else {
    console.error('Unknown trigger type', trigger);
    return null;
  }

  return triggerStr;
};
/**
 * Convert an effect's description to a human-readable string
 * @param {Effect} effect
 * @return {String?}
 */


Rule.prototype.singleEffectToHumanRepresentation = function (effect) {
  if (!effect) {
    return null;
  }

  if (effect.type === 'MultiEffect') {
    var _effectStr = '';

    for (var i = 0; i < effect.effects.length; i++) {
      if (i > 0) {
        if (effect.effects.length > 2) {
          _effectStr += ',';
        }

        _effectStr += ' ';

        if (i === effect.effects.length - 1) {
          _effectStr += 'and ';
        }
      }

      var singleStr = this.singleEffectToHumanRepresentation(effect.effects[i]);

      if (!singleStr) {
        return null;
      }

      _effectStr += singleStr;
    }

    return _effectStr;
  }

  if (effect.type === 'NotificationEffect') {
    return `notify with message "${effect.message}"`;
  }

  if (effect.type === 'ActionEffect') {
    var _effectThing = this.gateway.things.filter(RuleUtils.byHref(effect.thing.href))[0];

    if (!_effectThing) {
      return null;
    }

    return `do ${_effectThing.name} action "${effect.label}"`;
  }

  var effectThing = this.gateway.things.filter(RuleUtils.byProperty(effect.property))[0];

  if (!effectThing) {
    return null;
  }

  var effectStr = '';

  if (effect.property.name === 'on') {
    effectStr = `turn ${effectThing.name} `;

    if (effect.value) {
      effectStr += 'on';
    } else {
      effectStr += 'off';
    }
  } else {
    effectStr += `set ${effectThing.name} ${effect.label} to `;
    effectStr += effect.value;
  }

  return effectStr;
};
/**
 * Convert the rule's description to human-readable plain text
 * @return {String}
 */


Rule.prototype.toHumanDescription = function () {
  return this.toHumanRepresentation(false);
};
/**
 * Convert the rule's description to a human-readable interface
 * @return {String}
 */


Rule.prototype.toHumanInterface = function () {
  return this.toHumanRepresentation(true);
};
/**
 * Convert the rule's description to a human-readable string
 * @param {boolean} html - whether an html interface
 * @return {String}
 */


Rule.prototype.toHumanRepresentation = function (html) {
  var triggerStr = '???';
  var effectStr = '???';

  if (this.trigger) {
    triggerStr = this.singleTriggerToHumanRepresentation(this.trigger, html) || triggerStr;
  }

  if (this.effect) {
    effectStr = this.singleEffectToHumanRepresentation(this.effect) || effectStr;
  }

  var effectExists = this.effect && this.effect.effects && this.effect.effects.length > 0;
  var permanent = true; // Default to permanent

  if (effectExists) {
    var _iteratorNormalCompletion = true;
    var _didIteratorError = false;
    var _iteratorError = undefined;

    try {
      for (var _iterator = this.effect.effects[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var effect = _step.value;

        if (effect.type === 'SetEffect') {
          permanent = true;
          break;
        }

        if (effect.type === 'PulseEffect') {
          permanent = false;
          break;
        }
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator.return != null) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }
  }

  var predicate = permanent ? 'If' : 'While';

  if (html) {
    var permSelected = permanent ? 'selected' : '';
    var tempSelected = permanent ? '' : 'selected';
    predicate = `<span class="triangle-select-container">
      <select class="triangle-select rule-effect-select">
        <option ${permSelected}>If</option>
        <option ${tempSelected}>While</option>
      </select>
    </span>`;
  }

  return `${predicate} ${triggerStr}, ${effectStr}`;
};
/**
 * Set the trigger of the Rule, updating the server model if valid
 * @return {Promise}
 */


Rule.prototype.setTrigger = function (trigger) {
  this.trigger = trigger;
  return this.update();
};
/**
 * Set the effect of the Rule, updating the server model if valid
 * @return {Promise}
 */


Rule.prototype.setEffect = function (effect) {
  this.effect = effect;
  return this.update();
};
/**
 * Whether the rule is a valid, functioning rule
 * @return {boolean}
 */


Rule.prototype.valid = function () {
  return !!(this.singleTriggerToHumanRepresentation(this.trigger, false) && this.singleEffectToHumanRepresentation(this.effect, false));
};

module.exports = Rule;

/***/ }),

/***/ "./static/js/rules/RuleCard.js":
/*!*************************************!*\
  !*** ./static/js/rules/RuleCard.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var Rule = __webpack_require__(/*! ./Rule */ "./static/js/rules/Rule.js");

var RuleUtils = __webpack_require__(/*! ./RuleUtils */ "./static/js/rules/RuleUtils.js");

var page = __webpack_require__(/*! page */ "./node_modules/page/page.js");

var Utils = __webpack_require__(/*! ../utils */ "./static/js/utils.js");
/**
 * A summary of a Rule in card format
 * @constructor
 * @param {Gateway} gateway - global Gateway with which to communicate
 * @param {Element} elt - element into which to put the card
 * @param {String} id - unique identifier of the rule card
 * @param {RuleDescription} desc - rule description to represent
 */


function RuleCard(gateway, elt, id, desc) {
  this.elt = elt;
  this.id = id;
  this.rule = new Rule(gateway, desc);
  var checked = this.rule.enabled ? 'checked' : '';
  var invalidWarning = '';

  if (!this.rule.valid()) {
    checked = '';
    invalidWarning = '[INVALID] ';
    this.elt.classList.add('invalid');
  }

  var iconTrigger = '/optimized-images/rule-icons/thing.svg';
  var iconEffect = '/optimized-images/rule-icons/thing.svg';

  if (this.rule.trigger) {
    var trigger = this.rule.trigger;

    if (trigger.triggers && trigger.triggers.length > 0) {
      trigger = trigger.triggers[0];
    }

    var thingTrigger = RuleUtils.thingFromPart(gateway, trigger);

    if (thingTrigger) {
      iconTrigger = RuleUtils.icon(thingTrigger);
    } else if (trigger.type === 'TimeTrigger') {
      iconTrigger = '/optimized-images/rule-icons/clock.svg';
    }
  }

  if (this.rule.effect) {
    var effect = this.rule.effect;

    if (effect.effects && effect.effects.length > 0) {
      effect = effect.effects[0];
    }

    var thingEffect = RuleUtils.thingFromPart(gateway, effect);

    if (thingEffect) {
      iconEffect = RuleUtils.icon(thingEffect);
    }
  }

  this.elt.innerHTML = `
    <div class="rule-edit-overlay">
      <div class="rule-delete-button"></div>
      <input class="rule-edit-button" type="button" value="Edit Rule"/>
      <div class="rule-delete-dialog">
        <p>Are you sure you want to remove this rule permanently?</p>
        <input class="rule-delete-cancel-button" type="button"
               value="Cancel"/>
        <input class="rule-delete-confirm-button" type="button"
               value="Remove Rule"/>
      </div>
    </div>
    <div class="rule-preview">
      <div class="rule-part-block trigger">
        <img class="rule-part-icon" src="${iconTrigger}"/>
      </div>
      <div class="rule-part-block effect">
        <img class="rule-part-icon" src="${iconEffect}"/>
      </div>
    </div>
    <div class="rule-info">
      <h3>${invalidWarning}${Utils.escapeHtml(this.rule.name)}</h3>
      <p>${Utils.escapeHtml(this.rule.toHumanDescription())}</p>
    </div>
    <form class="rule-switch switch">
      <input type="checkbox" id="rule-switch-${Utils.escapeHtml(id)}"
             class="switch-checkbox" ${checked}/>
      <label class="switch-slider" for="rule-switch-${Utils.escapeHtml(id)}">
      </label>
    </form>
  `;
  this.onEditButtonClick = this.onEditButtonClick.bind(this);
  this.onDeleteButtonClick = this.onDeleteButtonClick.bind(this);
  this.onDeleteCancelClick = this.onDeleteCancelClick.bind(this);
  this.onDeleteConfirmClick = this.onDeleteConfirmClick.bind(this);
  this.onEnabledCheckboxChange = this.onEnabledCheckboxChange.bind(this);
  this.editButton = this.elt.querySelector('.rule-edit-button');
  this.editButton.addEventListener('click', this.onEditButtonClick);
  this.deleteButton = this.elt.querySelector('.rule-delete-button');
  this.deleteButton.addEventListener('click', this.onDeleteButtonClick);
  this.deleteCancel = this.elt.querySelector('.rule-delete-cancel-button');
  this.deleteCancel.addEventListener('click', this.onDeleteCancelClick);
  this.deleteConfirm = this.elt.querySelector('.rule-delete-confirm-button');
  this.deleteConfirm.addEventListener('click', this.onDeleteConfirmClick);
  this.enabledCheckbox = this.elt.querySelector('.switch-checkbox');
  this.enabledCheckbox.addEventListener('change', this.onEnabledCheckboxChange);
  this.editOverlay = this.elt.querySelector('.rule-edit-overlay');
}

RuleCard.prototype.onEditButtonClick = function () {
  page(`/rules/${encodeURIComponent(this.rule.id)}`);
};

RuleCard.prototype.onDeleteButtonClick = function () {
  this.editOverlay.classList.add('delete');
};

RuleCard.prototype.onDeleteCancelClick = function () {
  this.editOverlay.classList.remove('delete');
};

RuleCard.prototype.onDeleteConfirmClick = function () {
  this.rule.delete();
  this.elt.parentNode.removeChild(this.elt);
};

RuleCard.prototype.onEnabledCheckboxChange = function () {
  if (this.enabledCheckbox.checked) {
    this.rule.enabled = true;
  } else {
    this.rule.enabled = false;
  }

  this.rule.update();
};

module.exports = RuleCard;

/***/ }),

/***/ "./static/js/rules/RulePartBlock.js":
/*!******************************************!*\
  !*** ./static/js/rules/RulePartBlock.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var Draggable = __webpack_require__(/*! ./Draggable */ "./static/js/rules/Draggable.js");

var Utils = __webpack_require__(/*! ../utils */ "./static/js/utils.js");
/**
 * An element representing a component of a rule.  Drag-and-dropped within
 * `ruleArea` to change its role within `rule`
 * @constructor
 * @param {Element} ruleArea
 * @param {Function} onPresentationChange
 * @param {Function} onRuleChange
 * @param {String} name
 * @param {String} icon
 * @param {number} x
 * @param {number} y
 */


function RulePartBlock(ruleArea, onPresentationChange, onRuleChange, name, icon) {
  this.onPresentationChange = onPresentationChange;
  this.onRuleChange = onRuleChange;
  this.role = '';
  this.rulePart = null;
  this.elt = document.createElement('div');
  this.elt.classList.add('rule-part-container');
  this.elt.innerHTML = `<div class="rule-part-block">
      <img class="rule-part-icon" src="${encodeURI(icon)}"/>
    </div>
    <div class="rule-part-info">
      <h3 class="rule-part-name">
      ${Utils.escapeHtml(name)}
      </h3>
    </div>`;
  this.rulePartBlock = this.elt.querySelector('.rule-part-block');
  this.ruleArea = ruleArea;
  this.onDown = this.onDown.bind(this);
  this.onMove = this.onMove.bind(this);
  this.onUp = this.onUp.bind(this);
  this.ruleArea.appendChild(this.elt);
  this.draggable = new Draggable(this.elt, this.onDown, this.onMove, this.onUp);
  var dragHint = document.getElementById('drag-hint');
  this.flexDir = window.getComputedStyle(dragHint).flexDirection;
}
/**
 * On mouse down during a drag
 */


RulePartBlock.prototype.onDown = function () {
  var openSelector = this.elt.querySelector('.open');

  if (openSelector) {
    openSelector.classList.remove('open');
  }

  this.resetState = {
    transform: this.elt.style.transform
  };
  var deleteArea = document.getElementById('delete-area');
  deleteArea.classList.add('delete-active');
  this.elt.classList.add('dragging');
  this.ruleArea.classList.add('drag-location-hint');
  this.onPresentationChange();
};
/**
 * On mouse move during a drag
 */


RulePartBlock.prototype.onMove = function (clientX, clientY, relX, relY) {
  var ruleAreaRect = this.ruleArea.getBoundingClientRect();
  var deleteArea = document.getElementById('delete-area');
  var deleteAreaHeight = deleteArea.getBoundingClientRect().height;

  if (clientY > window.innerHeight - deleteAreaHeight) {
    this.rulePartBlock.classList.remove('trigger');
    this.rulePartBlock.classList.remove('effect');
  } else if (this.flexDir === 'row') {
    if (relX < ruleAreaRect.width / 2) {
      this.rulePartBlock.classList.add('trigger');
      this.rulePartBlock.classList.remove('effect');
    } else {
      this.rulePartBlock.classList.remove('trigger');
      this.rulePartBlock.classList.add('effect');
    }
  } else if (this.flexDir === 'column') {
    if (relY < ruleAreaRect.height / 2) {
      this.rulePartBlock.classList.add('trigger');
      this.rulePartBlock.classList.remove('effect');
    } else {
      this.rulePartBlock.classList.remove('trigger');
      this.rulePartBlock.classList.add('effect');
    }
  }

  this.snapToGrid(relX, relY);
};
/**
 * Snap coordinates to a grid
 * @param {number} relX - x coordinate relative to ruleArea
 * @param {number} relY - y coordinate relative to ruleArea
 */


RulePartBlock.prototype.snapToGrid = function (relX, relY) {
  var grid = 40;
  var x = Math.floor((relX - grid / 2) / grid) * grid + grid / 2;
  var y = Math.floor((relY - grid / 2) / grid) * grid + grid / 2;

  if (y < grid / 2) {
    y = grid / 2;
  }

  this.elt.style.transform = `translate(${x}px,${y}px)`;
};
/**
 * On mouse up during a drag
 */


RulePartBlock.prototype.onUp = function (clientX, clientY) {
  this.elt.classList.remove('dragging');
  var deleteArea = document.getElementById('delete-area');
  var deleteAreaHeight = deleteArea.getBoundingClientRect().height;
  deleteArea.classList.remove('delete-active');
  this.ruleArea.classList.remove('drag-location-hint');

  if (this.rulePartBlock.classList.contains('trigger')) {
    this.role = 'trigger';
  } else if (this.rulePartBlock.classList.contains('effect')) {
    this.role = 'effect';
  }

  if (clientY > window.innerHeight - deleteAreaHeight) {
    this.remove();
  }

  this.onRuleChange();
};
/**
 * Reset the RulePartBlock to before the current drag started
 */


RulePartBlock.prototype.reset = function () {
  this.elt.style.transform = this.resetState.transform;

  if (this.role === 'trigger') {
    this.rulePartBlock.classList.add('trigger');
    this.rulePartBlock.classList.remove('effect');
  } else if (this.role === 'effect') {
    this.rulePartBlock.classList.remove('trigger');
    this.rulePartBlock.classList.add('effect');
  } else {
    this.remove();
  }
};
/**
 * Initialize based on an existing partial rule
 */


RulePartBlock.prototype.setRulePart = function (rulePart) {
  this.rulePart = rulePart;

  if (rulePart.trigger) {
    this.role = 'trigger';
    this.rulePartBlock.classList.add('trigger');
  } else if (rulePart.effect) {
    this.role = 'effect';
    this.rulePartBlock.classList.add('effect');
  }
};
/**
 * Snap to the center of the current area, aligning with siblings if part of
 * a multi effect. If centered relative to a list of siblings, index and length
 * specify this effect's relative location
 *
 * @param {number?} index - Centered relative to a list
 * @param {number?} length
 */


RulePartBlock.prototype.snapToCenter = function (index, length) {
  if (!this.role) {
    return;
  }

  var dragHint = document.getElementById('drag-hint');
  var flexDir = window.getComputedStyle(dragHint).flexDirection; // Throw away our current coords and snap to centered on the grid

  var areaRect = this.ruleArea.getBoundingClientRect();
  var rect = this.elt.getBoundingClientRect();

  if (typeof index === 'undefined') {
    index = 0;
    length = 1;
  }

  var ratio = (index + 1) / (length + 1);

  if (flexDir === 'row') {
    var centerY = areaRect.height * ratio - rect.height / 2;
    var roleX = areaRect.width / 4 - rect.width / 2;

    if (this.role === 'effect') {
      roleX = areaRect.width * 3 / 4 - rect.width / 2;
    }

    this.snapToGrid(roleX, centerY);
  } else if (flexDir === 'column') {
    var centerX = areaRect.width * ratio - rect.width / 2;
    var roleY = areaRect.height / 4 - rect.height / 2;

    if (this.role === 'effect') {
      roleY = areaRect.height * 3 / 4 - rect.height / 2;
    }

    this.snapToGrid(centerX, roleY);
  }

  this.flexDir = flexDir;
};
/**
 * Remove the RulePartBlock from the DOM and from its associated rule
 */


RulePartBlock.prototype.remove = function () {
  this.ruleArea.removeChild(this.elt);
  this.rulePart = null;
  this.role = 'removed';
  this.onRuleChange();
};

module.exports = RulePartBlock;

/***/ }),

/***/ "./static/js/rules/RuleUtils.js":
/*!**************************************!*\
  !*** ./static/js/rules/RuleUtils.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var RuleUtils = {
  icon: function icon(description) {
    if (description.selectedCapability) {
      switch (description.selectedCapability) {
        case 'OnOffSwitch':
          return '/optimized-images/rule-icons/on_off_switch.svg';

        case 'MultiLevelSwitch':
          return '/optimized-images/rule-icons/multi_level_switch.svg';

        case 'ColorControl':
          return '/optimized-images/rule-icons/color_control.svg';

        case 'EnergyMonitor':
          return '/optimized-images/rule-icons/energy_monitor.svg';

        case 'BinarySensor':
          return '/optimized-images/rule-icons/binary_sensor.svg';

        case 'MultiLevelSensor':
          return '/optimized-images/rule-icons/multi_level_sensor.svg';

        case 'SmartPlug':
          return '/optimized-images/rule-icons/smart_plug.svg';

        case 'Light':
          return '/optimized-images/rule-icons/light.svg';

        case 'DoorSensor':
          return '/optimized-images/rule-icons/door_sensor.svg';

        case 'MotionSensor':
          return '/optimized-images/rule-icons/motion_sensor.svg';

        case 'PushButton':
          return '/optimized-images/rule-icons/push_button.svg';

        default:
          return description.iconHref || '/optimized-images/rule-icons/thing.svg';
      }
    } else {
      switch (description.type) {
        case 'onOffSwitch':
          return '/optimized-images/rule-icons/on_off_switch.svg';

        case 'onOffLight':
        case 'onOffColorLight':
        case 'dimmableLight':
        case 'dimmableColorLight':
          return '/optimized-images/rule-icons/light.svg';

        case 'binarySensor':
          return '/optimized-images/rule-icons/binary_sensor.svg';

        case 'multiLevelSensor':
          return '/optimized-images/rule-icons/multi_level_sensor.svg';

        case 'multiLevelSwitch':
          return '/optimized-images/rule-icons/multi_level_switch.svg';

        case 'smartPlug':
          return '/optimized-images/rule-icons/smart_plug.svg';

        default:
          return description.iconHref || '/optimized-images/rule-icons/thing.svg';
      }
    }
  },
  // Helper function for selecting the thing corresponding to a property
  byProperty: function byProperty(property) {
    return function (option) {
      if (!property) {
        console.warn('byProperty property undefined', new Error().stack);
        return false;
      }

      var optProp = option.properties[property.name];
      return optProp && optProp.href === property.href;
    };
  },
  // Helper function for selecting the thing corresponding to an href
  byHref: function byHref(href) {
    return function (thing) {
      return thing.href === href;
    };
  },
  thingFromPart: function thingFromPart(gateway, part) {
    var thing = null;

    if (part.type === 'EventTrigger' || part.type === 'ActionEffect') {
      thing = gateway.things.filter(RuleUtils.byHref(part.thing.href))[0];
    } else if (part.property) {
      thing = gateway.things.filter(RuleUtils.byProperty(part.property))[0];
    }

    return thing;
  }
};
module.exports = RuleUtils;

/***/ }),

/***/ "./static/js/rules/TimeTriggerBlock.js":
/*!*********************************************!*\
  !*** ./static/js/rules/TimeTriggerBlock.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__(/*! core-js/modules/es6.regexp.split */ "./node_modules/core-js/modules/es6.regexp.split.js");

__webpack_require__(/*! core-js/modules/es6.regexp.to-string */ "./node_modules/core-js/modules/es6.regexp.to-string.js");

__webpack_require__(/*! core-js/modules/es7.string.pad-start */ "./node_modules/core-js/modules/es7.string.pad-start.js");

var RulePartBlock = __webpack_require__(/*! ./RulePartBlock */ "./static/js/rules/RulePartBlock.js");
/**
 * An element representing a time-based trigger
 *
 * @constructor
 * @param {Element} ruleArea
 * @param {Function} onPresentationChange
 * @param {Function} onRuleChange
 */


function TimeTriggerBlock(ruleArea, onPresentationChange, onRuleUpdate) {
  var _this = this;

  RulePartBlock.call(this, ruleArea, onPresentationChange, onRuleUpdate, 'Time of day', '/optimized-images/rule-icons/clock.svg');
  var rulePartInfo = this.elt.querySelector('.rule-part-info');
  this.timeInput = document.createElement('input');
  this.timeInput.type = 'time';
  var date = new Date();
  var hours = TimeTriggerBlock.leftPad(date.getHours());
  var minutes = TimeTriggerBlock.leftPad(date.getMinutes());
  this.timeInput.value = `${hours}:${minutes}`;
  this.timeInput.classList.add('time-input'); // Disable dragging started by clicking time input

  this.timeInput.addEventListener('mousedown', function (e) {
    e.stopPropagation();
  });
  this.timeInput.addEventListener('touchstart', function (e) {
    e.stopPropagation();
  });
  this.timeInput.addEventListener('change', function () {
    _this.rulePart = {
      trigger: {
        type: 'TimeTrigger',
        time: TimeTriggerBlock.localToUTC(_this.timeInput.value)
      }
    };

    _this.onRuleChange();
  });
  rulePartInfo.appendChild(this.timeInput);
}

TimeTriggerBlock.prototype = Object.create(RulePartBlock.prototype);
/**
 * Initialize based on an existing partial rule
 */

TimeTriggerBlock.prototype.setRulePart = function (rulePart) {
  this.rulePart = rulePart;

  if (rulePart.trigger) {
    this.role = 'trigger';
    this.rulePartBlock.classList.add('trigger');
    this.timeInput.value = TimeTriggerBlock.utcToLocal(rulePart.trigger.time);
  }

  if (rulePart.effect) {
    throw new Error('TimeTriggerBlock can only be a trigger');
  }
};

TimeTriggerBlock.prototype.onUp = function (clientX, clientY) {
  RulePartBlock.prototype.onUp.call(this, clientX, clientY);

  if (this.role === 'effect') {
    this.remove();
  }

  if (this.role === 'trigger') {
    this.rulePart = {
      trigger: {
        type: 'TimeTrigger',
        time: TimeTriggerBlock.localToUTC(this.timeInput.value)
      }
    };
    this.onRuleChange();
  }
};

TimeTriggerBlock.leftPad = function (n) {
  return n.toString().padStart(2, '0');
};
/**
 * Convert from a utc time string to one in the local timezone
 * @param {String} utcTime - formatted HH:MM
 * @return {String}
 */


TimeTriggerBlock.utcToLocal = function (utcTime) {
  var timeParts = utcTime.split(':');
  var date = new Date();
  date.setUTCHours(parseInt(timeParts[0], 10), parseInt(timeParts[1], 10));
  var lp = TimeTriggerBlock.leftPad;
  return `${lp(date.getHours())}:${lp(date.getMinutes())}`;
};
/**
 * Convert from a local time string to one in UTC
 * @param {String} localTime - formatted HH:MM
 * @return {String}
 */


TimeTriggerBlock.localToUTC = function (localTime) {
  var timeParts = localTime.split(':');
  var date = new Date();
  date.setHours(parseInt(timeParts[0], 10), parseInt(timeParts[1], 10));
  var lp = TimeTriggerBlock.leftPad;
  return `${lp(date.getUTCHours())}:${lp(date.getUTCMinutes())}`;
};

module.exports = TimeTriggerBlock;

/***/ }),

/***/ "./static/js/schema-form/array-field.js":
/*!**********************************************!*\
  !*** ./static/js/schema-form/array-field.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Input Field for JSON-schema type:array.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This Source Code includes react-jsonschema-form
 * released under the Apache License 2.0.
 * https://github.com/mozilla-services/react-jsonschema-form
 * Date on whitch referred: Thu, Mar 08, 2018  1:08:52 PM
 */


__webpack_require__(/*! core-js/modules/web.dom.iterable */ "./node_modules/core-js/modules/web.dom.iterable.js");

__webpack_require__(/*! core-js/modules/es7.array.includes */ "./node_modules/core-js/modules/es7.array.includes.js");

__webpack_require__(/*! core-js/modules/es6.array.sort */ "./node_modules/core-js/modules/es6.array.sort.js");

var SchemaUtils = __webpack_require__(/*! ./schema-utils */ "./static/js/schema-form/schema-utils.js");

var SchemaField = __webpack_require__(/*! ./schema-field */ "./static/js/schema-form/schema-field.js");

var Utils = __webpack_require__(/*! ../utils */ "./static/js/utils.js");

var UnsupportedField = __webpack_require__(/*! ./unsupported-field */ "./static/js/schema-form/unsupported-field.js");

function ArrayField(schema, formData, idSchema, name, definitions, onChange) {
  var required = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : false;
  var disabled = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : false;
  var readonly = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : false;
  this.schema = SchemaUtils.retrieveSchema(schema, definitions, formData);
  this.formData = Array.isArray(formData) ? formData : [];
  this.idSchema = idSchema;
  this.name = name;
  this.definitions = definitions;
  this.onChange = onChange;
  this.required = required;
  this.disabled = disabled;
  this.readonly = readonly;
  return this;
}

ArrayField.prototype.require = function (name) {
  return Array.isArray(this.schema.required) && this.schema.required.indexOf(name) !== -1;
};

ArrayField.prototype.onChangeForIndex = function (index) {
  var _this = this;

  return function (value) {
    var newFormData = _this.formData.map(function (item, i) {
      // We need to treat undefined items as nulls to have validation.
      // See https://github.com/tdegrunt/jsonschema/issues/206
      var jsonValue = typeof value === 'undefined' ? null : value;
      return index === i ? jsonValue : item;
    });

    _this.formData = newFormData;

    if (_this.onChange) {
      _this.onChange(_this.formData);
    }
  };
};

ArrayField.prototype.onSelectChange = function (value, all) {
  var _this2 = this;

  return function (event) {
    var checked = event.target.checked;

    if (checked) {
      _this2.formData.push(value);

      _this2.formData.sort(function (a, b) {
        return all.indexOf(a) > all.indexOf(b);
      });
    } else {
      _this2.formData = _this2.formData.filter(function (v) {
        return v !== value;
      });
    }

    if (_this2.onChange) {
      _this2.onChange(_this2.formData);
    }
  };
};

ArrayField.prototype.allowAdditionalItems = function () {
  var schema = this.schema;

  if (schema.additionalItems === true) {
    console.warn('additionalItems=true is currently not supported');
  }

  return SchemaUtils.isObject(schema.additionalItems);
};

ArrayField.prototype.isAddable = function (formItems) {
  var schema = this.schema;
  var addable = true;

  if (typeof schema.maxItems !== 'undefined') {
    addable = formItems.length < schema.maxItems;
  }

  return addable;
};

ArrayField.prototype.isItemRequired = function (itemSchema) {
  if (Array.isArray(itemSchema.type)) {
    // While we don't yet support composite/nullable jsonschema types, it's
    // future-proof to check for requirement against these.
    return !itemSchema.type.includes('null');
  } // All non-null array item types are inherently required by design


  return itemSchema.type !== 'null';
};

ArrayField.prototype.itemFieldId = function (index) {
  return `array_${this.idSchema.$id}_${index}`;
};

ArrayField.prototype.onDropIndexClick = function (field, index) {
  var _this3 = this;

  return function (event) {
    var schema = _this3.schema;
    var itemsField = field.querySelector('div.array-items');
    var itemSchema = schema.items;

    if (SchemaUtils.isFixedItems(schema) && _this3.allowAdditionalItems(schema)) {
      itemSchema = schema.additionalItems;
    }

    var newItemsField = itemsField.cloneNode(false);
    event.preventDefault();

    for (var i = 0; i < index; i++) {
      var id = _this3.itemFieldId(i);

      var item = field.querySelector(`#${id}`);
      newItemsField.appendChild(item);
    }

    for (var _i = index + 1; _i < _this3.formData.length; _i++) {
      var newItem = _this3.renderArrayFieldItem(field, _this3.formData[_i], _i - 1, itemSchema, true);

      newItemsField.appendChild(newItem);
    }

    _this3.formData = _this3.formData.filter(function (_, i) {
      return i !== index;
    });
    field.replaceChild(newItemsField, itemsField);

    if (_this3.onChange) {
      _this3.onChange(_this3.formData);
    }
  };
};

ArrayField.prototype.renderRemoveButton = function (field, index) {
  var button = document.createElement('button');
  button.className = 'btn-remove btn-form-tools';
  button.disabled = this.disabled || this.readonly;
  button.onclick = this.onDropIndexClick(field, index);
  return button;
};

ArrayField.prototype.onAddClick = function (field) {
  var _this4 = this;

  return function (event) {
    var schema = _this4.schema;
    var definitions = _this4.definitions;
    var index = _this4.formData.length;
    var itemsField = field.querySelector('div.array-items');
    event.preventDefault();
    var itemSchema = schema.items;

    if (SchemaUtils.isFixedItems(schema) && _this4.allowAdditionalItems(schema)) {
      itemSchema = schema.additionalItems;
    }

    var value = SchemaUtils.getDefaultFormState(itemSchema, // eslint-disable-next-line no-undefined
    undefined, definitions);

    _this4.formData.push(value);

    var itemField = _this4.renderArrayFieldItem(field, value, index, itemSchema, true);

    itemsField.appendChild(itemField);

    if (_this4.onChange) {
      _this4.onChange(_this4.formData);
    }
  };
};

ArrayField.prototype.renderAddButton = function (field) {
  var button = document.createElement('button');
  button.className = 'btn-add btn-form-tools';
  button.disabled = this.disabled || this.readonly;
  button.onclick = this.onAddClick(field);
  return button;
};

ArrayField.prototype.renderArrayFieldItem = function (field, itemData, index, itemSchema, canRemove) {
  var item = document.createElement('div');
  var id = this.itemFieldId(index);
  item.className = 'array-item-row';
  item.id = id;
  var hasToolbox = canRemove;

  if (hasToolbox) {
    item.innerHTML = `
      <div class="array-item array-item-col-field">
      </div>
      <div class="array-item-toolbox array-item-col-tool">
      </div>
      `;
    var toolbox = item.querySelector('div.array-item-toolbox');
    var buttom = this.renderRemoveButton(field, index);
    toolbox.appendChild(buttom);
  } else {
    item.innerHTML = `
      <div class="array-item array-item-col">
      </div>`;
  }

  var itemIdPrefix = `${this.idSchema.$id}_${index}`;
  var itemIdSchema = SchemaUtils.toIdSchema(itemSchema, itemIdPrefix, this.definitions, itemData);
  var childField = item.querySelector('div.array-item');
  var child = new SchemaField(itemSchema, itemData, itemIdSchema, null, this.definitions, this.onChangeForIndex(index), this.isItemRequired(itemSchema), this.disabled, this.readonly).render();
  childField.appendChild(child);
  return item;
};

ArrayField.prototype.renderArrayFieldset = function () {
  var id = Utils.escapeHtmlForIdClass(this.idSchema.$id);
  var description = this.schema.description;
  var title = this.schema.title ? this.schema.title : this.name;
  title = Utils.escapeHtml(title);
  var field = document.createElement('fieldset');
  field.innerHTML = `${(title ? `<legend id="${`${id}__title`}">${title}</legend>` : '') + (description ? `<p id="${id}__description" class="field-description">
      ${Utils.escapeHtml(description)}</p>` : '')}<div class="array-items"></div>`;
  return field;
};

ArrayField.prototype.renderNormalArray = function () {
  var _this5 = this;

  var schema = this.schema;
  var definitions = this.definitions;
  var items = this.formData;
  var itemSchema = SchemaUtils.retrieveSchema(schema.items, definitions, items);
  var field = this.renderArrayFieldset();
  var itemsField = field.querySelector('div.array-items');
  items.forEach(function (item, index) {
    var itemField = _this5.renderArrayFieldItem(field, item, index, itemSchema, true);

    itemsField.appendChild(itemField);
  });

  if (this.isAddable(items)) {
    var button = this.renderAddButton(field);
    field.appendChild(button);
  }

  return field;
};

ArrayField.prototype.renderFixedArray = function () {
  var _this6 = this;

  var schema = this.schema;
  var definitions = this.definitions;
  var field = this.renderArrayFieldset();
  var itemsField = field.querySelector('div.array-items');
  var items = this.formData;
  var itemSchemas = schema.items.map(function (item, index) {
    return SchemaUtils.retrieveSchema(item, definitions, items[index]);
  });

  if (!items || items.length < itemSchemas.length) {
    items = items || [];
    items = items.concat(new Array(itemSchemas.length - items.length));
  }

  items.forEach(function (item, index) {
    var additional = index >= itemSchemas.length;
    var canRemove = additional;
    var itemSchema = additional ? SchemaUtils.retrieveSchema(schema.additionalItems, definitions) : itemSchemas[index];

    var itemField = _this6.renderArrayFieldItem(field, item, index, itemSchema, canRemove);

    itemsField.appendChild(itemField);
  });

  if (this.allowAdditionalItems() && this.isAddable(items)) {
    var button = this.renderAddButton(field);
    field.appendChild(button);
  }

  return field;
};

ArrayField.prototype.renderMultiSelect = function () {
  var _this7 = this;

  var id = Utils.escapeHtmlForIdClass(this.idSchema.$id);
  var items = this.formData;
  var schema = this.schema;
  var definitions = this.definitions;
  var itemsSchema = SchemaUtils.retrieveSchema(schema.items, definitions, items);
  var enumOptions = SchemaUtils.optionsList(itemsSchema);
  var all = enumOptions.map(function (_ref) {
    var value = _ref.value;
    return value;
  });
  var field = document.createElement('fieldset');
  field.className = 'checkboxes';
  enumOptions.forEach(function (option, index) {
    var checked = items.indexOf(option.value) !== -1;
    var disabledCls = _this7.disabled || _this7.readonly ? 'disabled' : '';
    var div = document.createElement('div');
    div.className = `checkbox ${disabledCls}`;
    div.innerHTML = `
    <input
      type="checkbox"
      id="${id}_${index}"
      ${checked ? 'checked' : ''}
      ${_this7.disabled || _this7.readonly ? 'disabled' : ''}
    />
    <span class="checkbox-title">${Utils.escapeHtml(option.label)}</span>
    `;
    var input = div.querySelector('input');
    input.onchange = _this7.onSelectChange(option.value, all);
    field.appendChild(div);
  });
  return field;
};

ArrayField.prototype.render = function () {
  var schema = this.schema;

  if (!schema.hasOwnProperty('items')) {
    return new UnsupportedField(schema).render();
  }

  if (SchemaUtils.isFixedItems(schema)) {
    return this.renderFixedArray();
  }
  /*
  if (SchemaUtils.isFilesArray(schema, this.uiSchema, this.definitions)) {
    return this.renderFiles();
  }
  */


  if (SchemaUtils.isMultiSelect(schema, this.definitions)) {
    return this.renderMultiSelect();
  }

  return this.renderNormalArray();
};

module.exports = ArrayField;

/***/ }),

/***/ "./static/js/schema-form/boolean-field.js":
/*!************************************************!*\
  !*** ./static/js/schema-form/boolean-field.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Input Field for JSON-schema type:boolean.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This Source Code includes react-jsonschema-form
 * released under the Apache License 2.0.
 * https://github.com/mozilla-services/react-jsonschema-form
 * Date on whitch referred: Thu, Mar 08, 2018  1:08:52 PM
 */


var SchemaUtils = __webpack_require__(/*! ./schema-utils */ "./static/js/schema-form/schema-utils.js");

var Utils = __webpack_require__(/*! ../utils */ "./static/js/utils.js");

function BooleanField(schema, formData, idSchema, name, definitions, onChange) {
  var required = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : false;
  var disabled = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : false;
  var readonly = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : false;
  this.schema = SchemaUtils.retrieveSchema(schema, definitions, formData);
  this.formData = formData;
  this.idSchema = idSchema;
  this.name = name;
  this.definitions = definitions;
  this.onChange = onChange;
  this.required = required;
  this.disabled = disabled;
  this.readonly = readonly;
  return this;
}

BooleanField.prototype.onBooleanChange = function (event) {
  this.formData = event.target.checked;

  if (this.onChange) {
    this.onChange(this.formData);
  }
};

BooleanField.prototype.render = function () {
  var id = Utils.escapeHtmlForIdClass(this.idSchema.$id);
  var value = this.formData;
  var field = document.createElement('div');
  field.className = 'checkbox';
  var title = this.schema.title ? this.schema.title : this.name;
  title = Utils.escapeHtml(title);
  title = this.required ? title + SchemaUtils.REQUIRED_FIELD_SYMBOL : title;
  field.innerHTML = `
    <input
    type="checkbox"
    id="${id}"
    ${value ? 'checked' : ''}
    ${this.required ? 'required' : ''}
    ${this.readonly ? 'readonly' : ''}
    ${this.disabled ? 'disabled' : ''}
    />
    <span class="checkbox-title">${title}</span>
    `;
  var input = field.querySelector(`#${id}`);
  input.onchange = this.onBooleanChange.bind(this);
  return field;
};

module.exports = BooleanField;

/***/ }),

/***/ "./static/js/schema-form/error-field.js":
/*!**********************************************!*\
  !*** ./static/js/schema-form/error-field.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Field for result of JSON-schema validation.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This Source Code includes react-jsonschema-form
 * released under the Apache License 2.0.
 * https://github.com/mozilla-services/react-jsonschema-form
 * Date on whitch referred: Thu, Mar 08, 2018  1:08:52 PM
 */


function ErrorField() {
  var field = document.createElement('div');
  field.className = 'errors-field hidden';
  field.innerHTML = `
    <div>
      <h3 class="errors-title">Errors</h3>
    </div>
    <ul class="errors-list">
    </ul>`;
  this.field = field;
  this.errorlist = field.querySelector('ul');
  return this;
}

ErrorField.prototype.render = function (errors) {
  if (errors.length > 0) {
    var errorHtml = errors.map(function (error) {
      return `
          <li class="error-item">
            ${`${error.dataPath} ${error.message}`.trim()}
          </li>`;
    });
    this.errorlist.innerHTML = errorHtml.join(' ');
    this.field.classList.remove('hidden');
  } else {
    this.field.classList.add('hidden');
  }

  return this.field;
};

module.exports = ErrorField;

/***/ }),

/***/ "./static/js/schema-form/number-field.js":
/*!***********************************************!*\
  !*** ./static/js/schema-form/number-field.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Input Field for JSON-schema type:number.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This Source Code includes react-jsonschema-form
 * released under the Apache License 2.0.
 * https://github.com/mozilla-services/react-jsonschema-form
 * Date on whitch referred: Thu, Mar 08, 2018  1:08:52 PM
 */


var SchemaUtils = __webpack_require__(/*! ./schema-utils */ "./static/js/schema-form/schema-utils.js");

var StringField = __webpack_require__(/*! ./string-field */ "./static/js/schema-form/string-field.js");

var Utils = __webpack_require__(/*! ../utils */ "./static/js/utils.js");

function NumberField(schema, formData, idSchema, name, definitions, onChange) {
  var required = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : false;
  var disabled = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : false;
  var readonly = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : false;
  this.schema = SchemaUtils.retrieveSchema(schema, definitions, formData);
  this.formData = formData;
  this.idSchema = idSchema;
  this.name = name;
  this.definitions = definitions;
  this.onChange = onChange;
  this.required = required;
  this.disabled = disabled;
  this.readonly = readonly;
  return this;
}

NumberField.prototype.onRangeChange = function (event) {
  var value = event.target.value;
  this.rangeValue.textContent = value;
  var number = Number(value);
  this.formData = number;

  if (this.onChange) {
    this.onChange(this.formData);
  }
};

NumberField.prototype.onNumberChange = function (value) {
  var number = Number(value);

  if (isNaN(number)) {
    this.formData = value;
  } else {
    this.formData = number;
  }

  if (this.onChange) {
    this.onChange(this.formData);
  }
};

NumberField.prototype.render = function () {
  var id = this.idSchema.$id;
  var value = Number(this.formData);
  value = isNaN(value) ? 0 : value; // range item

  if (this.schema.hasOwnProperty('minimum') && this.schema.hasOwnProperty('maximum')) {
    var field = document.createElement('div');
    field.className = 'field-range-wrapper';
    field.innerHTML = `
      <input
      type="range"
      id="${Utils.escapeHtmlForIdClass(id)}"
      class="form-control"
      ${this.required ? 'required' : ''}
      ${this.readonly ? 'readonly' : ''}
      ${this.disabled ? 'disabled' : ''}
      value=${value == null ? '' : value}
      ${this.schema.multipleOf ? `step=${Number(this.schema.multipleOf)}` : ''}
      min=${Number(this.schema.minimum)}
      max=${Number(this.schema.maximum)}
      />
      <span class="range-view">${value}</span>`;
    var input = field.querySelector('input');
    input.onchange = this.onRangeChange.bind(this);
    input.oninput = this.onRangeChange.bind(this);
    this.rangeValue = field.querySelector('span');
    return field;
  }

  var onNumberChangeHandle = this.onNumberChange.bind(this);
  return new StringField(this.schema, this.formData, this.idSchema, this.name, this.definitions, onNumberChangeHandle, this.required, this.disabled, this.readonly).render();
};

module.exports = NumberField;

/***/ }),

/***/ "./static/js/schema-form/object-field.js":
/*!***********************************************!*\
  !*** ./static/js/schema-form/object-field.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Input Field for JSON-schema type:object.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This Source Code includes react-jsonschema-form
 * released under the Apache License 2.0.
 * https://github.com/mozilla-services/react-jsonschema-form
 * Date on whitch referred: Thu, Mar 08, 2018  1:08:52 PM
 */


__webpack_require__(/*! core-js/modules/es6.object.assign */ "./node_modules/core-js/modules/es6.object.assign.js");

__webpack_require__(/*! core-js/modules/web.dom.iterable */ "./node_modules/core-js/modules/web.dom.iterable.js");

__webpack_require__(/*! core-js/modules/es6.array.sort */ "./node_modules/core-js/modules/es6.array.sort.js");

var SchemaUtils = __webpack_require__(/*! ./schema-utils */ "./static/js/schema-form/schema-utils.js");

var SchemaField = __webpack_require__(/*! ./schema-field */ "./static/js/schema-form/schema-field.js");

var Utils = __webpack_require__(/*! ../utils */ "./static/js/utils.js");

function ObjectField(schema, formData, idSchema, name, definitions, onChange) {
  var required = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : false;
  var disabled = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : false;
  var readonly = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : false;
  this.retrievedSchema = SchemaUtils.retrieveSchema(schema, definitions, formData);
  this.schema = schema;
  this.formData = formData;
  this.idSchema = idSchema;
  this.name = name;
  this.definitions = definitions;
  this.onChange = onChange;
  this.required = required;
  this.disabled = disabled;
  this.readonly = readonly;
  return this;
}

ObjectField.prototype.require = function (name) {
  return Array.isArray(this.retrievedSchema.required) && this.retrievedSchema.required.indexOf(name) !== -1;
};

ObjectField.prototype.sortObject = function (obj) {
  var _this = this;

  var keys = Object.keys(obj).sort();
  var map = {};
  keys.forEach(function (key) {
    var val = obj[key];

    if (typeof val === 'object') {
      val = _this.sortObject(val);
    }

    map[key] = val;
  });
  return map;
};

ObjectField.prototype.isSameSchema = function (schema1, schema2) {
  var json1 = JSON.stringify(this.sortObject(schema1));
  var json2 = JSON.stringify(this.sortObject(schema2));
  return json1 === json2;
};

ObjectField.prototype.onPropertyChange = function (name, field) {
  var _this2 = this;

  return function (value) {
    var schema = _this2.schema;
    var newFormData = {};
    newFormData[name] = value;
    _this2.formData = Object.assign(_this2.formData, newFormData); // modify part of form based on form data.

    if (schema.hasOwnProperty('dependencies')) {
      var newRetrievedSchema = SchemaUtils.retrieveSchema(schema, _this2.definitions, _this2.formData);

      if (!_this2.isSameSchema(_this2.retrievedSchema, newRetrievedSchema)) {
        _this2.retrievedSchema = newRetrievedSchema;
        _this2.formData = SchemaUtils.getDefaultFormState(newRetrievedSchema, _this2.formData, _this2.definitions);

        _this2.renderField(field);
      }
    }

    if (_this2.onChange) {
      _this2.onChange(_this2.formData);
    }
  };
};

ObjectField.prototype.renderField = function (field) {
  var _this3 = this;

  var id = Utils.escapeHtmlForIdClass(this.idSchema.$id);
  var description = this.retrievedSchema.description;
  var title = this.retrievedSchema.title ? this.retrievedSchema.title : this.name;

  if (typeof title !== 'undefined' && title !== null) {
    title = Utils.escapeHtml(title);
    title = this.required ? title + SchemaUtils.REQUIRED_FIELD_SYMBOL : title;
  }

  field.innerHTML = (title ? `<legend id="${`${id}__title`}">${title}</legend>` : '') + (description ? `<p id="${id}__description" class="field-description">
      ${Utils.escapeHtml(description)}</p>` : ''); // TODO support to specific properties order

  var orderedProperties = Object.keys(this.retrievedSchema.properties);
  orderedProperties.forEach(function (name) {
    var childSchema = _this3.retrievedSchema.properties[name];
    var childIdPrefix = `${_this3.idSchema.$id}_${name}`;
    var childData = _this3.formData[name];
    var childIdSchema = SchemaUtils.toIdSchema(childSchema, childIdPrefix, _this3.definitions, childData);
    var child = new SchemaField(childSchema, childData, childIdSchema, name, _this3.definitions, _this3.onPropertyChange(name, field), _this3.require(name), _this3.disabled, _this3.readonly).render();
    field.appendChild(child);
  });
};

ObjectField.prototype.render = function () {
  var field = document.createElement('fieldset');
  this.renderField(field);
  return field;
};

module.exports = ObjectField;

/***/ }),

/***/ "./static/js/schema-form/schema-field.js":
/*!***********************************************!*\
  !*** ./static/js/schema-form/schema-field.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Input Field for JSON-schema.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This Source Code includes react-jsonschema-form
 * released under the Apache License 2.0.
 * https://github.com/mozilla-services/react-jsonschema-form
 * Date on whitch referred: Thu, Mar 08, 2018  1:08:52 PM
 */


var SchemaUtils = __webpack_require__(/*! ./schema-utils */ "./static/js/schema-form/schema-utils.js");

var NumberField = __webpack_require__(/*! ./number-field */ "./static/js/schema-form/number-field.js");

var StringField = __webpack_require__(/*! ./string-field */ "./static/js/schema-form/string-field.js");

var BooleanField = __webpack_require__(/*! ./boolean-field */ "./static/js/schema-form/boolean-field.js");

var UnsupportedField = __webpack_require__(/*! ./unsupported-field */ "./static/js/schema-form/unsupported-field.js");

var Utils = __webpack_require__(/*! ../utils */ "./static/js/utils.js"); // eslint-disable-next-line prefer-const


var ObjectField; // eslint-disable-next-line prefer-const

var ArrayField;

function SchemaField(schema, formData, idSchema, name, definitions, onChange) {
  var required = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : false;
  var disabled = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : false;
  var readonly = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : false;
  this.retrievedSchema = SchemaUtils.retrieveSchema(schema, definitions, formData);
  this.schema = schema;
  this.formData = formData;
  this.idSchema = idSchema;
  this.name = name;
  this.definitions = definitions;
  this.onChange = onChange;
  this.required = required;
  this.disabled = disabled;
  this.readonly = readonly;
  return this;
}

SchemaField.prototype.getFieldType = function () {
  var FIELD_TYPES = {
    array: ArrayField,
    boolean: BooleanField,
    integer: NumberField,
    number: NumberField,
    object: ObjectField,
    string: StringField
  };
  var field = FIELD_TYPES[this.retrievedSchema.type];
  return field ? field : UnsupportedField;
};

SchemaField.prototype.render = function () {
  var fieldType = this.getFieldType();
  var type = this.retrievedSchema.type;
  var id = Utils.escapeHtmlForIdClass(this.idSchema.$id);
  var description = this.retrievedSchema.description;
  var classNames = ['form-group', 'field', `field-${type}`].join(' ').trim();
  var label = this.retrievedSchema.title || this.name;

  if (typeof label !== 'undefined' && label !== null) {
    label = Utils.escapeHtml(label);
    label = this.required ? label + SchemaUtils.REQUIRED_FIELD_SYMBOL : label;
  }

  var displayLabel = true;
  var displayDescription = true;

  if (type === 'array') {
    displayLabel = displayDescription = SchemaUtils.isMultiSelect(this.schema, this.definitions);
  }

  if (type === 'object') {
    displayLabel = displayDescription = false;
  }

  if (type === 'boolean') {
    displayLabel = false;
  }

  var field = document.createElement('div');
  field.className = classNames;
  field.innerHTML = (displayLabel && label ? `<label class="control-label" htmlFor="${id}">${label}</label>` : '') + (displayDescription && description ? `<p id="${id}__description" class="field-description">${Utils.escapeHtml(description)}</p>` : '');
  var child = new fieldType(this.schema, this.formData, this.idSchema, this.name, this.definitions, this.onChange, this.required, this.disabled, this.readonly).render();
  field.appendChild(child);
  return field;
};

module.exports = SchemaField; // avoid circular dependency

ObjectField = __webpack_require__(/*! ./object-field */ "./static/js/schema-form/object-field.js");
ArrayField = __webpack_require__(/*! ./array-field */ "./static/js/schema-form/array-field.js");

/***/ }),

/***/ "./static/js/schema-form/schema-form.js":
/*!**********************************************!*\
  !*** ./static/js/schema-form/schema-form.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Create input form using JSON-schema.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This Source Code includes react-jsonschema-form
 * released under the Apache License 2.0.
 * https://github.com/mozilla-services/react-jsonschema-form
 * Date on whitch referred: Thu, Mar 08, 2018  1:08:52 PM
 */


var SchemaUtils = __webpack_require__(/*! ./schema-utils */ "./static/js/schema-form/schema-utils.js");

var Validator = __webpack_require__(/*! ./validator */ "./static/js/schema-form/validator.js");

var SchemaField = __webpack_require__(/*! ./schema-field */ "./static/js/schema-form/schema-field.js");

var ErrorField = __webpack_require__(/*! ./error-field */ "./static/js/schema-form/error-field.js");

var Utils = __webpack_require__(/*! ../utils */ "./static/js/utils.js");

function SchemaForm(schema, id, name, formData, onSubmit) {
  var options = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};
  this.definitions = schema.definitions;
  this.schema = schema;
  this.id = id;
  this.name = name;
  this.onSubmit = onSubmit;
  this.idSchema = SchemaUtils.toIdSchema(schema, null, this.definitions, formData);
  this.formData = SchemaUtils.getDefaultFormState(schema, formData, this.definitions);
  this.submitText = options.hasOwnProperty('submitText') ? options.submitText : 'Submit';
  this.noValidate = options.hasOwnProperty('validate') ? !options.validate : false;
  this.liveValidate = options.hasOwnProperty('liveValidate') ? options.liveValidate : true;
  return this;
}

SchemaForm.prototype.onChange = function (formData) {
  var error = null;
  this.formData = formData;
  this.submitButton.disabled = false;

  if (!this.noValidate && this.liveValidate) {
    var _this$validate = this.validate(formData),
        errors = _this$validate.errors;

    error = errors;
  }

  if (!this.noValidate && error) {
    this.errorField.render(error);
  } else if (!this.noValidate) {
    this.errorField.render([]);
  }
};

SchemaForm.prototype.validate = function (formData) {
  return Validator.validateFormData(formData, this.schema);
};

SchemaForm.prototype.handleSubmit = function (e) {
  var _this$validate2 = this.validate(this.formData),
      errors = _this$validate2.errors;

  var button = e.target;
  button.disabled = true;

  if (this.onSubmit) {
    this.onSubmit(this.formData, errors);
  }
};

SchemaForm.prototype.renderSubmitButton = function () {
  var submitButton = document.createElement('button');
  submitButton.id = `submit-${Utils.escapeHtml(this.id)}`;
  submitButton.type = 'button';
  submitButton.className = 'button-submit';
  submitButton.innerText = this.submitText;
  submitButton.addEventListener('click', this.handleSubmit.bind(this));
  submitButton.disabled = true;
  this.submitButton = submitButton;
  return submitButton;
};

SchemaForm.prototype.render = function () {
  var form = document.createElement('form');
  form.className = 'json-schema-form';
  form.id = this.id;
  form.innerHTML = `<p></p>`;
  var p = form.querySelector('p');
  var submit = this.renderSubmitButton();
  p.appendChild(submit);
  var onChangeHandle = this.onChange.bind(this);
  var child = new SchemaField(this.schema, this.formData, this.idSchema, this.name, this.definitions, onChangeHandle).render();
  this.errorField = new ErrorField();
  p.insertBefore(child, p.firstChild);
  p.insertBefore(this.errorField.render([]), p.firstChild);
  return form;
};

module.exports = SchemaForm;

/***/ }),

/***/ "./static/js/schema-form/schema-utils.js":
/*!***********************************************!*\
  !*** ./static/js/schema-form/schema-utils.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Utility functions for JSON-schema form.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This Source Code includes react-jsonschema-form
 * released under the Apache License 2.0.
 * https://github.com/mozilla-services/react-jsonschema-form
 * Date on whitch referred: Thu, Mar 08, 2018  1:08:52 PM
 */


__webpack_require__(/*! core-js/modules/es6.regexp.to-string */ "./node_modules/core-js/modules/es6.regexp.to-string.js");

__webpack_require__(/*! core-js/modules/es6.array.fill */ "./node_modules/core-js/modules/es6.array.fill.js");

__webpack_require__(/*! core-js/modules/es6.object.assign */ "./node_modules/core-js/modules/es6.object.assign.js");

__webpack_require__(/*! core-js/modules/es6.set */ "./node_modules/core-js/modules/es6.set.js");

__webpack_require__(/*! core-js/modules/es6.array.from */ "./node_modules/core-js/modules/es6.array.from.js");

__webpack_require__(/*! core-js/modules/es6.regexp.replace */ "./node_modules/core-js/modules/es6.regexp.replace.js");

__webpack_require__(/*! core-js/modules/es7.symbol.async-iterator */ "./node_modules/core-js/modules/es7.symbol.async-iterator.js");

__webpack_require__(/*! core-js/modules/es6.symbol */ "./node_modules/core-js/modules/es6.symbol.js");

__webpack_require__(/*! core-js/modules/web.dom.iterable */ "./node_modules/core-js/modules/web.dom.iterable.js");

__webpack_require__(/*! core-js/modules/es6.regexp.split */ "./node_modules/core-js/modules/es6.regexp.split.js");

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }

function _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

var Validator = __webpack_require__(/*! ./validator */ "./static/js/schema-form/validator.js");

var SchemaUtils = {
  REQUIRED_FIELD_SYMBOL: '*',
  findSchemaDefinition: function findSchemaDefinition($ref) {
    var definitions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    // Extract and use the referenced definition if we have it.
    var match = /^#\/definitions\/(.*)$/.exec($ref);

    if (match && match[1]) {
      var parts = match[1].split('/');
      var current = definitions;
      var _iteratorNormalCompletion = true;
      var _didIteratorError = false;
      var _iteratorError = undefined;

      try {
        for (var _iterator = parts[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var part = _step.value;
          part = part.replace(/~1/g, '/').replace(/~0/g, '~');

          if (current.hasOwnProperty(part)) {
            current = current[part];
          } else {
            // No matching definition found, that's an error (bogus schema?)
            throw new Error(`Could not find a definition for ${$ref}.`);
          }
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return != null) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }

      return current;
    } // No matching definition found, that's an error (bogus schema?)


    throw new Error(`Could not find a definition for ${$ref}.`);
  },
  retrieveSchema: function retrieveSchema(schema) {
    var definitions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    var formData = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

    // No $ref attribute found, returning the original schema.
    if (schema.hasOwnProperty('$ref')) {
      // Retrieve the referenced schema definition.
      var $refSchema = SchemaUtils.findSchemaDefinition(schema.$ref, definitions); // Drop the $ref property of the source schema.
      // eslint-disable-next-line no-unused-vars

      var $ref = schema.$ref,
          localSchema = _objectWithoutProperties(schema, ["$ref"]); // Update referenced schema definition with local schema properties.


      return SchemaUtils.retrieveSchema(_objectSpread({}, $refSchema, localSchema), definitions, formData);
    } else if (schema.hasOwnProperty('dependencies')) {
      var resolvedSchema = SchemaUtils.resolveDependencies(schema, definitions, formData);
      return SchemaUtils.retrieveSchema(resolvedSchema, definitions, formData);
    } else {
      return schema;
    }
  },
  resolveDependencies: function resolveDependencies(schema, definitions, formData) {
    // Drop the dependencies from the source schema.
    var _schema$dependencies = schema.dependencies,
        dependencies = _schema$dependencies === void 0 ? {} : _schema$dependencies,
        localSchema = _objectWithoutProperties(schema, ["dependencies"]);

    var resolvedSchema = localSchema; // Process dependencies updating the local schema properties as
    // appropriate.

    for (var dependencyKey in dependencies) {
      // Skip this dependency if its trigger property is not present.
      if (typeof formData[dependencyKey] === 'undefined') {
        continue;
      }

      var dependencyValue = dependencies[dependencyKey];

      if (Array.isArray(dependencyValue)) {
        resolvedSchema = SchemaUtils.withDependentProperties(resolvedSchema, dependencyValue);
      } else if (SchemaUtils.isObject(dependencyValue)) {
        resolvedSchema = SchemaUtils.withDependentSchema(resolvedSchema, definitions, formData, dependencyKey, dependencyValue);
      }
    }

    return resolvedSchema;
  },
  withDependentProperties: function withDependentProperties(schema, additionallyRequired) {
    if (!additionallyRequired) {
      return schema;
    }

    var required = Array.isArray(schema.required) ? Array.from(new Set(_toConsumableArray(schema.required).concat(_toConsumableArray(additionallyRequired)))) : additionallyRequired;
    return _objectSpread({}, schema, {
      required: required
    });
  },
  withDependentSchema: function withDependentSchema(schema, definitions, formData, dependencyKey, dependencyValue) {
    var _SchemaUtils$retrieve = SchemaUtils.retrieveSchema(dependencyValue, definitions, formData),
        oneOf = _SchemaUtils$retrieve.oneOf,
        dependentSchema = _objectWithoutProperties(_SchemaUtils$retrieve, ["oneOf"]);

    schema = SchemaUtils.mergeSchemas(schema, dependentSchema);
    return typeof oneOf === 'undefined' ? schema : SchemaUtils.withExactlyOneSubschema(schema, definitions, formData, dependencyKey, oneOf);
  },
  withExactlyOneSubschema: function withExactlyOneSubschema(schema, definitions, formData, dependencyKey, oneOf) {
    if (!Array.isArray(oneOf)) {
      throw new Error(`invalid oneOf: it is some ${typeof oneOf} instead of an array`);
    }

    var validSubschemas = oneOf.filter(function (subschema) {
      if (!subschema.properties) {
        return false;
      }

      var conditionPropertySchema = subschema.properties[dependencyKey];

      if (conditionPropertySchema) {
        var conditionSchema = {
          type: 'object',
          properties: _defineProperty({}, dependencyKey, conditionPropertySchema)
        };

        var _Validator$validateFo = Validator.validateFormData(formData, conditionSchema),
            errors = _Validator$validateFo.errors;

        return errors.length === 0;
      }
    });

    if (validSubschemas.length !== 1) {
      console.warn('ignoring oneOf in dependencies because there isn\'t ' + 'exactly one subschema that is valid');
      return schema;
    }

    var subschema = validSubschemas[0]; // Drop the dependency property from the subschema.

    var _subschema$properties = subschema.properties,
        conditionPropertySchema = _subschema$properties[dependencyKey],
        dependentSubschema = _objectWithoutProperties(_subschema$properties, [dependencyKey]);

    var dependentSchema = _objectSpread({}, subschema, {
      properties: dependentSubschema
    });

    return SchemaUtils.mergeSchemas(schema, SchemaUtils.retrieveSchema(dependentSchema, definitions, formData));
  },
  mergeSchemas: function mergeSchemas(schema1, schema2) {
    return SchemaUtils.mergeObjects(schema1, schema2, true);
  },
  isConstant: function isConstant(schema) {
    return Array.isArray(schema.enum) && schema.enum.length === 1 || schema.hasOwnProperty('const');
  },
  isFixedItems: function isFixedItems(schema) {
    return Array.isArray(schema.items) && schema.items.length > 0 && schema.items.every(function (item) {
      return SchemaUtils.isObject(item);
    });
  },
  isObject: function isObject(thing) {
    return typeof thing === 'object' && thing !== null && !Array.isArray(thing);
  },
  isSelect: function isSelect(_schema) {
    var definitions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    var schema = SchemaUtils.retrieveSchema(_schema, definitions);
    var altSchemas = schema.oneOf || schema.anyOf;

    if (Array.isArray(schema.enum)) {
      return true;
    } else if (Array.isArray(altSchemas)) {
      return altSchemas.every(function (altSchemas) {
        return SchemaUtils.isConstant(altSchemas);
      });
    }

    return false;
  },
  isMultiSelect: function isMultiSelect(schema) {
    var definitions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    if (!schema.uniqueItems || !schema.items) {
      return false;
    }

    return SchemaUtils.isSelect(schema.items, definitions);
  },
  toConstant: function toConstant(schema) {
    if (Array.isArray(schema.enum) && schema.enum.length === 1) {
      return schema.enum[0];
    } else if (schema.hasOwnProperty('const')) {
      return schema.const;
    } else {
      throw new Error('schema cannot be inferred as a constant');
    }
  },
  toIdSchema: function toIdSchema(schema, id, definitions) {
    var formData = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};
    var idSchema = {
      $id: id || 'root'
    };

    if ('$ref' in schema) {
      var _schema = SchemaUtils.retrieveSchema(schema, definitions, formData);

      return SchemaUtils.toIdSchema(_schema, id, definitions, formData);
    }

    if ('items' in schema && !schema.items.$ref) {
      return SchemaUtils.toIdSchema(schema.items, id, definitions, formData);
    }

    if (schema.type !== 'object') {
      return idSchema;
    }

    for (var name in schema.properties || {}) {
      var field = schema.properties[name];
      var fieldId = `${idSchema.$id}_${name}`;
      idSchema[name] = SchemaUtils.toIdSchema(field, fieldId, definitions, formData[name]);
    }

    return idSchema;
  },
  mergeObjects: function mergeObjects(obj1, obj2) {
    var concatArrays = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
    // Recursively merge deeply nested objects.
    var acc = Object.assign({}, obj1); // Prevent mutation of source object.

    return Object.keys(obj2).reduce(function (acc, key) {
      var left = obj1[key],
          right = obj2[key];

      if (obj1.hasOwnProperty(key) && SchemaUtils.isObject(right)) {
        acc[key] = SchemaUtils.mergeObjects(left, right, concatArrays);
      } else if (concatArrays && Array.isArray(left) && Array.isArray(right)) {
        acc[key] = left.concat(right);
      } else {
        acc[key] = right;
      }

      return acc;
    }, acc);
  },
  optionsList: function optionsList(schema) {
    if (schema.enum) {
      return schema.enum.map(function (value, i) {
        var label = schema.enumNames && schema.enumNames[i] || String(value);
        return {
          label: label,
          value: value
        };
      });
    } else {
      var altSchemas = schema.oneOf || schema.anyOf;
      return altSchemas.map(function (schema) {
        var value = SchemaUtils.toConstant(schema);
        var label = schema.title || String(value);
        return {
          label: label,
          value: value
        };
      });
    }
  },
  computeDefaults: function computeDefaults(schema, parentDefaults) {
    var definitions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
    // Compute the defaults recursively: give highest priority to deepest
    // nodes.
    var defaults = parentDefaults;

    if (SchemaUtils.isObject(defaults) && SchemaUtils.isObject(schema.default)) {
      // For object defaults, only override parent defaults that are defined
      // in schema.default.
      defaults = SchemaUtils.mergeObjects(defaults, schema.default);
    } else if ('default' in schema) {
      // Use schema defaults for this node.
      defaults = schema.default;
    } else if ('$ref' in schema) {
      // Use referenced schema defaults for this node.
      var refSchema = SchemaUtils.findSchemaDefinition(schema.$ref, definitions);
      return SchemaUtils.computeDefaults(refSchema, defaults, definitions);
    } else if (SchemaUtils.isFixedItems(schema)) {
      defaults = schema.items.map(function (itemSchema) {
        return SchemaUtils.computeDefaults( // eslint-disable-next-line no-undefined
        itemSchema, undefined, definitions);
      });
    } // No defaults defined for this node, fallback to generic typed ones.


    if (typeof defaults === 'undefined') {
      defaults = schema.default;
    }

    switch (schema.type) {
      // We need to recur for object schema inner default values.
      case 'object':
        return Object.keys(schema.properties || {}).reduce(function (acc, key) {
          // Compute the defaults for this node, with the parent defaults
          // we might have from a previous run: defaults[key].
          acc[key] = SchemaUtils.computeDefaults(schema.properties[key], (defaults || {})[key], definitions);
          return acc;
        }, {});

      case 'array':
        if (schema.minItems) {
          if (!SchemaUtils.isMultiSelect(schema, definitions)) {
            var defaultsLength = defaults ? defaults.length : 0;

            if (schema.minItems > defaultsLength) {
              var defaultEntries = defaults || []; // populate the array with the defaults

              var fillerEntries = new Array(schema.minItems - defaultsLength).fill(SchemaUtils.computeDefaults(schema.items, schema.items.defaults, definitions)); // then fill up the rest with either the item default or empty,
              // up to minItems

              return defaultEntries.concat(fillerEntries);
            }
          } else {
            return [];
          }
        }

        break;
      // We need default value with a range form.

      case 'number':
      case 'integer':
        if (typeof defaults === 'undefined' && schema.hasOwnProperty('minimum') && schema.hasOwnProperty('maximum')) {
          defaults = schema.minimum;
        }

        break;
      // We need default value with a checkbox.

      case 'boolean':
        if (typeof defaults === 'undefined') {
          defaults = false;
        }

        break;
    }

    return defaults;
  },
  getDefaultFormState: function getDefaultFormState(_schema, formData) {
    var definitions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

    if (!SchemaUtils.isObject(_schema)) {
      throw new Error(`Invalid schema: ${_schema}`);
    }

    var schema = SchemaUtils.retrieveSchema(_schema, definitions, formData);
    var defaults = SchemaUtils.computeDefaults(schema, _schema.default, definitions);

    if (typeof formData === 'undefined') {
      // No form data? Use schema defaults.
      return defaults;
    }

    if (SchemaUtils.isObject(formData)) {
      // Override schema defaults with form data.
      return SchemaUtils.mergeObjects(defaults, formData);
    }

    return formData || defaults;
  },
  getOptionsList: function getOptionsList(schema) {
    if (schema.enum) {
      return schema.enum.map(function (value, i) {
        var label = schema.enumNames && schema.enumNames[i] || String(value);
        return {
          label: label,
          value: value
        };
      });
    } else {
      var altSchemas = schema.oneOf || schema.anyOf;
      return altSchemas.map(function (schema) {
        var value = SchemaUtils.toConstant(schema);
        var label = schema.title || String(value);
        return {
          label: label,
          value: value
        };
      });
    }
  }
};
module.exports = SchemaUtils;

/***/ }),

/***/ "./static/js/schema-form/string-field.js":
/*!***********************************************!*\
  !*** ./static/js/schema-form/string-field.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Input Field for JSON-schema type:string.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This Source Code includes react-jsonschema-form
 * released under the Apache License 2.0.
 * https://github.com/mozilla-services/react-jsonschema-form
 * Date on whitch referred: Thu, Mar 08, 2018  1:08:52 PM
 */


var SchemaUtils = __webpack_require__(/*! ./schema-utils */ "./static/js/schema-form/schema-utils.js");

var Utils = __webpack_require__(/*! ../utils */ "./static/js/utils.js");

function StringField(schema, formData, idSchema, name, definitions, onChange) {
  var required = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : false;
  var disabled = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : false;
  var readonly = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : false;
  this.schema = SchemaUtils.retrieveSchema(schema, definitions, formData);
  this.formData = formData;
  this.idSchema = idSchema;
  this.name = name;
  this.definitions = definitions;
  this.onChange = onChange;
  this.required = required;
  this.disabled = disabled;
  this.readonly = readonly;
  return this;
}

StringField.prototype.toFormData = function (value) {
  // eslint-disable-next-line no-undefined
  return value === '' ? undefined : value;
};

StringField.prototype.onStringChange = function (event) {
  var value = event.target.value; // If an user input nothing on required field, we should set undefined
  // in order to raise error.

  this.formData = this.toFormData(value);

  if (this.onChange) {
    this.onChange(this.formData);
  }
};

StringField.prototype.render = function () {
  var _this = this;

  var id = Utils.escapeHtmlForIdClass(this.idSchema.$id);
  var value = this.formData;
  var field = document.createElement('div'); // list item

  if (SchemaUtils.isSelect(this.schema)) {
    var enumOptions = SchemaUtils.getOptionsList(this.schema);
    var selectedValue = value;
    var selectedAny = false; // User can select undefiend value on field not required.

    if (!this.required) {
      enumOptions.unshift({
        value: '',
        label: ''
      });
    }

    var selects = enumOptions.map(function (_ref, i) {
      var value = _ref.value,
          label = _ref.label;

      var selected = selectedValue === _this.toFormData(value);

      selectedAny |= selected;
      return `
        <option
        key="${i}"
        value="${Utils.escapeHtml(value)}"
        ${selected ? 'selected' : ''}>
          ${Utils.escapeHtml(label)}
        </option>`;
    });
    field.innerHTML = `
      <select
      id="${id}"
      class="form-control"
      ${this.required ? 'required' : ''}
      ${this.readonly ? 'readonly' : ''}
      ${this.disabled ? 'disabled' : ''}
      >
      ${selects.join(' ')}
      </select>`;

    if (!selectedAny) {
      var select = field.querySelector(`#${id}`);
      select.selectedIndex = -1;
    }
  } else {
    field.innerHTML = `
      <input
      id="${id}"
      type="text"
      class="form-control"
      ${this.required ? 'required' : ''}
      ${this.readonly ? 'readonly' : ''}
      ${this.disabled ? 'disabled' : ''}
      value="${value == null ? '' : Utils.escapeHtml(value)}"
      />`;
  }

  var input = field.querySelector(`#${id}`);
  input.onchange = this.onStringChange.bind(this);
  input.oninput = this.onStringChange.bind(this);
  return field;
};

module.exports = StringField;

/***/ }),

/***/ "./static/js/schema-form/unsupported-field.js":
/*!****************************************************!*\
  !*** ./static/js/schema-form/unsupported-field.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Field for JSON-schema type:Unsupported.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This Source Code includes react-jsonschema-form
 * released under the Apache License 2.0.
 * https://github.com/mozilla-services/react-jsonschema-form
 * Date on whitch referred: Thu, Mar 08, 2018  1:08:52 PM
 */


var Utils = __webpack_require__(/*! ../utils */ "./static/js/utils.js");

function UnsupportedField(schema) {
  // XXX render json as string so dev can inspect faulty subschema
  this.schema = schema;
  return this;
}

UnsupportedField.prototype.render = function () {
  var schema = Utils.escapeHtml(JSON.stringify(this.schema, null, 2));
  var field = document.createElement('div');
  field.className = 'unsupported-field';
  field.innerHTML = `Unsupported field schema ${schema}.`;
  return field;
};

module.exports = UnsupportedField;

/***/ }),

/***/ "./static/js/schema-form/validator.js":
/*!********************************************!*\
  !*** ./static/js/schema-form/validator.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Validate data with JSON-schema.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This Source Code includes react-jsonschema-form
 * released under the Apache License 2.0.
 * https://github.com/mozilla-services/react-jsonschema-form
 * Date on whitch referred: Thu, Mar 08, 2018  1:08:52 PM
 */


__webpack_require__(/*! core-js/modules/es7.symbol.async-iterator */ "./node_modules/core-js/modules/es7.symbol.async-iterator.js");

__webpack_require__(/*! core-js/modules/es6.symbol */ "./node_modules/core-js/modules/es6.symbol.js");

__webpack_require__(/*! core-js/modules/web.dom.iterable */ "./node_modules/core-js/modules/web.dom.iterable.js");

__webpack_require__(/*! core-js/modules/es6.regexp.replace */ "./node_modules/core-js/modules/es6.regexp.replace.js");

__webpack_require__(/*! core-js/modules/es6.regexp.constructor */ "./node_modules/core-js/modules/es6.regexp.constructor.js");

var Validator = {}; // Dynamic loading

__webpack_require__.e(/*! import() | ajv.js */ "vendors~ajv.js").then(__webpack_require__.t.bind(null, /*! ajv */ "./node_modules/ajv/lib/ajv.js", 7)).then(function (Ajv) {
  Ajv = Ajv.default ? Ajv.default : Ajv;
  Validator._ajv = new Ajv({
    errorDataPath: 'property',
    allErrors: true
  });
});
Validator._reEscapeChar = /\\(\\)?/g;
Validator._rePropName = RegExp( // Match anything that isn't a dot or bracket.
'[^.[\\]]+|' + // Or match property names within brackets.
'\\[(?:' + // Match a non-string expression.
'([^"\'].*)|' + // Or match strings (supports escaping characters).
'(["\'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2' + ')\\]|' + // Or match "" as the space between consecutive dots or empty brackets.
'(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))', 'g');

Validator._toPath = function (string) {
  var result = [];
  string.replace(Validator._rePropName, function (match, expression, quote, subString) {
    var key = match;

    if (quote) {
      key = subString.replace(Validator._reEscapeChar, '$1');
    } else if (expression) {
      key = expression.trim();
    }

    result.push(key);
  });
  return result;
};

Validator._toErrorSchema = function (errors) {
  // Transforms a ajv validation errors list:
  // [
  //   {dataPath: ".level1.level2[2].level3", message: "err a"},
  //   {dataPath: ".level1.level2[2].level3", message: "err b"},
  //   {dataPath: ".level1.level2[4].level3", message: "err b"},
  // ]
  // Into an error tree:
  // {
  //   level1: {
  //     level2: {
  //       2: {level3: {errors: ["err a", "err b"]}},
  //       4: {level3: {errors: ["err b"]}},
  //     }
  //   }
  // };
  if (errors === null || !errors.length) {
    return {};
  }

  return errors.reduce(function (errorSchema, error) {
    var dataPath = error.dataPath,
        message = error.message;

    var path = Validator._toPath(dataPath);

    var parent = errorSchema;
    var _iteratorNormalCompletion = true;
    var _didIteratorError = false;
    var _iteratorError = undefined;

    try {
      for (var _iterator = path.slice(0)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var segment = _step.value;

        if (!(segment in parent)) {
          parent[segment] = {};
        }

        parent = parent[segment];
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator.return != null) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }

    if (Array.isArray(parent.__errors)) {
      // We store the list of errors for this node in a dataPath named
      // __errors to avoid name collision with a possible sub schema
      // field named "errors" (see `validate.createErrorHandler`).
      parent.__errors = parent.__errors.concat(message);
    } else {
      parent.__errors = [message];
    }

    return errorSchema;
  }, {});
};

Validator.validateFormData = function (formData, schema) {
  if (Validator.hasOwnProperty('_ajv')) {
    Validator._ajv.validate(schema, formData);

    var errors = Validator._ajv.errors;
    errors = errors === null ? [] : errors;

    var errorSchema = Validator._toErrorSchema(errors);

    return {
      errors: errors,
      errorSchema: errorSchema
    };
  } else {
    return {
      errors: [{
        message: 'validator still not available'
      }]
    };
  }
};

module.exports = Validator;

/***/ }),

/***/ "./static/js/settings.js":
/*!*******************************!*\
  !*** ./static/js/settings.js ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Settings Screen.
 *
 * UI for gateway settings.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */


__webpack_require__(/*! core-js/modules/es6.promise */ "./node_modules/core-js/modules/es6.promise.js");

__webpack_require__(/*! core-js/modules/es6.regexp.split */ "./node_modules/core-js/modules/es6.regexp.split.js");

__webpack_require__(/*! core-js/modules/es6.array.from */ "./node_modules/core-js/modules/es6.array.from.js");

__webpack_require__(/*! core-js/modules/es6.array.sort */ "./node_modules/core-js/modules/es6.array.sort.js");

__webpack_require__(/*! core-js/modules/es6.regexp.to-string */ "./node_modules/core-js/modules/es6.regexp.to-string.js");

__webpack_require__(/*! core-js/modules/es7.symbol.async-iterator */ "./node_modules/core-js/modules/es7.symbol.async-iterator.js");

__webpack_require__(/*! core-js/modules/es6.symbol */ "./node_modules/core-js/modules/es6.symbol.js");

__webpack_require__(/*! core-js/modules/web.dom.iterable */ "./node_modules/core-js/modules/web.dom.iterable.js");

__webpack_require__(/*! core-js/modules/es6.map */ "./node_modules/core-js/modules/es6.map.js");

var App = __webpack_require__(/*! ./app */ "./static/js/app.js");

var API = __webpack_require__(/*! ./api */ "./static/js/api.js");

var Menu = __webpack_require__(/*! ./menu */ "./static/js/menu.js");

var page = __webpack_require__(/*! page */ "./node_modules/page/page.js");

var Adapter = __webpack_require__(/*! ./adapter */ "./static/js/adapter.js");

var InstalledAddon = __webpack_require__(/*! ./installed-addon */ "./static/js/installed-addon.js");

var DiscoveredAddon = __webpack_require__(/*! ./discovered-addon */ "./static/js/discovered-addon.js");

var User = __webpack_require__(/*! ./user */ "./static/js/user.js");

var AddonConfig = __webpack_require__(/*! ./addon-config */ "./static/js/addon-config.js");

var Utils = __webpack_require__(/*! ./utils */ "./static/js/utils.js"); // eslint-disable-next-line no-unused-vars


var SettingsScreen = {
  /**
   * Initialise Settings Screen.
   */
  init: function init() {
    this.view = document.getElementById('settings-view');
    this.menu = document.getElementById('settings-menu');
    this.domainSettings = document.getElementById('domain-settings');
    this.userSettings = document.getElementById('user-settings');
    this.userSettingsMain = document.getElementById('user-settings-main');
    this.userSettingsEdit = document.getElementById('user-settings-edit');
    this.userSettingsAdd = document.getElementById('user-settings-add');
    this.addUserButton = document.getElementById('add-user-button');
    this.adapterSettings = document.getElementById('adapter-settings');
    this.addonSettings = document.getElementById('addon-settings');
    this.addonMainSettings = document.getElementById('addon-main-settings');
    this.addonConfigSettings = document.getElementById('addon-config-settings');
    this.addonDiscoverySettings = document.getElementById('addon-discovery-settings');
    this.addonConfigSettings = document.getElementById('addon-config-settings');
    this.discoverAddonsButton = document.getElementById('discover-addons-button');
    this.experimentSettings = document.getElementById('experiment-settings');
    this.updateSettings = document.getElementById('update-settings');
    this.authorizationSettings = document.getElementById('authorization-settings');
    this.developerSettings = document.getElementById('developer-settings');
    this.backButton = document.getElementById('settings-back-button');
    this.availableAddons = new Map();
    this.installedAddons = new Map();
    this.fetchInstalledAddonsDeferred = null;
    this.fetchAvailableAddonsDeferred = null;
    this.availableAddonsLastFetched = null;
    this.insertTitleElement(this.menu, 'Settings', '/optimized-images/settings-icon.png');
    this.insertTitleElement(this.domainSettings, 'Domain', '/optimized-images/domain-icon.png');
    this.insertTitleElement(this.userSettingsMain, 'Users', '/optimized-images/users-icon.png');
    this.insertTitleElement(this.userSettingsEdit, 'Edit User', '/optimized-images/user.svg');
    this.insertTitleElement(this.userSettingsAdd, 'Add User', '/optimized-images/user.svg');
    this.insertTitleElement(this.adapterSettings, 'Adapters', '/optimized-images/adapters-icon.png');
    this.insertTitleElement(this.addonMainSettings, 'Add-ons', '/optimized-images/add-on.svg');
    var addonConfigTitle = this.insertTitleElement(this.addonConfigSettings, 'Configure Add-on', '/optimized-images/add-on.svg');
    this.addonConfigTitleName = addonConfigTitle.querySelector('.section-title-name');
    this.insertTitleElement(this.addonDiscoverySettings, 'Discover New Add-ons', '/optimized-images/add-on.svg');
    this.insertTitleElement(this.experimentSettings, 'Experiments', '/optimized-images/experiments-icon.png');
    this.insertTitleElement(this.updateSettings, 'Updates', '/optimized-images/update-icon.svg');
    this.insertTitleElement(this.authorizationSettings, 'Authorizations', '/optimized-images/authorization.svg');
    this.insertTitleElement(this.developerSettings, 'Developer', '/optimized-images/developer-icon.svg');
    this.discoverAddonsButton.addEventListener('click', function () {
      page('/settings/addons/discovered');
    });
    this.addUserButton.addEventListener('click', function () {
      page('/settings/users/add');
    });
  },
  insertTitleElement: function insertTitleElement(section, name, icon) {
    var elt = document.createElement('div');
    elt.classList.add('section-title');
    elt.innerHTML = `
      <div class="section-title-back-flex"></div>
      <div class="section-title-container">
        <img class="section-title-icon" alt="${name} Icon" src="${icon}" />
        <span class="section-title-name">${name}</span>
      </div>
      <div class="section-title-speech-flex"></div>
    `;
    section.insertBefore(elt, section.firstChild);
    return elt;
  },
  show: function show(section, subsection, id) {
    document.getElementById('speech-wrapper').classList.remove('assistant');
    this.backButton.href = '/settings';
    this.view.classList.remove('dark');
    this.discoverAddonsButton.classList.add('hidden');
    this.addUserButton.classList.add('hidden');

    if (section) {
      this.showSection(section, subsection, id);
    } else {
      this.showMenu();
    }
  },
  showMenu: function showMenu() {
    App.showMenuButton();
    this.hideBackButton();
    this.menu.classList.remove('hidden');
    this.domainSettings.classList.add('hidden');
    this.userSettings.classList.add('hidden');
    this.userSettingsMain.classList.add('hidden');
    this.userSettingsEdit.classList.add('hidden');
    this.userSettingsAdd.classList.add('hidden');
    this.adapterSettings.classList.add('hidden');
    this.addonSettings.classList.add('hidden');
    this.addonMainSettings.classList.add('hidden');
    this.addonConfigSettings.classList.add('hidden');
    this.addonDiscoverySettings.classList.add('hidden');
    this.experimentSettings.classList.add('hidden');
    this.updateSettings.classList.add('hidden');
    this.authorizationSettings.classList.add('hidden');
    this.developerSettings.classList.add('hidden');
    this.discoverAddonsButton.classList.add('hidden');
    this.addUserButton.classList.add('hidden');
  },
  hideMenu: function hideMenu() {
    this.menu.classList.add('hidden');
  },
  showBackButton: function showBackButton() {
    this.backButton.classList.remove('hidden');
  },
  hideBackButton: function hideBackButton() {
    this.backButton.classList.add('hidden');
  },
  showSection: function showSection(section, subsection, id) {
    switch (section) {
      case 'domain':
        this.showDomainSettings();
        break;

      case 'users':
        if (subsection) {
          switch (subsection) {
            case 'edit':
              this.showEditUserScreen(id);
              break;

            case 'add':
              this.showAddUserScreen(id);
              break;

            default:
              console.error('Tried to display undefined subsection');
              return;
          }
        } else {
          this.showUserSettings();
        }

        break;

      case 'adapters':
        this.showAdapterSettings();
        break;

      case 'addons':
        if (subsection) {
          switch (subsection) {
            case 'discovered':
              this.showDiscoveredAddonsScreen();
              break;

            case 'config':
              this.showAddonConfigScreen(id);
              break;

            default:
              console.error('Tried to display undefined subsection');
              return;
          }
        } else {
          this.showAddonSettings();
        }

        break;

      case 'experiments':
        this.showExperimentSettings();
        break;

      case 'updates':
        this.showUpdateSettings();
        break;

      case 'authorizations':
        this.showAuthorizationSettings();
        break;

      case 'developer':
        this.showDeveloperSettings();
        break;

      default:
        console.error('Tried to display undefined section');
        return;
    }

    this.hideMenu();
    App.hideMenuButton();
    this.showBackButton();
  },
  showDomainSettings: function showDomainSettings() {
    var _this = this;

    this.domainSettings.classList.remove('hidden');
    var opts = {
      headers: API.headers()
    };
    var addDomainLocalButton = document.getElementById('domain-settings-local-update');
    var localDomainName = document.getElementById('domain-settings-local-name');
    var tunnelDomainName = document.getElementById('domain-settings-tunnel-name');
    addDomainLocalButton.addEventListener('click', this.onLocalDomainClick.bind(this)); // Comented out until full integration of Dynamic tunnel creation
    // with Service Discovery
    // const addDomainTunnelButton =
    //   document.getElementById('domain-settings-moz-tunnel-change');
    //     addDomainTunnelButton.addEventListener('click', () => {
    //     this.onTunnelDomainClick();
    // });

    fetch('/settings/tunnelinfo', opts).then(function (response) {
      return response.json();
    }).then(function (body) {
      var localDomainCheckbox = document.getElementById('domain-settings-local-checkbox');

      if (body) {
        localDomainCheckbox.checked = body.mDNSstate;
        localDomainName.value = body.localDomain;
        tunnelDomainName.innerText = body.tunnelDomain;
      } else {
        localDomainName.value = 'Unknown state.';
        tunnelDomainName.innerText = 'Unknown state.';
      }

      if (!localDomainCheckbox.checked) {
        localDomainName.disabled = true;
        addDomainLocalButton.disabled = true;
      }

      localDomainCheckbox.addEventListener('change', _this.onLocalDomainCheckboxChange.bind(_this));
    });
  },
  onLocalDomainCheckboxChange: function onLocalDomainCheckboxChange(e) {
    var error = document.getElementById('domain-settings-error');
    var value = e.target.checked ? true : false;
    fetch('/settings/domain', {
      method: 'PUT',
      body: JSON.stringify({
        local: {
          multicastDNSstate: value
        }
      }),
      headers: {
        Authorization: `Bearer ${window.API.jwt}`,
        Accept: 'application/json',
        'Content-Type': 'application/json'
      }
    }).then(function () {
      document.getElementById('domain-settings-local-update').disabled = !value;
      document.getElementById('domain-settings-local-name').disabled = !value;
      error.classList.add('hidden');
    }).catch(function (err) {
      var errorMessage = `Error: ${err}`;
      console.error(errorMessage);
      error.classList.remove('hidden');
      error.textContent = err;
      e.target.checked = !value;
      document.getElementById('domain-settings-local-update').disabled = value;
      document.getElementById('domain-settings-local-name').disabled = value;
    });
  },
  // The button controller to update the local domain settings.
  // In menu -> Settings -> Domain
  onLocalDomainClick: function onLocalDomainClick() {
    var localDomainName = document.getElementById('domain-settings-local-name');
    var error = document.getElementById('domain-settings-error');
    fetch('/settings/domain', {
      method: 'PUT',
      body: JSON.stringify({
        local: {
          localDNSname: localDomainName.value
        }
      }),
      headers: {
        Authorization: `Bearer ${API.jwt}`,
        Accept: 'application/json',
        'Content-Type': 'application/json'
      }
    }).then(function (response) {
      return response.json();
    }).then(function (domainJson) {
      // if the update was successful, we have a legit local domain and mDNS
      // is active then redirect
      if (domainJson.update && domainJson.localDomain.length > 0) {
        if (domainJson.mDNSstate) {
          App.showMessage('Update succeeded.', 3000);
        }
      } else {
        error.classList.remove('hidden');
        error.textContent = domainJson.error;
        document.getElementById('domain-settings-local-name').value = domainJson.localDomain;
      }
    }).catch(function (err) {
      var errorMessage = `Error: ${err}`;
      console.error(errorMessage);
      error.classList.remove('hidden');
      error.textContent = err;
    });
  },
  // The button controller to update the mozilla tunnel domain settings.
  // In menu -> Settings -> Domain. Removed until this feature is done
  // at a future point.
  // onTunnelDomainClick: function() {
  //   var tunnelDomainCheckbox = document.getElementById(
  //     'domain-settings-tunnel-checkbox');
  //   var tunnelDomainName = document.getElementById(
  //     'domain-settings-tunnel-name');
  //   var tunnelDomainEmail = document.getElementById(
  //     'domain-settings-tunnel-email');
  //   console.log('* tunnel domain checkbox is: ' +
  //                'tunnelDomainCheckbox.checked');
  //
  //   var data = {tunnelState: tunnelDomainCheckbox.checked,
  //               tunnelDNSname: tunnelDomainName.value,
  //               tunnelUserEmail: tunnelDomainEmail};
  //   console.log('* json data to send is: ' + JSON.stringify(data));
  //
  //
  //   fetch('/settings/setdomain', {
  //     body: JSON.stringify({answer: "42"}),
  //     headers: API.headers(),
  //     method: 'POST'
  //   })
  //     .then(function (response) {
  //     return response.json();
  //   })
  //     .then((domainJson) => {
  //
  //     console.log(domainJson);
  //   })
  //   .catch(function () {
  //     console.log('Error');
  //   });
  //
  // }
  showUserSettings: function showUserSettings() {
    this.userSettings.classList.remove('hidden');
    this.userSettingsEdit.classList.add('hidden');
    this.userSettingsAdd.classList.add('hidden');
    this.userSettingsMain.classList.remove('hidden');
    this.addUserButton.classList.remove('hidden');
    API.getAllUserInfo().then(function (users) {
      var usersList = document.getElementById('users-list');
      usersList.innerHTML = '';
      var _iteratorNormalCompletion = true;
      var _didIteratorError = false;
      var _iteratorError = undefined;

      try {
        for (var _iterator = users[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var metadata = _step.value;
          new User(metadata);
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return != null) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }
    });
  },
  showEditUserScreen: function showEditUserScreen(id) {
    this.backButton.href = '/settings/users';
    this.userSettings.classList.remove('hidden');
    this.userSettingsMain.classList.add('hidden');
    this.userSettingsAdd.classList.add('hidden');
    this.userSettingsEdit.classList.remove('hidden');
    this.view.classList.add('dark');
    API.getUser(id).then(function (user) {
      var form = document.getElementById('edit-user-form');
      var email = document.getElementById('user-settings-edit-email');
      var name = document.getElementById('user-settings-edit-name');
      var password = document.getElementById('user-settings-edit-password');
      var newPassword = document.getElementById('user-settings-edit-new-password');
      var confirmPassword = document.getElementById('user-settings-edit-confirm-password');
      var passwordMismatch = document.getElementById('user-settings-edit-password-mismatch');
      var error = document.getElementById('user-settings-edit-error');
      email.value = user.email;
      name.value = user.name;
      password.value = '';
      newPassword.value = '';
      confirmPassword.value = '';
      name.focus();
      form.addEventListener('submit', function (e) {
        e.preventDefault();
        error.classList.add('hidden');

        if (newPassword.value !== '' && newPassword.value !== confirmPassword.value) {
          passwordMismatch.classList.remove('hidden');
          return;
        } else {
          passwordMismatch.classList.add('hidden');
        }

        var emailValue = email.value;
        var nameValue = name.value;
        var passwordValue = password.value;
        var newPasswordValue = newPassword.value !== '' ? newPassword.value : null;
        API.editUser(id, nameValue, emailValue, passwordValue, newPasswordValue).then(function () {
          page('/settings/users');
        }).catch(function (err) {
          error.classList.remove('hidden');
          error.textContent = err.message;
          console.error(err);
        });
        return false;
      });
    });
  },
  showAddUserScreen: function showAddUserScreen() {
    this.backButton.href = '/settings/users';
    this.userSettings.classList.remove('hidden');
    this.userSettingsMain.classList.add('hidden');
    this.userSettingsEdit.classList.add('hidden');
    this.userSettingsAdd.classList.remove('hidden');
    this.view.classList.add('dark');
    var form = document.getElementById('add-user-form');
    var email = document.getElementById('user-settings-add-email');
    var name = document.getElementById('user-settings-add-name');
    var password = document.getElementById('user-settings-add-password');
    var confirmPassword = document.getElementById('user-settings-add-confirm-password');
    var passwordMismatch = document.getElementById('user-settings-add-password-mismatch');
    var error = document.getElementById('user-settings-add-error');
    email.value = '';
    name.value = '';
    password.value = '';
    confirmPassword.value = '';
    name.focus();
    form.addEventListener('submit', function (e) {
      e.preventDefault();
      error.classList.add('hidden');

      if (password.value !== confirmPassword.value) {
        passwordMismatch.classList.remove('hidden');
        return;
      } else {
        passwordMismatch.classList.add('hidden');
      }

      var emailValue = email.value;
      var nameValue = name.value;
      var passwordValue = password.value;
      API.addUser(nameValue, emailValue, passwordValue).then(function () {
        page('/settings/users');
      }).catch(function (err) {
        error.classList.remove('hidden');
        error.textContent = err.message;
        console.error(err);
      });
      return false;
    });
  },
  showAdapterSettings: function showAdapterSettings() {
    this.adapterSettings.classList.remove('hidden');
    var opts = {
      headers: API.headers()
    }; // Fetch a list of adapters from the server

    fetch('/adapters', opts).then(function (response) {
      return response.json();
    }).then(function (adapters) {
      var noAdapters = document.getElementById('no-adapters');
      var adaptersList = document.getElementById('adapters-list');
      adaptersList.innerHTML = '';

      if (adapters.length == 0) {
        noAdapters.classList.remove('hidden');
        adaptersList.classList.add('hidden');
      } else {
        noAdapters.classList.add('hidden');
        adaptersList.classList.remove('hidden');
        var _iteratorNormalCompletion2 = true;
        var _didIteratorError2 = false;
        var _iteratorError2 = undefined;

        try {
          for (var _iterator2 = adapters[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
            var metadata = _step2.value;
            new Adapter(metadata);
          }
        } catch (err) {
          _didIteratorError2 = true;
          _iteratorError2 = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion2 && _iterator2.return != null) {
              _iterator2.return();
            }
          } finally {
            if (_didIteratorError2) {
              throw _iteratorError2;
            }
          }
        }
      }
    });
  },
  fetchInstalledAddonList: function fetchInstalledAddonList(force) {
    var _this2 = this;

    if (force) {
      this.fetchInstalledAddonsDeferred = null;
    }

    if (this.fetchInstalledAddonsDeferred) {
      return this.fetchInstalledAddonsDeferred.catch(function () {
        _this2.fetchInstalledAddonsDeferred = null;
        return _this2.fetchInstalledAddonList();
      });
    }

    this.fetchInstalledAddonsDeferred = fetch('/addons', {
      headers: API.headers()
    }).then(function (response) {
      return response.json();
    }).then(function (body) {
      if (!body) {
        return;
      } // Store a map of name->version.


      _this2.installedAddons.clear();

      var _iteratorNormalCompletion3 = true;
      var _didIteratorError3 = false;
      var _iteratorError3 = undefined;

      try {
        for (var _iterator3 = body[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
          var s = _step3.value;

          try {
            var settings = JSON.parse(s.value);

            _this2.installedAddons.set(settings.name, settings);
          } catch (err) {
            console.error(`Failed to parse add-on settings: ${err}`);
          }
        }
      } catch (err) {
        _didIteratorError3 = true;
        _iteratorError3 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion3 && _iterator3.return != null) {
            _iterator3.return();
          }
        } finally {
          if (_didIteratorError3) {
            throw _iteratorError3;
          }
        }
      }
    });
    return this.fetchInstalledAddonsDeferred;
  },
  fetchAvailableAddonList: function fetchAvailableAddonList(force) {
    var _this3 = this;

    // Force a refresh of this list every 5 minutes in order to pick up
    // updates in long-running tabs.
    if (!this.availableAddonsLastFetched || new Date() - this.availableAddonsLastFetched > 5 * 60 * 1000) {
      force = true;
    }

    if (force) {
      this.fetchAvailableAddonsDeferred = null;
    }

    if (this.fetchAvailableAddonsDeferred) {
      return this.fetchAvailableAddonsDeferred.catch(function () {
        _this3.fetchAvailableAddonsDeferred = null;
        return _this3.fetchAvailableAddonList();
      });
    }

    this.fetchAvailableAddonsDeferred = fetch('/settings/addonsInfo', {
      headers: API.headers()
    }).then(function (response) {
      return response.json();
    }).then(function (data) {
      if (!data || !data.url || !data.api || !data.architecture || !data.version || !data.nodeVersion) {
        return;
      }

      var params = new URLSearchParams();
      params.set('api', data.api);
      params.set('arch', data.architecture);
      params.set('version', data.version);
      params.set('node', data.nodeVersion);

      if (data.pythonVersions && data.pythonVersions.length > 0) {
        params.set('python', data.pythonVersions.join(','));
      }

      if (data.testAddons) {
        params.set('test', '1');
      }

      return fetch(`${data.url}?${params.toString()}`, {
        method: 'GET',
        cache: 'reload',
        headers: {
          Accept: 'application/json'
        }
      });
    }).then(function (resp) {
      return resp.json();
    }).then(function (body) {
      _this3.availableAddons.clear();

      var _iteratorNormalCompletion4 = true;
      var _didIteratorError4 = false;
      var _iteratorError4 = undefined;

      try {
        for (var _iterator4 = body[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {
          var addon = _step4.value;
          var entry = {
            name: addon.name,
            displayName: addon.display_name,
            description: addon.description,
            author: addon.author,
            homepage: addon.homepage,
            version: addon.version,
            url: addon.url,
            checksum: addon.checksum,
            installed: _this3.installedAddons.has(addon.name)
          };

          _this3.availableAddons.set(addon.name, entry);
        }
      } catch (err) {
        _didIteratorError4 = true;
        _iteratorError4 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion4 && _iterator4.return != null) {
            _iterator4.return();
          }
        } finally {
          if (_didIteratorError4) {
            throw _iteratorError4;
          }
        }
      }
    });
    return this.fetchAvailableAddonsDeferred;
  },
  showAddonSettings: function showAddonSettings() {
    var _this4 = this;

    this.addonSettings.classList.remove('hidden');
    this.addonConfigSettings.classList.add('hidden');
    this.addonDiscoverySettings.classList.add('hidden');
    this.addonConfigSettings.classList.add('hidden');
    this.addonMainSettings.classList.remove('hidden');
    this.discoverAddonsButton.classList.remove('hidden');
    var components = new Map(); // First, get the list of installed add-ons. Do this separately so that the
    // add-ons can be displayed when no internet connection is present.

    this.fetchInstalledAddonList(true).then(function () {
      var addonList = document.getElementById('installed-addons-list');
      addonList.innerHTML = '';
      var _iteratorNormalCompletion5 = true;
      var _didIteratorError5 = false;
      var _iteratorError5 = undefined;

      try {
        for (var _iterator5 = Array.from(_this4.installedAddons.keys()).sort()[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {
          var name = _step5.value;

          var addon = _this4.installedAddons.get(name);

          components.set(name, new InstalledAddon(addon, _this4.installedAddons, _this4.availableAddons));
        } // Now, we can attempt to get the list of available add-ons.

      } catch (err) {
        _didIteratorError5 = true;
        _iteratorError5 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion5 && _iterator5.return != null) {
            _iterator5.return();
          }
        } finally {
          if (_didIteratorError5) {
            throw _iteratorError5;
          }
        }
      }

      return _this4.fetchAvailableAddonList(true);
    }).then(function () {
      // Compare versions of installed and available add-ons, signaling
      // available updates where necessary.
      var _iteratorNormalCompletion6 = true;
      var _didIteratorError6 = false;
      var _iteratorError6 = undefined;

      try {
        for (var _iterator6 = Array.from(_this4.installedAddons.keys()).sort()[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {
          var name = _step6.value;

          var addon = _this4.installedAddons.get(name);

          if (_this4.availableAddons.has(name)) {
            var available = _this4.availableAddons.get(name);

            var cmp = _this4.compareSemver(addon.version, available.version);

            if (cmp < 0) {
              var component = components.get(name);

              if (component) {
                component.setUpdateAvailable(available.url, available.version, available.checksum);
              }
            }
          }
        }
      } catch (err) {
        _didIteratorError6 = true;
        _iteratorError6 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion6 && _iterator6.return != null) {
            _iterator6.return();
          }
        } finally {
          if (_didIteratorError6) {
            throw _iteratorError6;
          }
        }
      }
    }).catch(console.error);
  },
  showAddonConfigScreen: function showAddonConfigScreen(id) {
    var _this5 = this;

    this.backButton.href = '/settings/addons';
    this.addonSettings.classList.remove('hidden');
    this.addonMainSettings.classList.add('hidden');
    this.addonConfigSettings.classList.remove('hidden');
    this.addonDiscoverySettings.classList.add('hidden');
    this.addonConfigTitleName.textContent = `Configure ${id}`;
    this.view.classList.add('dark'); // Force an update in case the add-on was previously updated.

    this.fetchInstalledAddonList(true).then(function () {
      var existingForm = _this5.addonConfigSettings.querySelector('.json-schema-form');

      if (existingForm) {
        existingForm.parentNode.removeChild(existingForm);
      }

      var addon = _this5.installedAddons.get(id);

      new AddonConfig(id, addon);
    }).catch(console.error);
  },
  showDiscoveredAddonsScreen: function showDiscoveredAddonsScreen() {
    var _this6 = this;

    this.backButton.href = '/settings/addons';
    this.addonSettings.classList.remove('hidden');
    this.addonMainSettings.classList.add('hidden');
    this.addonConfigSettings.classList.add('hidden');
    this.addonDiscoverySettings.classList.remove('hidden');
    this.view.classList.add('dark');
    this.fetchInstalledAddonList(false).then(function () {
      return _this6.fetchAvailableAddonList(false);
    }).then(function () {
      var addonList = document.getElementById('discovered-addons-list');
      addonList.innerHTML = '';
      Array.from(_this6.availableAddons.entries()).sort(function (a, b) {
        return a[1].displayName.localeCompare(b[1].displayName);
      }).forEach(function (x) {
        return new DiscoveredAddon(x[1], _this6.installedAddons, _this6.availableAddons);
      });
    }).catch(console.error);
  },
  showExperimentCheckbox: function showExperimentCheckbox(experiment, checkboxId) {
    var checkbox = document.getElementById(checkboxId);
    API.getExperimentSetting(experiment).then(function (value) {
      checkbox.checked = value;
    }).catch(function (e) {
      console.error(`Error getting ${experiment} experiment setting ${e}`);
    });
    checkbox.addEventListener('change', function (e) {
      var value = e.target.checked ? true : false;
      API.setExperimentSetting(experiment, value).then(function () {
        if (value) {
          Menu.showItem(experiment);
        } else {
          Menu.hideItem(experiment);
        }
      }).catch(function (e) {
        console.error(`Failed to enable ${experiment} experiment: ${e}`);
      });
    });
  },
  showExperimentSettings: function showExperimentSettings() {
    this.experimentSettings.classList.remove('hidden');
    this.showExperimentCheckbox('assistant', 'assistant-experiment-checkbox');
  },

  /**
   * Compare two semantic versions
   * @param {String} verA
   * @param {String} verB
   * @return {number} 0 if verA == verB, -1 if verA < verB, 1 if verA > verB
   */
  compareSemver: function compareSemver(verA, verB) {
    if (verA === verB) {
      return 0;
    }

    function parsePart(part) {
      return parseInt(part, 10);
    }

    var partsA = verA.split('.').map(parsePart);
    var partsB = verB.split('.').map(parsePart);

    for (var i = 0; i < partsA.length; i++) {
      var partA = partsA[i];
      var partB = partsB[i];

      if (partA === partB) {
        continue;
      }

      if (partA < partB) {
        return -1;
      }

      return 1;
    }

    return 0;
  },
  showUpdateSettings: function showUpdateSettings() {
    this.updateSettings.classList.remove('hidden');
    var updateNow = document.getElementById('update-now');
    updateNow.addEventListener('click', this.onUpdateClick);
    this.fetchUpdateInfo();
  },
  fetchUpdateInfo: function fetchUpdateInfo() {
    var _this7 = this;

    var upToDateElt = document.getElementById('update-settings-up-to-date');
    var updateNow = document.getElementById('update-now');
    var versionElt = document.getElementById('update-settings-version');
    var statusElt = document.getElementById('update-settings-status');
    var fetches = Promise.all([API.getUpdateStatus(), API.getUpdateLatest()]);
    fetches.then(function (results) {
      var status = results[0];
      var latest = results[1];
      var cmp = 0;

      if (latest.version) {
        cmp = _this7.compareSemver(status.version, latest.version);
      }

      if (cmp < 0) {
        // Update available
        upToDateElt.textContent = 'New version available';
        updateNow.classList.remove('hidden');
        updateNow.classList.remove('disabled');
      } else {
        // All up to date!
        upToDateElt.textContent = 'Your system is up to date';
        updateNow.classList.add('hidden');
      }

      versionElt.textContent = `Current version: ${Utils.escapeHtml(status.version)}`;
      var statusText = 'Last update: ';

      if (status.timestamp) {
        statusText += new Date(status.timestamp).toString();

        if (!status.success) {
          statusText += ' (failed)';
        }
      } else {
        statusText += 'Never';
      }

      statusElt.textContent = statusText;
    });
  },
  onUpdateClick: function onUpdateClick() {
    var updateNow = document.getElementById('update-now');
    updateNow.removeEventListener('click', this.onUpdateClick);
    updateNow.classList.add('disabled');
    fetch('/updates/update', {
      headers: API.headers(),
      method: 'POST'
    }).then(function () {
      updateNow.textContent = 'In Progress';
      var isDown = false;

      function checkStatus() {
        API.getUpdateStatus().then(function () {
          if (isDown) {
            window.location.reload(true);
          } else {
            setTimeout(checkStatus, 5000);
          }
        }).catch(function () {
          if (!isDown) {
            updateNow.textContent = 'Restarting';
            isDown = true;
          }

          setTimeout(checkStatus, 5000);
        });
      }

      checkStatus();
    }).catch(function () {
      updateNow.textContent = 'Error';
    });
  },
  showAuthorizationSettings: function showAuthorizationSettings() {
    var _this8 = this;

    this.authorizationSettings.classList.remove('hidden');
    fetch('/authorizations', {
      headers: API.headers()
    }).then(function (response) {
      return response.json();
    }).then(function (clients) {
      var authorizationsList = document.getElementById('authorizations');
      var noAuthorizations = document.getElementById('no-authorizations');
      var _iteratorNormalCompletion7 = true;
      var _didIteratorError7 = false;
      var _iteratorError7 = undefined;

      try {
        for (var _iterator7 = authorizationsList.children[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {
          var child = _step7.value;

          if (child.id === 'no-authorizations' || child.id === 'new-local-authorization') {
            continue;
          }

          child.parentNode.removeChild(child);
        }
      } catch (err) {
        _didIteratorError7 = true;
        _iteratorError7 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion7 && _iterator7.return != null) {
            _iterator7.return();
          }
        } finally {
          if (_didIteratorError7) {
            throw _iteratorError7;
          }
        }
      }

      if (clients.length === 0) {
        noAuthorizations.classList.remove('hidden');
        return;
      }

      noAuthorizations.classList.add('hidden');
      var _iteratorNormalCompletion8 = true;
      var _didIteratorError8 = false;
      var _iteratorError8 = undefined;

      try {
        for (var _iterator8 = clients[Symbol.iterator](), _step8; !(_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done); _iteratorNormalCompletion8 = true) {
          var client = _step8.value;
          var authorization = document.createElement('li');
          authorization.classList.add('authorization-item');
          var name = document.createElement('p');
          name.textContent = client.name;
          var origin = document.createElement('p');
          origin.classList.add('origin');
          origin.textContent = new URL(client.redirect_uri).host;
          var revoke = document.createElement('input');
          revoke.classList.add('revoke-button', 'text-button');
          revoke.type = 'button';
          revoke.value = 'Revoke';
          revoke.dataset.clientId = client.id;
          revoke.addEventListener('click', _this8.revokeAuthorization);
          authorization.appendChild(name);
          authorization.appendChild(origin);
          authorization.appendChild(revoke);
          authorizationsList.insertBefore(authorization, noAuthorizations);
        }
      } catch (err) {
        _didIteratorError8 = true;
        _iteratorError8 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion8 && _iterator8.return != null) {
            _iterator8.return();
          }
        } finally {
          if (_didIteratorError8) {
            throw _iteratorError8;
          }
        }
      }
    });
  },
  revokeAuthorization: function revokeAuthorization(event) {
    var revoke = event.target;

    if (!revoke.dataset.clientId) {
      console.warn('Missing clientId on revoke', revoke);
      return;
    }

    var clientId = revoke.dataset.clientId;
    fetch(`/authorizations/${encodeURIComponent(clientId)}`, {
      headers: API.headers(),
      method: 'DELETE'
    }).then(function () {
      var authorization = revoke.parentNode;
      var authorizationsList = authorization.parentNode;
      authorizationsList.removeChild(authorization);

      if (authorizationsList.children.length === 0) {
        var noAuthorizations = document.getElementById('no-authorizations');
        noAuthorizations.classList.remove('hidden');
      }
    }).catch(function (err) {
      console.warn('Unable to revoke', err);
    });
  },
  showDeveloperSettings: function showDeveloperSettings() {
    this.developerSettings.classList.remove('hidden');
    document.getElementById('view-logs').href = `/logs?jwt=${API.jwt}`;
    var sshCheckbox = document.getElementById('enable-ssh-checkbox');
    fetch('/settings/system/ssh', {
      headers: API.headers()
    }).then(function (response) {
      return response.json();
    }).then(function (body) {
      sshCheckbox.checked = body.enabled;

      if (body.toggleImplemented) {
        sshCheckbox.addEventListener('change', function (e) {
          var value = e.target.checked ? true : false;
          fetch('/settings/system/ssh', {
            method: 'PUT',
            headers: {
              Authorization: `Bearer ${API.jwt}`,
              Accept: 'application/json',
              'Content-Type': 'application/json'
            },
            body: JSON.stringify({
              enabled: value
            })
          }).catch(function (e) {
            console.error(`Failed to toggle SSH: ${e}`);
          });
        });
      } else {
        sshCheckbox.disabled = true;
      }
    }).catch(function (e) {
      console.error(`Error getting SSH setting: ${e}`);
    });
  }
};
module.exports = SettingsScreen;

/***/ }),

/***/ "./static/js/smart-plug.js":
/*!*********************************!*\
  !*** ./static/js/smart-plug.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Smart Plug.
 *
 * UI element representing a smart plug with an on/off switch and
 * energy monitoring functionality.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */


__webpack_require__(/*! core-js/modules/es6.reflect.get */ "./node_modules/core-js/modules/es6.reflect.get.js");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (typeof call === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var OnOffSwitch = __webpack_require__(/*! ./on-off-switch */ "./static/js/on-off-switch.js");

var SmartPlug =
/*#__PURE__*/
function (_OnOffSwitch) {
  _inherits(SmartPlug, _OnOffSwitch);

  /**
   * SmartPlug Constructor (extends OnOffSwitch).
   *
   * @param {Object} description Thing description object.
   * @param {Number} format See Constants.ThingFormat
   */
  function SmartPlug(model, description, format) {
    _classCallCheck(this, SmartPlug);

    return _possibleConstructorReturn(this, _getPrototypeOf(SmartPlug).call(this, model, description, format, {
      baseIcon: '/optimized-images/thing-icons/smart_plug.svg'
    }));
  }
  /**
   * Find any properties required for this view.
   */


  _createClass(SmartPlug, [{
    key: "findProperties",
    value: function findProperties() {
      _get(_getPrototypeOf(SmartPlug.prototype), "findProperties", this).call(this);

      this.powerProperty = null; // Look for properties by type first.

      for (var name in this.displayedProperties) {
        var type = this.displayedProperties[name].property['@type'];

        if (type === 'InstantaneousPowerProperty') {
          this.powerProperty = name;
          break;
        }
      } // If necessary, match on name.


      if (this.powerProperty === null && this.displayedProperties.hasOwnProperty('instantaneousPower')) {
        this.powerProperty = 'instantaneousPower';
      }
    }
  }, {
    key: "updateProperty",

    /**
     * Update the display for the provided property.
     * @param {string} name - name of the property
     * @param {*} value - value of the property
     */
    value: function updateProperty(name, value) {
      _get(_getPrototypeOf(SmartPlug.prototype), "updateProperty", this).call(this, name, value);

      if (!this.displayedProperties.hasOwnProperty(name)) {
        return;
      }

      if (name === this.powerProperty) {
        value = parseFloat(value);
        this.icon.power = value;
      }
    }
  }, {
    key: "iconView",
    value: function iconView() {
      var power = '';

      if (this.powerProperty !== null) {
        power = 'data-have-power="true"';
      }

      return `
      <webthing-smart-plug-capability ${power}>
      </webthing-smart-plug-capability>`;
    }
  }, {
    key: "icon",
    get: function get() {
      return this.element.querySelector('webthing-smart-plug-capability');
    }
  }]);

  return SmartPlug;
}(OnOffSwitch);

module.exports = SmartPlug;

/***/ }),

/***/ "./static/js/speech.js":
/*!*****************************!*\
  !*** ./static/js/speech.js ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Speech Recognition Helper.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */


__webpack_require__(/*! core-js/modules/es6.typed.float32-array */ "./node_modules/core-js/modules/es6.typed.float32-array.js");

__webpack_require__(/*! core-js/modules/es6.array.sort */ "./node_modules/core-js/modules/es6.array.sort.js");

__webpack_require__(/*! core-js/modules/es7.symbol.async-iterator */ "./node_modules/core-js/modules/es7.symbol.async-iterator.js");

__webpack_require__(/*! core-js/modules/es6.symbol */ "./node_modules/core-js/modules/es6.symbol.js");

__webpack_require__(/*! core-js/modules/web.dom.iterable */ "./node_modules/core-js/modules/web.dom.iterable.js");

var App = __webpack_require__(/*! ./app */ "./static/js/app.js");

var AssistantScreen = __webpack_require__(/*! ./assistant */ "./static/js/assistant.js"); // eslint-disable-next-line no-unused-vars


var Speech = {
  /**
   * Initialise menu.
   */
  init: function init() {
    var _this = this;

    this.wrapper = document.getElementById('speech-wrapper');
    this.levels = document.getElementById('stm-levels');
    this.assistantLevels = document.getElementById('assistant-stm-levels');
    this.speechButtons = [];
    this.addSpeechButton(document.getElementById('speech-button'));
    this.addSpeechButton(document.getElementById('assistant-speech-button')); // Dynamic loading

    __webpack_require__.e(/*! import() | stm_web.min.js */ "vendors~stm_web.min.js").then(__webpack_require__.t.bind(null, /*! speaktome-api/build/stm_web.min.js */ "./node_modules/speaktome-api/build/stm_web.min.js", 7)).then(function (SpeakToMe) {
      _this.stm = SpeakToMe.default({
        listener: _this.listener.bind(_this)
      });
    });
    this.listening = false;
    window.requestAnimationFrame(function () {
      var levelsStyle = window.getComputedStyle(_this.levels);
      _this.levels.width = parseFloat(levelsStyle.width);
      _this.levels.height = parseFloat(levelsStyle.height);
      var assistantLevelsStyle = window.getComputedStyle(_this.assistantLevels);
      _this.assistantLevels.width = parseFloat(assistantLevelsStyle.width);
      _this.assistantLevels.height = parseFloat(assistantLevelsStyle.height);
    });
  },
  addSpeechButton: function addSpeechButton(speechButton) {
    speechButton.addEventListener('click', this.listen.bind(this));
    this.speechButtons.push(speechButton);
  },

  /**
  * Starts listening
  */
  listen: function listen() {
    if (!this.stm) {
      return;
    }

    if (this.listening) {
      this.listening = false;
      this.stm.stop();
      var _iteratorNormalCompletion = true;
      var _didIteratorError = false;
      var _iteratorError = undefined;

      try {
        for (var _iterator = this.speechButtons[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var speechButton = _step.value;
          speechButton.classList.remove('active');
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return != null) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }
    } else {
      var _iteratorNormalCompletion2 = true;
      var _didIteratorError2 = false;
      var _iteratorError2 = undefined;

      try {
        for (var _iterator2 = this.speechButtons[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
          var _speechButton = _step2.value;

          _speechButton.classList.add('active');
        }
      } catch (err) {
        _didIteratorError2 = true;
        _iteratorError2 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {
            _iterator2.return();
          }
        } finally {
          if (_didIteratorError2) {
            throw _iteratorError2;
          }
        }
      }

      this.stm.listen();
      this.listening = true;
    }
  },

  /**
   * Listener for the api. Receives a msg containing the current state
   * @param msg
   */
  listener: function listener(msg) {
    var assistantMode = this.wrapper.classList.contains('assistant');

    if (msg.state === 'result') {
      var displayNotification = function displayNotification(msg, audio) {
        App.showMessage(msg, 3000);
        new Audio(`/audio/${encodeURIComponent(audio)}.mp3`).play();
      };

      this.assistantLevels.classList.add('hidden');
      this.levels.classList.add('hidden');
      var _iteratorNormalCompletion3 = true;
      var _didIteratorError3 = false;
      var _iteratorError3 = undefined;

      try {
        for (var _iterator3 = this.speechButtons[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
          var speechButton = _step3.value;
          speechButton.classList.remove('active');
        } // sort results to get the one with the highest confidence

      } catch (err) {
        _didIteratorError3 = true;
        _iteratorError3 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion3 && _iterator3.return != null) {
            _iterator3.return();
          }
        } finally {
          if (_didIteratorError3) {
            throw _iteratorError3;
          }
        }
      }

      var results = msg.data.sort(function (a, b) {
        return b.confidence - a.confidence;
      });

      if (results.length < 1) {
        if (assistantMode) {
          AssistantScreen.displayMessage('Sorry, I didn\'t get that.', 'incoming');
        } else {
          displayNotification('Sorry, I didn\'t get that', 'failure');
        }

        console.error('Error: (results.length <= 1)');
        return;
      }

      console.debug(results[0].text, results[0].confidence);
      AssistantScreen.displayMessage(results[0].text, 'outgoing');
      var cmd = AssistantScreen.submitCommand(results[0].text);

      if (assistantMode) {
        return;
      }

      cmd.then(function (_ref) {
        var message = _ref.message,
            success = _ref.success;
        displayNotification(message, success ? 'success' : 'failure');
      });
    } else if (msg.state === 'ready') {
      this.listening = false;
    } else if (msg.state === 'listening') {
      var mediaStream = this.stm.getmediaStream();

      if (mediaStream) {
        if (assistantMode) {
          this.assistantLevels.classList.remove('hidden');
        } else {
          this.levels.classList.remove('hidden');
        } // Build the WebAudio graph we'll be using


        this.audioContext = new AudioContext();
        this.sourceNode = this.audioContext.createMediaStreamSource(mediaStream);
        this.analyzerNode = this.audioContext.createAnalyser();
        this.outputNode = this.audioContext.createMediaStreamDestination(); // make sure we're doing mono everywhere

        this.sourceNode.channelCount = 1;
        this.analyzerNode.channelCount = 1;
        this.outputNode.channelCount = 1; // connect the nodes together

        this.sourceNode.connect(this.analyzerNode);
        this.analyzerNode.connect(this.outputNode);
        this.visualize(this.analyzerNode);
      }
    } else if (msg.state === 'processing') {
      this.analyzerNode.disconnect(this.outputNode);
      this.sourceNode.disconnect(this.analyzerNode);
      this.audioContext.close();
    }
  },
  // Helper to handle background visualization
  visualize: function visualize(analyzerNode) {
    var api = this;
    var MIN_DB_LEVEL = -85; // The dB level that's 0 in the display

    var MAX_DB_LEVEL = -30; // The dB level that's 100% in the  display
    // Set up the analyzer node, and allocate an array for its data
    // FFT size 64 gives us 32 bins. But those bins hold frequencies up to
    // 22kHz or more, and we only care about visualizing lower frequencies
    // which is where most human voice lies, so we use fewer bins

    analyzerNode.fftSize = 64;
    var frequencyBins = new Float32Array(14);
    var assistantMode = this.wrapper.classList.contains('assistant');
    var levels = this.levels;

    if (assistantMode) {
      levels = this.assistantLevels;
    }

    var xPos = levels.width / 2;
    var yPos = levels.height / 2;

    if (!assistantMode) {
      xPos = levels.width - 20 - 56 / 2;
      yPos = 20 + 56 / 2;
    }

    var context = levels.getContext('2d'); // Clear the canvas

    context.clearRect(0, 0, levels.width, levels.height);

    if (levels.classList.contains('hidden')) {
      return; // If we've been hidden, return right away
    } // Get the FFT data


    analyzerNode.getFloatFrequencyData(frequencyBins); // Display it as a barchart.
    // Drop bottom few bins, since they are often misleadingly high

    var skip = 2;
    var n = frequencyBins.length - skip;
    var dbRange = MAX_DB_LEVEL - MIN_DB_LEVEL;
    var diameterMin = levels.height / 10;
    var diameterMax = levels.height;

    if (!assistantMode) {
      diameterMin = 60;
    } // Loop through the values and draw the bars


    context.strokeStyle = '#d1d2d3';

    for (var i = 0; i < n; i++) {
      var value = frequencyBins[i + skip];
      var diameter = levels.height * (value - MIN_DB_LEVEL) / dbRange * 3 - 70;

      if (assistantMode) {
        diameter = levels.height * (value - MIN_DB_LEVEL) / dbRange * 3;
      }

      if (diameter < 0) {
        continue;
      } // Display a bar for this value.


      var alpha = diameter / levels.height;

      if (alpha > 0.2) {
        alpha = 0.2;
      } else if (alpha < 0.1) {
        alpha = 0.1;
      }

      context.lineWidth = alpha * alpha * 150;
      context.globalAlpha = alpha * alpha * 5;

      if (diameter > diameterMin && diameter < diameterMax) {
        context.beginPath();
        context.ellipse(xPos, yPos, diameter / 2, diameter / 2, 0, 0, 2 * Math.PI);
        context.stroke();
      }
    } // Update the visualization the next time we can


    requestAnimationFrame(function () {
      api.visualize(analyzerNode);
    });
  }
};
module.exports = Speech;

/***/ }),

/***/ "./static/js/thing-detail-layout.js":
/*!******************************************!*\
  !*** ./static/js/thing-detail-layout.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function ThingDetailLayout(parent, elements) {
  this.elements = elements;
  this.svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');
  this.svg.classList.add('thing-detail-layout-links');
  var things = document.getElementById('things');
  things.insertBefore(this.svg, things.firstChild);
  this.doLayout = this.doLayout.bind(this);
  this.doLayout();
  parent.registerEventListener(window, 'resize', this.doLayout);
}
/**
 * Adjust the X and Y coordinates such that the line ends on the outer radius
 * of the circular icon.
 *
 * @param {number} angle - The calculated angle of the line
 * @param {number} radius - The radius of the circular icon
 * @return {Object} Object containing adjustments as such: {x, y}
 */


ThingDetailLayout.prototype.adjustXY = function (angle, radius) {
  var x = 0,
      y = 0;

  if (angle < Math.PI / 2) {
    x = Math.cos(angle) * radius;
    y = Math.sin(angle) * radius;
  } else if (angle < Math.PI) {
    var theta = Math.PI - angle;
    x = -(Math.cos(theta) * radius);
    y = Math.sin(theta) * radius;
  } else if (angle < 3 * Math.PI / 2) {
    var _theta = 3 * Math.PI / 2 - angle;

    x = -(Math.sin(_theta) * radius);
    y = -(Math.cos(_theta) * radius);
  } else {
    var _theta2 = 2 * Math.PI - angle;

    x = Math.cos(_theta2) * radius;
    y = -(Math.sin(_theta2) * radius);
  }

  return {
    x: x,
    y: y
  };
};

ThingDetailLayout.prototype.doLayout = function () {
  var xScale = 300;
  var yScale = 300;
  var centerRadius = 64;
  var outerRadius = 51;
  var angleStart = 0;
  var circlePadding = 70;
  var limitedXScale = window.innerWidth / 2 - circlePadding;

  if (limitedXScale < xScale) {
    xScale = Math.max(120, limitedXScale);
  }

  var limitedYScale = (window.innerHeight - 96) / 2 - circlePadding; // The title bar takes up 9.6rem from the top

  if (limitedYScale < yScale) {
    yScale = Math.max(135, limitedYScale);
  }

  this.svg.setAttribute('width', xScale * 2);
  this.svg.setAttribute('height', yScale * 2);
  this.svg.innerHTML = '';

  for (var i = 0; i < this.elements.length; i++) {
    var angle = i / this.elements.length * 2 * Math.PI + angleStart;
    var x = xScale * Math.cos(angle);
    var y = yScale * Math.sin(angle);
    var actualAngle = Math.atan2(y, x);

    if (actualAngle < 0) {
      actualAngle += 2 * Math.PI;
    }

    var point1Adjust = this.adjustXY(actualAngle, centerRadius);
    var point2Adjust = this.adjustXY((actualAngle + Math.PI) % (2 * Math.PI), outerRadius);
    this.elements[i].style.transform = `translate(${x}px, ${y}px)`;
    var line = document.createElementNS('http://www.w3.org/2000/svg', 'line');
    line.classList.add('thing-detail-layout-link');
    line.setAttribute('x1', xScale + point1Adjust.x);
    line.setAttribute('y1', yScale + point1Adjust.y);
    line.setAttribute('x2', x + xScale + point2Adjust.x);
    line.setAttribute('y2', y + yScale + point2Adjust.y);
    this.svg.appendChild(line);
  }
};

module.exports = ThingDetailLayout;

/***/ }),

/***/ "./static/js/thing.js":
/*!****************************!*\
  !*** ./static/js/thing.js ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Thing.
 *
 * Represents an individual web thing.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */


__webpack_require__(/*! core-js/modules/es7.object.values */ "./node_modules/core-js/modules/es7.object.values.js");

__webpack_require__(/*! core-js/modules/es7.array.includes */ "./node_modules/core-js/modules/es7.array.includes.js");

__webpack_require__(/*! core-js/modules/es6.regexp.split */ "./node_modules/core-js/modules/es6.regexp.split.js");

__webpack_require__(/*! core-js/modules/es7.symbol.async-iterator */ "./node_modules/core-js/modules/es7.symbol.async-iterator.js");

__webpack_require__(/*! core-js/modules/es6.symbol */ "./node_modules/core-js/modules/es6.symbol.js");

__webpack_require__(/*! core-js/modules/web.dom.iterable */ "./node_modules/core-js/modules/web.dom.iterable.js");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var ActionDetail = __webpack_require__(/*! ./property-detail/action */ "./static/js/property-detail/action.js");

var App = __webpack_require__(/*! ./app */ "./static/js/app.js");

var BooleanDetail = __webpack_require__(/*! ./property-detail/boolean */ "./static/js/property-detail/boolean.js");

var BrightnessDetail = __webpack_require__(/*! ./property-detail/brightness */ "./static/js/property-detail/brightness.js");

var ColorDetail = __webpack_require__(/*! ./property-detail/color */ "./static/js/property-detail/color.js");

var ColorTemperatureDetail = __webpack_require__(/*! ./property-detail/color-temperature */ "./static/js/property-detail/color-temperature.js");

var Constants = __webpack_require__(/*! ./constants */ "./static/js/constants.js");

var CurrentDetail = __webpack_require__(/*! ./property-detail/current */ "./static/js/property-detail/current.js");

var EnumDetail = __webpack_require__(/*! ./property-detail/enum */ "./static/js/property-detail/enum.js");

var FrequencyDetail = __webpack_require__(/*! ./property-detail/frequency */ "./static/js/property-detail/frequency.js");

var InstantaneousPowerDetail = __webpack_require__(/*! ./property-detail/instantaneous-power */ "./static/js/property-detail/instantaneous-power.js");

var LevelDetail = __webpack_require__(/*! ./property-detail/level */ "./static/js/property-detail/level.js");

var MotionDetail = __webpack_require__(/*! ./property-detail/motion */ "./static/js/property-detail/motion.js");

var NumberDetail = __webpack_require__(/*! ./property-detail/number */ "./static/js/property-detail/number.js");

var OnOffDetail = __webpack_require__(/*! ./property-detail/on-off */ "./static/js/property-detail/on-off.js");

var OpenDetail = __webpack_require__(/*! ./property-detail/open */ "./static/js/property-detail/open.js");

var PushedDetail = __webpack_require__(/*! ./property-detail/pushed */ "./static/js/property-detail/pushed.js");

var StringDetail = __webpack_require__(/*! ./property-detail/string */ "./static/js/property-detail/string.js");

var ThingDetailLayout = __webpack_require__(/*! ./thing-detail-layout */ "./static/js/thing-detail-layout.js");

var Utils = __webpack_require__(/*! ./utils */ "./static/js/utils.js");

var VoltageDetail = __webpack_require__(/*! ./property-detail/voltage */ "./static/js/property-detail/voltage.js");

var Thing =
/*#__PURE__*/
function () {
  /**
   * Thing constructor.
   *
   * @param {Object} description Thing description object.
   * @param {Number} format See Constants.ThingFormat
   * @param {Object} options Options for building the view.
   */
  function Thing(model, description, format, options) {
    _classCallCheck(this, Thing);

    var opts = options || {};
    var defaults = {
      on: OnOffDetail,
      level: LevelDetail,
      instantaneousPower: InstantaneousPowerDetail,
      voltage: VoltageDetail,
      current: CurrentDetail,
      frequency: FrequencyDetail,
      brightness: BrightnessDetail,
      color: ColorDetail,
      colorTemperature: ColorTemperatureDetail
    };
    this.name = description.name;
    this.type = description.type;
    this.model = model;
    this.listeners = [];
    this.connected = this.model.connected;

    if (Array.isArray(description['@type']) && description['@type'].length > 0) {
      this['@type'] = description['@type'];
    } else {
      this['@type'] = Utils.legacyTypeToCapabilities(this.type);
    }

    this.selectedCapability = description.selectedCapability;
    this.iconHref = description.iconHref || '';
    this.baseIcon = opts.baseIcon || '/optimized-images/thing-icons/thing.svg';
    this.format = format;
    this.displayedProperties = this.displayedProperties || {};
    this.displayedActions = this.displayedActions || {};

    if (format === Constants.ThingFormat.LINK_ICON) {
      this.container = document.getElementById('floorplan');
      this.x = description.floorplanX;
      this.y = description.floorplanY;
    } else {
      this.container = document.getElementById('things');
    }

    this.uiHref = null;

    if (description.links) {
      var _iteratorNormalCompletion = true;
      var _didIteratorError = false;
      var _iteratorError = undefined;

      try {
        for (var _iterator = description.links[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var link = _step.value;

          if (link.rel === 'alternate' && link.mediaType === 'text/html' && link.href.startsWith('http')) {
            this.uiHref = link.href;
            break;
          }
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return != null) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }
    } // Parse base URL of Thing


    if (description.href) {
      this.href = new URL(description.href, App.ORIGIN);
      this.eventsHref = `${this.href.pathname}/events?referrer=${encodeURIComponent(this.href.pathname)}`;
      this.id = decodeURIComponent(this.href.pathname.split('/').pop());
    } // Parse properties


    if (description.properties) {
      this.propertyDescriptions = {};

      for (var name in description.properties) {
        var property = description.properties[name];
        var href = property.href;

        if (!property.href) {
          continue;
        }

        this.propertyDescriptions[name] = property;
        var detail = void 0;

        switch (property['@type']) {
          case 'BooleanProperty':
            detail = new BooleanDetail(this, name, property);
            break;

          case 'OnOffProperty':
            detail = new OnOffDetail(this, name, property);
            break;

          case 'LevelProperty':
            detail = new LevelDetail(this, name, property);
            break;

          case 'BrightnessProperty':
            detail = new BrightnessDetail(this, name, property);
            break;

          case 'ColorProperty':
            detail = new ColorDetail(this, name, property);
            break;

          case 'ColorTemperatureProperty':
            detail = new ColorTemperatureDetail(this, name, property);
            break;

          case 'InstantaneousPowerProperty':
            detail = new InstantaneousPowerDetail(this, name, property);
            break;

          case 'CurrentProperty':
            detail = new CurrentDetail(this, name, property);
            break;

          case 'VoltageProperty':
            detail = new VoltageDetail(this, name, property);
            break;

          case 'FrequencyProperty':
            detail = new FrequencyDetail(this, name, property);
            break;

          case 'MotionProperty':
            detail = new MotionDetail(this, name, property);
            break;

          case 'OpenProperty':
            detail = new OpenDetail(this, name, property);
            break;

          case 'PushedProperty':
            detail = new PushedDetail(this, name, property);
            break;

          default:
            if (defaults.hasOwnProperty(name)) {
              var detailType = defaults[name];

              if (name === 'level' && this['@type'].includes('Light')) {
                detailType = defaults.brightness;
              }

              detail = new detailType(this, name, property);
            } else if (property.enum) {
              detail = new EnumDetail(this, name, property);
            } else {
              switch (property.type) {
                case 'string':
                  detail = new StringDetail(this, name, property);
                  break;

                case 'integer':
                case 'number':
                  detail = new NumberDetail(this, name, property);
                  break;

                case 'boolean':
                  detail = new BooleanDetail(this, name, property);
                  break;

                default:
                  console.warn('Unable to build property detail for:', property);
                  continue;
              }
            }

        }

        this.displayedProperties[name] = {
          href: href,
          detail: detail,
          property: property
        };
      }
    }

    if (format === Constants.ThingFormat.EXPANDED) {
      // Parse actions
      if (description.actions) {
        var _href;

        var _iteratorNormalCompletion2 = true;
        var _didIteratorError2 = false;
        var _iteratorError2 = undefined;

        try {
          for (var _iterator2 = description.links[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
            var _link = _step2.value;

            if (_link.rel === 'actions') {
              _href = _link.href;
              break;
            }
          }
        } catch (err) {
          _didIteratorError2 = true;
          _iteratorError2 = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion2 && _iterator2.return != null) {
              _iterator2.return();
            }
          } finally {
            if (_didIteratorError2) {
              throw _iteratorError2;
            }
          }
        }

        if (_href) {
          for (var _name in description.actions) {
            var action = description.actions[_name];
            this.displayedActions[_name] = {
              detail: new ActionDetail(this, _name, action, _href)
            };
          }
        }
      } // Parse events


      var menu = [];

      if (description.events) {
        this.displayEvents = true;
        menu.push({
          href: this.eventsHref,
          name: 'Event Log',
          icon: '/optimized-images/rules-icon.png'
        });
      } else {
        this.displayEvents = false;
      }

      menu.push({
        listener: this.handleEdit.bind(this),
        name: 'Edit',
        icon: '/optimized-images/edit-plain.svg'
      }, {
        listener: this.handleRemove.bind(this),
        name: 'Remove',
        icon: '/optimized-images/remove.svg'
      });
      App.buildOverflowMenu(menu);
      App.showOverflowButton();
    } else {
      App.hideOverflowButton();
    }

    this.findProperties();
    this.element = this.render(format);

    if (format === Constants.ThingFormat.EXPANDED) {
      this.attachExpandedView();

      if (!this.connected) {
        App.showPersistentMessage('Disconnected');
      }
    }

    this.onPropertyStatus = this.onPropertyStatus.bind(this);
    this.onEvent = this.onEvent.bind(this);
    this.onConnected = this.onConnected.bind(this);
    this.updateStatus();
  }
  /**
   * Find any properties required for this view.
   */


  _createClass(Thing, [{
    key: "findProperties",
    value: function findProperties() {}
    /**
     * HTML view for Thing.
     */

  }, {
    key: "attachExpandedView",
    value: function attachExpandedView() {
      var _arr = Object.values(this.displayedProperties);

      for (var _i = 0; _i < _arr.length; _i++) {
        var prop = _arr[_i];

        // only attach the first time.
        if ((!prop.hasOwnProperty('attached') || !prop.attached) && prop.hasOwnProperty('detail')) {
          prop.detail.attach();
          prop.attached = true;
        }
      }

      var _arr2 = Object.values(this.displayedActions);

      for (var _i2 = 0; _i2 < _arr2.length; _i2++) {
        var action = _arr2[_i2];

        // only attach the first time.
        if ((!action.hasOwnProperty('attached') || !action.attached) && action.hasOwnProperty('detail')) {
          action.detail.attach();
          action.attached = true;
        }
      }

      this.layout = new ThingDetailLayout(this, this.element.querySelectorAll('.thing-detail-container'));
    }
    /**
     * HTML icon view for Thing.
     */

  }, {
    key: "iconView",
    value: function iconView() {
      var href = `data-icon-href="${this.iconHref}"` || false;
      return `
      <webthing-custom-capability ${href}>
      </webthing-custom-capability>`;
    }
    /**
     * HTML link for Thing Detail view
     */

  }, {
    key: "detailLink",
    value: function detailLink() {
      return `<a href="${encodeURI(this.href)}" class="thing-details-link"></a>`;
    }
    /**
     * HTML link for custom UI.
     */

  }, {
    key: "uiLink",
    value: function uiLink() {
      return `<a href="${this.uiHref}" class="thing-ui-link" target="_blank"
               rel="noopener"></a>`;
    }
    /**
     * HTML view for Thing.
     */

  }, {
    key: "interactiveView",
    value: function interactiveView() {
      return `<div class="thing">
      ${this.uiHref ? this.uiLink() : ''}
      ${this.detailLink()}
      ${this.iconView()}
      <span class="thing-name">${Utils.escapeHtml(this.name)}</span>
    </div>`;
    }
    /**
     * HTML detail view for Thing.
     */

  }, {
    key: "expandedView",
    value: function expandedView() {
      var detailsHTML = '';

      var _arr3 = Object.values(this.displayedProperties);

      for (var _i3 = 0; _i3 < _arr3.length; _i3++) {
        var prop = _arr3[_i3];

        if (prop.hasOwnProperty('detail')) {
          detailsHTML += `<div class="thing-detail-container">${prop.detail.view()}</div>`;
        }
      }

      var _arr4 = Object.values(this.displayedActions);

      for (var _i4 = 0; _i4 < _arr4.length; _i4++) {
        var action = _arr4[_i4];

        if (action.hasOwnProperty('detail')) {
          detailsHTML += `<div class="thing-detail-container">${action.detail.view()}</div>`;
        }
      }

      return `<div class="thing">
      ${this.iconView()}
      ${detailsHTML}
    </div>`;
    }
    /**
     * Update the display for the provided property.
     *
     * @param {String} name Name of the property
     * @param {*} value Value of the property
     */

  }, {
    key: "updateProperty",
    value: function updateProperty(name, value) {
      if (this.format === Constants.ThingFormat.EXPANDED && this.displayedProperties.hasOwnProperty(name)) {
        this.displayedProperties[name].detail.update(value);
      }
    }
    /**
     * Set the provided property.
     *
     * @param {String} name Name of the property
     * @param {*} value Value of the property
     */

  }, {
    key: "setProperty",
    value: function setProperty(name, value) {
      this.model.setProperty(name, value);
    }
    /**
     * Update the status of Thing.
     */

  }, {
    key: "updateStatus",
    value: function updateStatus() {
      this.model.subscribe(Constants.PROPERTY_STATUS, this.onPropertyStatus);
      this.model.subscribe(Constants.EVENT_OCCURRED, this.onEvent);
      this.model.subscribe(Constants.CONNECTED, this.onConnected);
    }
    /**
     * Add event listener and store params to cleanup listeners
     * @param {Element} element
     * @param {Event} event
     * @param {Function} handler
     */

  }, {
    key: "registerEventListener",
    value: function registerEventListener(element, event, handler) {
      element.addEventListener(event, handler);
      this.listeners.push({
        element: element,
        event: event,
        handler: handler
      });
    }
    /**
     * Cleanup added listeners and subscribed events
     */

  }, {
    key: "cleanup",
    value: function cleanup() {
      var listener;

      while (typeof (listener = this.listeners.pop()) !== 'undefined') {
        listener.element.removeEventListener(listener.event, listener.handler);
      }

      this.model.unsubscribe(Constants.PROPERTY_STATUS, this.onPropertyStatus);
      this.model.unsubscribe(Constants.EVENT_OCCURRED, this.onEvent);
      this.model.unsubscribe(Constants.CONNECTED, this.onConnected);
    }
    /**
     * HTML-based view for Thing on the floorplan
     * @return {String}
     */

  }, {
    key: "linkIconView",
    value: function linkIconView() {
      return `<div
        class="floorplan-thing"
        data-x="${this.x}"
        data-y="${this.y}"
        data-href="${encodeURI(this.href)}"
        >
      ${this.iconView()}
      <div class="floorplan-thing-name">${Utils.escapeHtml(this.name)}</div>
    </div>`;
    }
    /**
     * Render Thing view and add to DOM.
     *
     * @param {Number} format See Constants.ThingFormat
     */

  }, {
    key: "render",
    value: function render(format) {
      var element = document.createElement('div');

      if (format == Constants.ThingFormat.LINK_ICON) {
        element.innerHTML = this.linkIconView().trim();
      } else if (format == Constants.ThingFormat.EXPANDED) {
        element.innerHTML = this.expandedView().trim();
      } else {
        element.innerHTML = this.interactiveView().trim();
      }

      return this.container.appendChild(element.firstChild);
    }
    /**
     * Handle an edit click event.
     */

  }, {
    key: "handleEdit",
    value: function handleEdit() {
      var newEvent = new CustomEvent('_contextmenu', {
        detail: {
          thingId: this.id,
          thingName: this.name,
          thingIcon: this.baseIcon,
          action: 'edit',
          capabilities: this['@type'],
          selectedCapability: this.selectedCapability,
          iconHref: this.iconHref
        }
      });
      window.dispatchEvent(newEvent);
    }
    /**
     * Handle a remove click event.
     */

  }, {
    key: "handleRemove",
    value: function handleRemove() {
      var newEvent = new CustomEvent('_contextmenu', {
        detail: {
          thingId: this.id,
          thingName: this.name,
          thingIcon: this.baseIcon,
          action: 'remove'
        }
      });
      window.dispatchEvent(newEvent);
    }
    /**
     * Handle a 'propertyStatus' message.
     * @param {Object} data Property data
     */

  }, {
    key: "onPropertyStatus",
    value: function onPropertyStatus(data) {
      for (var prop in data) {
        if (!this.displayedProperties.hasOwnProperty(prop)) {
          continue;
        }

        var value = data[prop];

        if (typeof value === 'undefined' || value === null) {
          continue;
        }

        this.updateProperty(prop, value);
      }
    }
    /**
     * Handle an 'event' message.
     * @param {Object} data Event data
     */

  }, {
    key: "onEvent",
    value: function onEvent(data) {
      if (!this.displayEvents) {
        return;
      }

      for (var name in data) {
        App.showMessage(`<a href="${this.eventsHref}">${Utils.escapeHtml(name)}</a>`, 3000);
      }
    }
    /**
     * Handle a 'connected' message.
     * @param {boolean} connected - New connectivity state
     */

  }, {
    key: "onConnected",
    value: function onConnected(connected) {
      this.connected = connected;

      if (this.format === Constants.ThingFormat.EXPANDED) {
        if (connected) {
          this.layout.svg.classList.add('connected');
          App.hidePersistentMessage();
        } else {
          this.layout.svg.classList.remove('connected');
          App.showPersistentMessage('Disconnected');
        }
      }

      if (connected) {
        this.element.classList.add('connected');
      } else {
        this.element.classList.remove('connected');
      }
    }
  }]);

  return Thing;
}();

module.exports = Thing;

/***/ }),

/***/ "./static/js/things.js":
/*!*****************************!*\
  !*** ./static/js/things.js ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Things Screen.
 *
 * UI for showing Things connected to the gateway.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */


__webpack_require__(/*! core-js/modules/es6.promise */ "./node_modules/core-js/modules/es6.promise.js");

__webpack_require__(/*! core-js/modules/es7.symbol.async-iterator */ "./node_modules/core-js/modules/es7.symbol.async-iterator.js");

__webpack_require__(/*! core-js/modules/es6.symbol */ "./node_modules/core-js/modules/es6.symbol.js");

__webpack_require__(/*! regenerator-runtime/runtime */ "./node_modules/regenerator-runtime/runtime.js");

__webpack_require__(/*! core-js/modules/web.dom.iterable */ "./node_modules/core-js/modules/web.dom.iterable.js");

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } } function _next(value) { step("next", value); } function _throw(err) { step("throw", err); } _next(); }); }; }

var page = __webpack_require__(/*! page */ "./node_modules/page/page.js");

var ActionInputForm = __webpack_require__(/*! ./action-input-form */ "./static/js/action-input-form.js");

var AddThingScreen = __webpack_require__(/*! ./add-thing */ "./static/js/add-thing.js");

var App = __webpack_require__(/*! ./app */ "./static/js/app.js");

var BinarySensor = __webpack_require__(/*! ./binary-sensor */ "./static/js/binary-sensor.js");

var ColorControl = __webpack_require__(/*! ./color-control */ "./static/js/color-control.js");

var Constants = __webpack_require__(/*! ./constants */ "./static/js/constants.js");

var DoorSensor = __webpack_require__(/*! ./door-sensor */ "./static/js/door-sensor.js");

var EnergyMonitor = __webpack_require__(/*! ./energy-monitor */ "./static/js/energy-monitor.js");

var EventList = __webpack_require__(/*! ./event-list */ "./static/js/event-list.js");

var Light = __webpack_require__(/*! ./light */ "./static/js/light.js");

var MotionSensor = __webpack_require__(/*! ./motion-sensor */ "./static/js/motion-sensor.js");

var MultiLevelSensor = __webpack_require__(/*! ./multi-level-sensor */ "./static/js/multi-level-sensor.js");

var MultiLevelSwitch = __webpack_require__(/*! ./multi-level-switch */ "./static/js/multi-level-switch.js");

var OnOffSwitch = __webpack_require__(/*! ./on-off-switch */ "./static/js/on-off-switch.js");

var PushButton = __webpack_require__(/*! ./push-button */ "./static/js/push-button.js");

var SmartPlug = __webpack_require__(/*! ./smart-plug */ "./static/js/smart-plug.js");

var Thing = __webpack_require__(/*! ./thing */ "./static/js/thing.js"); // eslint-disable-next-line no-unused-vars


var ThingsScreen = {
  NO_THINGS_MESSAGE: 'No devices yet. Click + to scan for available devices.',
  THING_NOT_FOUND_MESSAGE: 'Thing not found.',
  ACTION_NOT_FOUND_MESSAGE: 'Action not found.',
  EVENTS_NOT_FOUND_MESSAGE: 'This thing has no events.',

  /**
   * Initialise Things Screen.
   */
  init: function init() {
    var _this = this;

    this.thingsElement = document.getElementById('things');
    this.thingTitleElement = document.getElementById('thing-title');
    this.addButton = document.getElementById('add-button');
    this.menuButton = document.getElementById('menu-button');
    this.backButton = document.getElementById('back-button');
    this.backRef = '/things';
    this.backButton.addEventListener('click', function () {
      return page(_this.backRef);
    });
    this.addButton.addEventListener('click', AddThingScreen.show.bind(AddThingScreen));
    this.refreshThings = this.refreshThings.bind(this);
    this.things = [];
  },
  renderThing: function renderThing(thingModel, description, format) {
    var thing;

    if (description.selectedCapability) {
      switch (description.selectedCapability) {
        case 'OnOffSwitch':
          thing = new OnOffSwitch(thingModel, description, format);
          break;

        case 'MultiLevelSwitch':
          thing = new MultiLevelSwitch(thingModel, description, format);
          break;

        case 'ColorControl':
          thing = new ColorControl(thingModel, description, format);
          break;

        case 'EnergyMonitor':
          thing = new EnergyMonitor(thingModel, description, format);
          break;

        case 'BinarySensor':
          thing = new BinarySensor(thingModel, description, format);
          break;

        case 'MultiLevelSensor':
          thing = new MultiLevelSensor(thingModel, description, format);
          break;

        case 'SmartPlug':
          thing = new SmartPlug(thingModel, description, format);
          break;

        case 'Light':
          thing = new Light(thingModel, description, format);
          break;

        case 'DoorSensor':
          thing = new DoorSensor(thingModel, description, format);
          break;

        case 'MotionSensor':
          thing = new MotionSensor(thingModel, description, format);
          break;

        case 'PushButton':
          thing = new PushButton(thingModel, description, format);
          break;

        default:
          thing = new Thing(thingModel, description, format);
          break;
      }
    } else {
      switch (description.type) {
        case 'onOffSwitch':
          thing = new OnOffSwitch(thingModel, description, format);
          break;

        case 'binarySensor':
          thing = new BinarySensor(thingModel, description, format);
          break;

        case 'multiLevelSensor':
          thing = new MultiLevelSensor(thingModel, description, format);
          break;

        case 'onOffLight':
        case 'onOffColorLight':
        case 'dimmableLight':
        case 'dimmableColorLight':
          thing = new Light(thingModel, description, format);
          break;

        case 'multiLevelSwitch':
          thing = new MultiLevelSwitch(thingModel, description, format);
          break;

        case 'smartPlug':
          thing = new SmartPlug(thingModel, description, format);
          break;

        default:
          thing = new Thing(thingModel, description, format);
          break;
      }
    }

    this.things.push(thing);
    return thing;
  },

  /**
   * Show things screen.
   *
   * @param {String} thingId Optional thing ID to show, otherwise show all.
   * @param {String} actionName Optional action input form to show.
   * @param {Boolean} events Whether or not to display the events screen.
   */
  show: function show(thingId, actionName, events, queryString) {
    document.getElementById('speech-wrapper').classList.remove('assistant');
    var params = new URLSearchParams(`?${queryString || ''}`);

    if (params.has('referrer')) {
      this.backRef = params.get('referrer');
    } else {
      this.backRef = '/things';
    }

    App.hideOverflowButton();

    if (thingId) {
      this.addButton.classList.add('hidden');
      this.backButton.classList.remove('hidden');
      this.menuButton.classList.add('hidden');
      this.thingTitleElement.classList.remove('hidden');
      this.thingsElement.classList.add('single-thing');

      if (actionName) {
        this.showActionInputForm(thingId, actionName);
      } else if (events) {
        this.showEvents(thingId);
      } else {
        this.showThing(thingId);
      }
    } else {
      this.addButton.classList.remove('hidden');
      this.menuButton.classList.remove('hidden');
      this.backButton.classList.add('hidden');
      this.thingTitleElement.classList.add('hidden');
      this.thingsElement.classList.remove('single-thing');
      this.showThings();
      var messageArea = document.getElementById('message-area');

      if (App.blockMessages && messageArea.innerText === 'Disconnected') {
        App.hidePersistentMessage();
      }
    }
  },
  refreshThings: function refreshThings(things) {
    var _this2 = this;

    var thing;

    while (typeof (thing = this.things.pop()) !== 'undefined') {
      thing.cleanup();
    }

    if (things.size === 0) {
      this.thingsElement.innerHTML = this.NO_THINGS_MESSAGE;
    } else {
      this.thingsElement.innerHTML = '';
      things.forEach(function (description, thingId) {
        App.gatewayModel.getThingModel(thingId).then(function (thingModel) {
          _this2.renderThing(thingModel, description);
        });
      });
    }
  },

  /**
   * Display all connected web things.
   */
  showThings: function showThings() {
    App.gatewayModel.unsubscribe(Constants.REFRESH_THINGS, this.refreshThing);
    App.gatewayModel.unsubscribe(Constants.DELETE_THINGS, this.refreshThing);
    App.gatewayModel.subscribe(Constants.DELETE_THINGS, this.refreshThings);
    App.gatewayModel.subscribe(Constants.REFRESH_THINGS, this.refreshThings, true);
  },

  /**
   * Display a single Thing.
   *
   * @param {String} thingId The ID of the Thing to show.
   */
  showThing: function showThing(thingId) {
    var _this3 = this;

    App.gatewayModel.unsubscribe(Constants.REFRESH_THINGS, this.refreshThing);
    App.gatewayModel.unsubscribe(Constants.DELETE_THINGS, this.refreshThing);
    App.gatewayModel.unsubscribe(Constants.REFRESH_THINGS, this.refreshThings);
    App.gatewayModel.unsubscribe(Constants.DELETE_THINGS, this.refreshThings);

    this.refreshThing = function () {
      return App.gatewayModel.getThing(thingId).then(
      /*#__PURE__*/
      function () {
        var _ref = _asyncToGenerator(
        /*#__PURE__*/
        regeneratorRuntime.mark(function _callee(description) {
          var thingModel, thing, iconEl, customIconEl, speechWrapper;
          return regeneratorRuntime.wrap(function _callee$(_context) {
            while (1) {
              switch (_context.prev = _context.next) {
                case 0:
                  _this3.thingsElement.innerHTML = '';
                  _context.next = 3;
                  return App.gatewayModel.getThingModel(thingId);

                case 3:
                  thingModel = _context.sent;
                  thing = _this3.renderThing(thingModel, description, Constants.ThingFormat.EXPANDED);
                  iconEl = document.getElementById('thing-title-icon');
                  customIconEl = document.getElementById('thing-title-custom-icon');

                  if (thing.iconHref && thing.selectedCapability === 'Custom') {
                    customIconEl.iconHref = thing.iconHref;
                    customIconEl.classList.remove('hidden');
                    iconEl.classList.add('hidden');
                  } else {
                    iconEl.src = thing.baseIcon;
                    iconEl.classList.remove('hidden');
                    customIconEl.classList.add('hidden');
                  }

                  document.getElementById('thing-title-name').innerText = thing.name;
                  speechWrapper = document.getElementById('speech-wrapper');

                  if (speechWrapper.classList.contains('hidden')) {
                    _this3.thingTitleElement.classList.remove('speech-enabled');
                  } else {
                    _this3.thingTitleElement.classList.add('speech-enabled');
                  }

                  _this3.thingTitleElement.classList.remove('hidden');

                case 12:
                case "end":
                  return _context.stop();
              }
            }
          }, _callee, this);
        }));

        return function (_x) {
          return _ref.apply(this, arguments);
        };
      }()).catch(function (e) {
        console.error(`Thing id ${thingId} not found ${e}`);
        _this3.thingsElement.innerHTML = _this3.THING_NOT_FOUND_MESSAGE;
      });
    };

    App.gatewayModel.subscribe(Constants.REFRESH_THINGS, this.refreshThing, true);
    App.gatewayModel.subscribe(Constants.DELETE_THINGS, this.refreshThing);
  },

  /**
   * Display an action input form.
   *
   * @param {String} thingId The ID of the Thing to show.
   * @param {String} actionName The name of the action to show.
   */
  showActionInputForm: function showActionInputForm(thingId, actionName) {
    var _this4 = this;

    App.gatewayModel.getThing(thingId).then(function (description) {
      _this4.thingsElement.innerHTML = '';

      if (!description.hasOwnProperty('actions') || !description.actions.hasOwnProperty(actionName) || !description.actions[actionName].hasOwnProperty('input')) {
        _this4.thingsElement.innerHTML = _this4.ACTION_NOT_FOUND_MESSAGE;
        return;
      }

      var href;
      var _iteratorNormalCompletion = true;
      var _didIteratorError = false;
      var _iteratorError = undefined;

      try {
        for (var _iterator = description.links[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var link = _step.value;

          if (link.rel === 'actions') {
            href = link.href;
            break;
          }
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return != null) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }

      var icon;

      if (description.selectedCapability) {
        switch (description.selectedCapability) {
          case 'OnOffSwitch':
            icon = '/optimized-images/thing-icons/on_off_switch.svg';
            break;

          case 'MultiLevelSwitch':
            icon = '/optimized-images/thing-icons/multi_level_switch.svg';
            break;

          case 'ColorControl':
            icon = '/optimized-images/thing-icons/color_control.svg';
            break;

          case 'EnergyMonitor':
            icon = '/optimized-images/thing-icons/energy_monitor.svg';
            break;

          case 'BinarySensor':
            icon = '/optimized-images/thing-icons/binary_sensor.svg';
            break;

          case 'MultiLevelSensor':
            icon = '/optimized-images/thing-icons/multi_level_sensor.svg';
            break;

          case 'SmartPlug':
            icon = '/optimized-images/thing-icons/smart_plug.svg';
            break;

          case 'Light':
            icon = '/optimized-images/thing-icons/light.svg';
            break;

          case 'DoorSensor':
            icon = '/optimized-images/thing-icons/door_sensor.svg';
            break;

          case 'MotionSensor':
            icon = '/optimized-images/thing-icons/motion_sensor.svg';
            break;

          case 'PushButton':
            icon = '/optimized-images/thing-icons/push_button.svg';
            break;

          case 'Custom':
          default:
            icon = '/optimized-images/thing-icons/thing.svg';
            break;
        }
      } else {
        switch (description.type) {
          case 'onOffSwitch':
            icon = '/optimized-images/thing-icons/on_off_switch.svg';
            break;

          case 'binarySensor':
            icon = '/optimized-images/thing-icons/binary_sensor.svg';
            break;

          case 'multiLevelSensor':
            icon = '/optimized-images/thing-icons/multi_level_sensor.svg';
            break;

          case 'onOffLight':
          case 'onOffColorLight':
          case 'dimmableLight':
          case 'dimmableColorLight':
            icon = '/optimized-images/thing-icons/light.svg';
            break;

          case 'multiLevelSwitch':
            icon = '/optimized-images/thing-icons/multi_level_switch.svg';
            break;

          case 'smartPlug':
            icon = '/optimized-images/thing-icons/smart_plug.svg';
            break;

          default:
            icon = '/optimized-images/thing-icons/thing.svg';
            break;
        }
      }

      var iconEl = document.getElementById('thing-title-icon');
      var customIconEl = document.getElementById('thing-title-custom-icon');

      if (description.iconHref && description.selectedCapability === 'Custom') {
        customIconEl.iconHref = description.iconHref;
        customIconEl.classList.remove('hidden');
        iconEl.classList.add('hidden');
      } else {
        iconEl.src = icon;
        iconEl.classList.remove('hidden');
        customIconEl.classList.add('hidden');
      }

      document.getElementById('thing-title-name').innerText = description.name;
      _this4.thingsElement.innerHTML = '';
      new ActionInputForm(href, actionName, description.actions[actionName].label, description.actions[actionName].input);
    }).catch(function (e) {
      console.error(`Thing id ${thingId} not found ${e}`);
      _this4.thingsElement.innerHTML = _this4.THING_NOT_FOUND_MESSAGE;
    });
  },

  /**
   * Display an events list.
   *
   * @param {String} thingId The ID of the Thing to show.
   */
  showEvents: function showEvents(thingId) {
    var _this5 = this;

    if (typeof this.eventList !== 'undefined') {
      this.eventList.cleanup();
    }

    App.gatewayModel.getThing(thingId).then(
    /*#__PURE__*/
    function () {
      var _ref2 = _asyncToGenerator(
      /*#__PURE__*/
      regeneratorRuntime.mark(function _callee2(description) {
        var thingModel, icon, iconEl, customIconEl;
        return regeneratorRuntime.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                _this5.thingsElement.innerHTML = '';

                if (description.hasOwnProperty('events')) {
                  _context2.next = 4;
                  break;
                }

                _this5.thingsElement.innerHTML = _this5.EVENTS_NOT_FOUND_MESSAGE;
                return _context2.abrupt("return");

              case 4:
                _context2.next = 6;
                return App.gatewayModel.getThingModel(thingId);

              case 6:
                thingModel = _context2.sent;

                if (!description.selectedCapability) {
                  _context2.next = 37;
                  break;
                }

                _context2.t0 = description.selectedCapability;
                _context2.next = _context2.t0 === 'OnOffSwitch' ? 11 : _context2.t0 === 'MultiLevelSwitch' ? 13 : _context2.t0 === 'ColorControl' ? 15 : _context2.t0 === 'EnergyMonitor' ? 17 : _context2.t0 === 'BinarySensor' ? 19 : _context2.t0 === 'MultiLevelSensor' ? 21 : _context2.t0 === 'SmartPlug' ? 23 : _context2.t0 === 'Light' ? 25 : _context2.t0 === 'DoorSensor' ? 27 : _context2.t0 === 'MotionSensor' ? 29 : _context2.t0 === 'PushButton' ? 31 : _context2.t0 === 'Custom' ? 33 : 33;
                break;

              case 11:
                icon = '/optimized-images/thing-icons/on_off_switch.svg';
                return _context2.abrupt("break", 35);

              case 13:
                icon = '/optimized-images/thing-icons/multi_level_switch.svg';
                return _context2.abrupt("break", 35);

              case 15:
                icon = '/optimized-images/thing-icons/color_control.svg';
                return _context2.abrupt("break", 35);

              case 17:
                icon = '/optimized-images/thing-icons/energy_monitor.svg';
                return _context2.abrupt("break", 35);

              case 19:
                icon = '/optimized-images/thing-icons/binary_sensor.svg';
                return _context2.abrupt("break", 35);

              case 21:
                icon = '/optimized-images/thing-icons/multi_level_sensor.svg';
                return _context2.abrupt("break", 35);

              case 23:
                icon = '/optimized-images/thing-icons/smart_plug.svg';
                return _context2.abrupt("break", 35);

              case 25:
                icon = '/optimized-images/thing-icons/light.svg';
                return _context2.abrupt("break", 35);

              case 27:
                icon = '/optimized-images/thing-icons/door_sensor.svg';
                return _context2.abrupt("break", 35);

              case 29:
                icon = '/optimized-images/thing-icons/motion_sensor.svg';
                return _context2.abrupt("break", 35);

              case 31:
                icon = '/optimized-images/thing-icons/push_button.svg';
                return _context2.abrupt("break", 35);

              case 33:
                icon = '/optimized-images/thing-icons/thing.svg';
                return _context2.abrupt("break", 35);

              case 35:
                _context2.next = 54;
                break;

              case 37:
                _context2.t1 = description.type;
                _context2.next = _context2.t1 === 'onOffSwitch' ? 40 : _context2.t1 === 'binarySensor' ? 42 : _context2.t1 === 'multiLevelSensor' ? 44 : _context2.t1 === 'onOffLight' ? 46 : _context2.t1 === 'onOffColorLight' ? 46 : _context2.t1 === 'dimmableLight' ? 46 : _context2.t1 === 'dimmableColorLight' ? 46 : _context2.t1 === 'multiLevelSwitch' ? 48 : _context2.t1 === 'smartPlug' ? 50 : 52;
                break;

              case 40:
                icon = '/optimized-images/thing-icons/on_off_switch.svg';
                return _context2.abrupt("break", 54);

              case 42:
                icon = '/optimized-images/thing-icons/binary_sensor.svg';
                return _context2.abrupt("break", 54);

              case 44:
                icon = '/optimized-images/thing-icons/multi_level_sensor.svg';
                return _context2.abrupt("break", 54);

              case 46:
                icon = '/optimized-images/thing-icons/light.svg';
                return _context2.abrupt("break", 54);

              case 48:
                icon = '/optimized-images/thing-icons/multi_level_switch.svg';
                return _context2.abrupt("break", 54);

              case 50:
                icon = '/optimized-images/thing-icons/smart_plug.svg';
                return _context2.abrupt("break", 54);

              case 52:
                icon = '/optimized-images/thing-icons/thing.svg';
                return _context2.abrupt("break", 54);

              case 54:
                iconEl = document.getElementById('thing-title-icon');
                customIconEl = document.getElementById('thing-title-custom-icon');

                if (description.iconHref && description.selectedCapability === 'Custom') {
                  customIconEl.iconHref = description.iconHref;
                  customIconEl.classList.remove('hidden');
                  iconEl.classList.add('hidden');
                } else {
                  iconEl.src = icon;
                  iconEl.classList.remove('hidden');
                  customIconEl.classList.add('hidden');
                }

                document.getElementById('thing-title-name').innerText = description.name;
                _this5.thingsElement.innerHTML = '';
                _this5.eventList = new EventList(thingModel, description);

              case 60:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      return function (_x2) {
        return _ref2.apply(this, arguments);
      };
    }()).catch(function (e) {
      console.error(`Thing id ${thingId} not found ${e}`);
      _this5.thingsElement.innerHTML = _this5.THING_NOT_FOUND_MESSAGE;
    });
  }
};
module.exports = ThingsScreen;

/***/ }),

/***/ "./static/js/user.js":
/*!***************************!*\
  !*** ./static/js/user.js ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * User.
 *
 * Represents an individual user.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */


var API = __webpack_require__(/*! ./api */ "./static/js/api.js");

var page = __webpack_require__(/*! page */ "./node_modules/page/page.js");

var Utils = __webpack_require__(/*! ./utils */ "./static/js/utils.js");
/**
 * User constructor.
 *
 * @param Object description User metadata object.
 */


var User = function User(metadata) {
  this.email = metadata.email;
  this.name = metadata.name;
  this.id = metadata.id;
  this.loggedIn = metadata.loggedIn;
  this.container = document.getElementById('users-list');
  this.render();
};
/**
 * HTML view for User.
 */


User.prototype.view = function () {
  return `
    <li id="user-item-${Utils.escapeHtml(this.id)}" class="user-item">
      <div class="user-settings-header">
        <span class="user-settings-name">${Utils.escapeHtml(this.name)}</span>
        <span class="user-settings-description">
          ${Utils.escapeHtml(this.email)}
        </span>
      </div>
      <div class="user-settings-controls">
        <button id="user-remove-${Utils.escapeHtml(this.id)}"
          class="text-button user-settings-remove">
          Remove
        </button>
        <button id="user-edit-${Utils.escapeHtml(this.id)}"
          class="text-button user-settings-edit">
          Edit
        </button>
      </div>
    </li>`;
};
/**
 * Render User view and add to DOM.
 */


User.prototype.render = function () {
  this.container.insertAdjacentHTML('beforeend', this.view());
  var removeButton = document.getElementById(`user-remove-${Utils.escapeHtml(this.id)}`);
  removeButton.addEventListener('click', this.handleRemove.bind(this));
  var editButton = document.getElementById(`user-edit-${Utils.escapeHtml(this.id)}`);
  editButton.addEventListener('click', this.handleEdit.bind(this));
};
/**
 * Handle a click on the remove button.
 */


User.prototype.handleRemove = function () {
  var _this = this;

  API.deleteUser(this.id).then(function () {
    var el = document.getElementById(`user-item-${Utils.escapeHtml(_this.id)}`);
    el.parentNode.removeChild(el);

    if (_this.loggedIn) {
      API.logout().then(function () {
        window.location.href = '/login';
      });
    }
  }).catch(function (err) {
    console.error(`Failed to delete user: ${_this.email}\n${err}`);
  });
};
/**
 * Handle a click on the edit button.
 */


User.prototype.handleEdit = function () {
  page(`/settings/users/edit/${encodeURIComponent(this.id)}`);
};

module.exports = User;

/***/ }),

/***/ "./static/js/utils.js":
/*!****************************!*\
  !*** ./static/js/utils.js ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Utility functions.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */


__webpack_require__(/*! core-js/modules/es7.array.includes */ "./node_modules/core-js/modules/es7.array.includes.js");

__webpack_require__(/*! core-js/modules/es6.array.sort */ "./node_modules/core-js/modules/es6.array.sort.js");

__webpack_require__(/*! core-js/modules/es6.regexp.to-string */ "./node_modules/core-js/modules/es6.regexp.to-string.js");

__webpack_require__(/*! core-js/modules/es6.regexp.replace */ "./node_modules/core-js/modules/es6.regexp.replace.js");

var Utils = {
  /**
   * @param {String} str
   * @return {String} the string with the first letter capitalized
   */
  capitalize: function capitalize(str) {
    return str[0].toUpperCase() + str.substr(1);
  },
  escapeHtml: function escapeHtml(text) {
    if (typeof text !== 'string') {
      text = `${text}`;
    }

    return text.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/"/g, '&quot;').replace(/'/g, '&#039;').replace(/°/g, '&deg;');
  },
  escapeHtmlForIdClass: function escapeHtmlForIdClass(text) {
    if (typeof text !== 'string') {
      text = `${text}`;
    }

    text = text.replace(/[^_a-zA-Z0-9-]/g, '_');

    if (/^[0-9-]/.test(text)) {
      text = `_${text}`;
    }

    return text;
  },
  fuzzyTime: function fuzzyTime(date) {
    var now = new Date();
    var delta = Math.round((now - date) / 1000);
    var minute = 60;
    var hour = minute * 60;
    var day = hour * 24;
    var week = day * 7;
    var month = day * 30;
    var year = day * 365;
    var fuzzy;

    if (delta < 5) {
      fuzzy = 'now';
    } else if (delta < minute) {
      fuzzy = `${delta} secs ago`;
    } else if (delta < 2 * minute) {
      fuzzy = '1 min ago';
    } else if (delta < hour) {
      fuzzy = `${Math.floor(delta / minute)} mins ago`;
    } else if (delta < 2 * hour) {
      fuzzy = '1 hour ago';
    } else if (delta < day) {
      fuzzy = `${Math.floor(delta / hour)} hours ago`;
    } else if (delta < 2 * day) {
      fuzzy = '1 day ago';
    } else if (delta < week) {
      fuzzy = `${Math.floor(delta / day)} days ago`;
    } else if (delta < 2 * week) {
      fuzzy = '1 week ago';
    } else if (delta < month) {
      fuzzy = `${Math.floor(delta / week)} weeks ago`;
    } else if (delta < 2 * month) {
      fuzzy = '1 month ago';
    } else if (delta < year) {
      fuzzy = `${Math.floor(delta / month)} months ago`;
    } else if (delta < 2 * year) {
      fuzzy = '1 year ago';
    } else {
      fuzzy = `${Math.floor(delta / year)} years ago`;
    }

    return fuzzy;
  },
  debounce: function debounce(delay, callback) {
    return Utils.throttle(delay, callback, true);
  },
  throttle: function throttle(delay, callback) {
    var debounceMode = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
    var timeout = null;
    var lastExec = 0;
    var throttleMode = !debounceMode;
    return function wrapper() {
      var elapsed = Number(new Date()) - lastExec;
      var args = arguments;

      var exec = function exec() {
        lastExec = Number(new Date());
        callback(args);
      };

      if (timeout) {
        clearTimeout(timeout);
      }

      if (throttleMode === true && elapsed > delay) {
        exec();
      } else {
        timeout = setTimeout(exec, debounceMode ? delay : delay - elapsed);
      }
    };
  },
  unitNameToAbbreviation: function unitNameToAbbreviation(unit) {
    switch (unit.toLowerCase()) {
      case 'volt':
      case 'volts':
        return 'V';

      case 'hertz':
        return 'Hz';

      case 'amp':
      case 'amps':
      case 'ampere':
      case 'amperes':
        return 'A';

      case 'watt':
      case 'watts':
        return 'W';

      case 'percent':
        return '%';

      case 'degree fahrenheit':
      case 'degrees fahrenheit':
      case 'fahrenheit':
        return '°F';

      case 'degree celsius':
      case 'degrees celsius':
      case 'celsius':
        return '°C';

      case 'kelvin':
        return 'K';

      case 'meter':
      case 'meters':
      case 'metre':
      case 'metres':
        return 'm';

      case 'day':
      case 'days':
        return 'd';

      case 'hour':
      case 'hours':
        return 'h';

      case 'minute':
      case 'minutes':
        return 'min';

      case 'second':
      case 'seconds':
        return 's';

      case 'millisecond':
      case 'milliseconds':
        return 'ms';

      default:
        return unit;
    }
  },
  colorTemperatureToRGB: function colorTemperatureToRGB(value) {
    /**
     * Algorithm found here:
     * http://www.tannerhelland.com/4435/convert-temperature-rgb-algorithm-code/
     */
    value /= 100;
    var r;

    if (value <= 66) {
      r = 255;
    } else {
      r = value - 60;
      r = 329.698727446 * Math.pow(r, -0.1332047592);
      r = Math.max(r, 0);
      r = Math.min(r, 255);
    }

    var g;

    if (value <= 66) {
      g = value;
      g = 99.4708025861 * Math.log(g) - 161.1195681661;
    } else {
      g = value - 60;
      g = 288.1221695283 * Math.pow(g, -0.0755148492);
    }

    g = Math.max(g, 0);
    g = Math.min(g, 255);
    var b;

    if (value >= 66) {
      b = 255;
    } else if (value <= 19) {
      b = 0;
    } else {
      b = value - 10;
      b = 138.5177312231 * Math.log(b) - 305.0447927307;
      b = Math.max(b, 0);
      b = Math.min(b, 255);
    }

    r = Math.round(r).toString(16);
    g = Math.round(g).toString(16);
    b = Math.round(b).toString(16);
    return `#${r}${g}${b}`;
  },
  legacyTypeToCapabilities: function legacyTypeToCapabilities(type) {
    switch (type) {
      case 'binarySensor':
        return ['BinarySensor'];

      case 'multiLevelSensor':
        // legacy multiLevelSensor includes an 'on' member
        return ['BinarySensor', 'MultiLevelSensor'];

      case 'onOffLight':
      case 'dimmableLight':
        return ['OnOffSwitch', 'Light'];

      case 'onOffColorLight':
      case 'dimmableColorLight':
        return ['OnOffSwitch', 'Light', 'ColorControl'];

      case 'multiLevelSwitch':
        return ['OnOffSwitch', 'MultiLevelSwitch'];

      case 'onOffSwitch':
        return ['OnOffSwitch'];

      case 'smartPlug':
        return ['OnOffSwitch', 'SmartPlug', 'EnergyMonitor'];

      default:
        return [];
    }
  },
  sortCapabilities: function sortCapabilities(capabilities) {
    // copy the array, as we're going to sort in place.
    var list = capabilities.slice();
    var priority = ['SmartPlug', 'Light', 'MultiLevelSwitch', 'OnOffSwitch', 'ColorControl', 'EnergyMonitor', 'DoorSensor', 'MotionSensor', 'PushButton', 'MultiLevelSensor', 'BinarySensor'];
    list.sort(function (a, b) {
      if (!priority.includes(a) && !priority.includes(b)) {
        return 0;
      } else if (!priority.includes(a)) {
        return 1;
      } else if (!priority.includes(b)) {
        return -1;
      }

      return priority.indexOf(a) - priority.indexOf(b);
    });
    return list;
  }
};
module.exports = Utils;

/***/ }),

/***/ 0:
/*!**********************************************************!*\
  !*** multi ./static/js/check-user.js ./static/js/app.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ./static/js/check-user.js */"./static/js/check-user.js");
module.exports = __webpack_require__(/*! ./static/js/app.js */"./static/js/app.js");


/***/ })

/******/ });
//# sourceMappingURL=71ea1be41cdf77dc8352-app.js.map